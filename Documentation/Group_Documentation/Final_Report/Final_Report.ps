%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: Final_Report.dvi
%%CreationDate: Tue Jun 12 15:26:02 2018
%%Pages: 38
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: URWPalladioL-Roma URWPalladioL-Bold NimbusSanL-Bold
%%+ NimbusSanL-Regu NimbusSanL-ReguItal URWPalladioL-BoldItal
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter Final_Report.dvi -o
%+ Final_Report.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.06.12:1526
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore}bind
def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave
pgfsoa .setopacityalpha stroke grestore}bind def}bind def /pgffoa 1
def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/UniqueID 5020902 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748071
694BCE70111394D24DCEA030AE4C07AECAC39144621A6B719682FF74DB5C081C
B538F17221F8D06EAAD43B64DA5CF93030CB93DD54FCC5B44980F2AC6A66C512
54F71283450DFCA305E0B134FC95E54C2699C18624EBE6A7D0067E306EADCFE5
2D2A78AA02574548893EE05FFD60CB41E00B2E7761AA55732EFE6EE3C19EEF6B
179276229BA324E59A81107FFFAE0685C7C24E70ACB8564454277C41C28075AC
96964C61BD933742996058691C47B09CEBE352FC29A63119C731B3FC8D78A9E3
69F922CA6454BC1F6CFD1E03B285AFC3D8A7C81B83F0D950DAD2F3E562353B9A
1D56DABD05371F9479BFA4CAEC5CBAAC37C200F6E27BB35E591601EBFF9580F3
78E3BF2E599FF22A1434E7D661083C7F8D02F91CCD580EA19FC752DC79692238
0B10F1F30E98E1E0ED657429F1381D1B03331A3CC98E1AF521B1414EE94D14C8
7D708250798164F82B27010F365EFE7343AD67273FF8D268877C3A3B197F345C
0371FAF13A52C8F8C873BFC1C06D84B1DACB2C0810F2BE86F161B73546915E06
78897FC70879132B42E04AD6D071E66D7D2AD91695531C9FBF8851353020183E
58C06DD660B1402EE393F1238AAC52C4DDC75AF7826C57FEFF7EF2731DCB114E
CEB846DD1ACB500ED7F8880BB8CA52C667FF8F76A7982C15E41F060A0D290405
89135BEDEECAFE499CB8A166D754FF391F37EE6C05782B98DF6D611220003568
37B77C890909C4B1134246C9A741A4F649D40D503DA7B4EE683365C2F0D4CD21
584E3BADB222A9B573EFAEEA5D8C588DE556745DA3E386BBD02547AF7A9E51EA
D2D9A4C9C6B49ECBA54DD1C476AEB59DD09C849952BCA75DA0B435D00A5820BD
65ED041010A4DF92EE50089F30F3C4ADE4D307305271D998208A849BB7A3BBDE
47CDE4EDB261785159B2434FB93F84965C83D2B60A61006E0CBC220A46574786
52DE031B4C8B87DAE14E7A21051CB2CDA75019D916C0B00C31197922313F4745
4E914E409D64B390B0BB01EA4EDC5BD1C45D3C19A4FAB3C2DFBF9A51C25208EB
2CCBA1DEBA9FD19F3D374A7A0A02E4EB6022E4B252673EDE9EDF1FDFED484210
15334C357DE5E77ED37FA9C95C443AA946A7630D1877AFB2960200262B4D7A4D
0F93E258776F192CA563FB7329421CFA50CBF14C54000BC2B7B710327A54118E
046DCB544BE1918E60D2350DEA450CB3380A1FD5ABF908A1CB6B4E498A7D0BCC
C0AA7E399A663A762F053D0B52B1822A6AE6CAD74D3B99C02A71C62C9ADCEA8E
A947CC9AC127DDD6EB7831B68BCAE1C60508C5C8D4256E26717DE7B1D8730C05
D71C20BE007548B36190D2CE0DA9A9950B445244F3388E1A1F41EDE0435CEE14
8BBA045721F5453E5E8E61DB18961F35D88D329FC716C6FCD2027BF1EF29CA9E
03BA80D7D39FF20536F140D86E166D985E9C65C30DE7EB93474D326D6B94EF6E
B5B52BDD8E707C3B6C967B4EA91E54676AE2916272B91E51F8172E9D91A3654F
D78E8833F33E0485B6415584C1A26FC02CF2625CE95B5F1C575C28144E1D3C8C
F5473533C319C4718CD7FA6107B9CAB16964091FA96AFA5CDA0708E4DB27CD7F
653440B2F029FD1AF1257B7F2646476D2CA1B2A559D6A6D15305D6E18C134A63
9DFFEDC7CECCF803BDC32332A0A4BF2AEBCD61E9F7ED932DF27A6015173B7448
B6598F58EBF57BBA28693A71E203F0353C287A536802CB5AFD1AC75D9437C56F
D0CAD7BEE7B634B91AC01D32D59AB7D1088CFF6B2CBCD4F0ACBF7461E740F836
B86FF1932DDD42A6E9E255824F449D32DD89278CE07477F4E7F70B87C8C31CAE
34F99F84C51373276B176EF70E1EFAAB12505FF0ADE0937D06768A30043BDBCC
81EAE2B1D7937A0999396D12CB39D82EB018C725E04544740B8A9A7D06E2D7E3
65E78C98352F45DD107BAE845736A16B54CEDF7EDC79D76C733F8928DBD844CF
DBBAA4F088E7B3D1A3B98432130E58BE82F8C2FECE54586CAFB124DC630BCEF9
C7F4A68682DA1BB25211FF0D7993BC5B9D0CC29C0636C0625F132E37711D486A
3293567BF875CF68E2C495C26357420274FDC8B956D4C927A8CAE1AB53925821
AC21FDB04698178512E95DAC125906F00FAB8B64C55A82AFC97612AB1FBD2C8A
7B1809C77E499CE1F4393EE45C3DBD56DF78DC1C35492F5F0A70F5E7CF5EA3E7
7B10B7501F99886B61189F7993E09BF8A16F034D874EC69FB5136C7C6E3D88BB
9FF1A1AF4513F482467C5FB55A1E07B7137D3ADE45B5EEE6F0DCB4DA6A768BF4
5613F2E36B50A06873A0A4C76F5A41F286359DE6478BB543D7FFC6571F6B3BAD
2616A47C212E6BFBF21F45B61B308BF392DBADAA49C5F2F5D392A8CDA0FC896E
6C364B0A1D0024959FCB371945D92D19B15D36DE37F4F87405DDD8378A4E6A32
AA0D5F1BC8B7B8EC0C2D61BD755B83840F2FC0BBAF5DBE0AFDBE5E831E869BE4
2F20FF55705F6D0241C818915209F46869F91933ABB3693F0B0700AEBD29E321
D49DC4899D77821BA8F2866640D0AFD25A690F41A83293BA9B2B19817DCFF57A
A5B7EC81199B01A8F6BDE4331C68F050159D3DC5170B47A56DC84C2A0F115515
07B312CB0A794B409E3CF43653E2EEB1EAA70101776D27840B4D518682BD0E27
E732032FAABBC0B2E3A4AC9D33DA2C24C59935F3E5C6AC6585BB5BE2D1B14C12
E49B9470348BFE6FD5B699FFF46C561881CF1831419E23F0E01F96CA339DD716
67B6177B5467147590594BBD1A61119B683871E737E7B0F7AA8A52171621B628
88A926C4B58D21C77B5DA5D2E2EE2931082F0CE73E621E8F9AF28636B22B548A
07C4ED454D344592BE6F73490AAC43A62DE729A93136C0B1415CBB3BE6E4C9C9
F47367E27E71DD7598CF0BCB87F70F831D9CFEF32E5140216643C963F4DC6A15
ACF97B584A60A0DA4574EE68D8EDFDBEAF4BA6FF5F88EC5382F636BA10F7FA5F
E275427B557502410BEC4090C4324B6E5A433B01E2B72A1C9F87063CAA8CF5E2
C522C3112E57D5821682D4067EFDF66CEB19AF261A0DE8A2D0A105A48DD05ABA
090A06F218BE254E537949A7770A303AF46B360322673D4192C80C15FF1A7EFE
6CF575B3623C424B90DD8AC9A07635C73B2E0FC0CC8AD9EC2CDDB4D6EB972C49
69EF977B4A4C0905E03E363288B3812D448C9B5AAAA2FDF1A371C8F3002926A9
310FAC18F87876E7CFEEB26C0A1A14FFA08DD04237DBA00237ADAD4FC1117EC5
1C55033C28DF5D1E6CB9BBE43B9F98F36BFD61F1F8DAB3F776F119798D68B42F
D7E4EB8EA913553887FF7A08121B39BABD7DD16E5B29E2663E90F99F3BDF4D83
B749B22825E32690D168957A05F0C0B44B55F313161024AC28CB3EBBEA9A5334
0B90C13AD96D0D97565FB3FCFCB0FB48D202912B3C9964E46722BD6DB9E5B423
95E382ADEA3B3FA2A211BA4B6D8024D638014FDD6FCCB9535B0C715E6D0EDCA7
AF1696E5542558685BF9FE300B0A976044306EA4D67257C4BF72708B27CEDF21
02FFF8D217A90E519C72A827051BB6303E17DFEC08DBA867F507D6EB46EEA1E9
65C6B7D6A29A8CDAA07CC1870706BAD6CC63D67AACB6C9102DBDF193B72ED84B
5EC5C319CF37973C3E337BC718B327D288D2E7A0E987FA98D3CE703AC209A7DD
3A208880BD87D70339394AD90AED710E4A9943ACAC2BDB7456D1FC64AD15533C
A8D5E251156B7CC5EEB857605E01AA60A0BDD7C774ADA8015C56C9ECBD31E603
96C4C9E592B0457922E79BDEAA58297588A26AECCFCA9F8A0EB6556F8BFE3A40
9F2CD3EBCB3D093C19AA924FA0CC4BC3BF8835BAAA2562C3BFC7575DB96D9582
DA7002C38480DD862D3129E7CF24CF3716AFAF2A440EF7CE54AD38C564EAC26F
9B5A9EC1A4145F5AEF900C3400D6A81AB5C353DAF0749C5ABE66A08E61F956CA
575FABCDD9EFC6E4175B4F3843D5DD0FDAA7331D6B48DC2A25706943E397E181
36F99D6F42536463CAE2C53470DF442E0AE76F184688F50EB203394F3F7EF0AD
44DDA74589733C1D4B01DAF3BDE8C6A8D8EB483BB0F197083F54897AB7B98F80
7B901EF29C66F7B57A0F57A158B66B8CF8E5E1651824DFA99D1D881BBD7038BF
3930FB4E9E9F6EC96F545E5A3F5ABC56614617DF2D8E21C135CFC4963C5EFCE7
1CFDF3518BD2105A48A19678DB475A4014ECB7CA3BAEE85FECCCF435C6E663C1
2A08FA28AC80BFA29C02E5B0FD2F3886FE3D20B949F718363AAE724371266D94
29EC6985CFA993569095DA815DC16E86B269063C0A0B8362FC5C991647289657
25497478755BB7B36C2A43A91019FADB935F0AD2ECFE36A6E649C9706178D907
E8E8512579E2643089E4AAC5D765DFAB29E5E304F2EDD06586FD8102C142AD4A
E774E3609B82EEA96C05F33C04199E04820C1C66F09B1DB826735520BD204D08
ABAFD086B1709D9370401632ACC5320A71022FB050202C8A0D89BE0407D06112
7726DEE07C197012EBB4C75EB7ADF3BC5D111E7208A5CA099B103F5869593C86
01483E2694C82E6C0D38125C68ED824566371B7033F6814A3CEA7B69606243CE
8CC31557FBE1102A4A9BBB8DCD4F81369684D51FE91940763408B4246EB1C3EA
5026D6AD3C6317BADFDA99C874BCD3D215A76093D088D3AFA41D271A3502A046
BB0CBEACE7AE4514F73568CB15A387839EE50AAA3A0B5DE22A13C37FDE871428
FEA025D70C01150A6938CEF7957E504EEA1D6B28C0758BF60467853B70DE1762
66402A8E80A6E94450BA0D8182FA8D9E736BA06E7B3FD21AA77166B287C0C19C
214DB6006ABC6B927509734650F4FB9178BB3D11F27B83CB8FB2D62FBF8AF0D5
9A0FE8CD45D420CC00B0DB718FCE52E14D06B6BD6D07D57CAA88F0B7A0A0692E
D50BDFDDA768A3D43522247178EECABA4D2C9DAA9D41C4F0F9FF053E004FD165
CE41A3FF3CFFB5DF8FFE20ECE42A48FE825FAE3DB2C55AD8FF66719AF29D050D
D7D9A42C9C63BCCB539B42EC6C7853FA3486827BF1AC055C4C0579308EC8148E
9BC74F0D3BF50B076A14183A8D4DA01D39AA1E65ADEEC83D9900EF0D62BE699C
9E2842E001C805F4C2AD6E92FD139AA9854B55AC281B720683D353565F60EAE3
FAAD924796CA3E098D00EAE3ACF34B7AA558E4A07DFAD8E2800DEA994AAF940B
DCBD2087BEB1F06310B64DD66BB0351C21AEA86DF205DD9995412172C84073F9
B66ED8B35FC158B2A020DFE277AA0104CD2F0F7A12097B8D7305CBDA62D440B1
E55F2642AACB666DFCFC19FC6CF9834C5270B93FC4A13B0FD03274D82ECE30A9
11D82CECB28393CC6B08A15B15691F5F16CB7A4AFE10A4FA63FFEE70C2B3313A
A0919AC3B17A76A91A878D5ABAE003E8E970FE0CB71A153918052AC9A434D509
0596E4FF4D16C85C3DA8583664E527ADA05D061ACAD642DFB09BE5352CFBBDD5
F40830969BE8D9F85808931F0ADA1F1771EC30DF2C1F63C12B37B33AE29296C7
478528AE4709C2A6048FB8FDC39DC8DD4EC5EDA528EE5C2F70B9A6DB16E6CF41
8DF378DEF398D818FAA906CDDE6F21656AA49387462FE26E1151B0F04F304AEA
599D71062B189AAA98673D41E33D9AC2AE8BE16DAAEE0535152B292065561692
A9F8B9EF056B8859DE697A020DC1FF27A1A8D35ADE350E0B628984F92599BA2F
899D6571BC7D5A7EB607BAB91561DF2274FFE15D73C62E73ED7FFCAC3DFF066C
8C13B3734A81321BCE810BF18117B67D3B9960F58B5F6E2567F9955D306A0AD1
AE9328418B00CD6DF98F45
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: URWPalladioL-Roma
%!PS-AdobeFont-1.0: URWPalladioL-Roma 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Roman) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Roman) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Roma def
/PaintType 0 def
/WMode 0 def
/FontBBox {-166 -283 1021 943} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB756B8E2BF5B37627E46
DAFD4A4F741A859BB5F7D7C77FC7AA96EE6AC93C06CA829B81FE31E32D59C6DE
B1BF3B6CCC5C3C9296DC86D01487F08AB668F656CDD88EB816AEDD1EFA47F014
FF598E78C978DF18F8F66057351BC96B48015AF2E09E3E318053E952E9AD4037
BFC7EEF9CBFD7BC35746565B7EFBF241639793AE357220843147FADB929FBD24
01C88A382F00BF79554D125C543455330002B0FE6D229830470C78541E78DAD5
3E7C1A619B91215AE025F81561441BFC9ADA446035B8EB9C3D69BA746AD0CCAA
049D1FE4D905DF3F48D22900E02A23FB23F6B571DDC8B2CF7008431C1EAD7F6B
D92A2C42CAED94F9714F44E3CE31FBAF23A064AA2A7F13D6E5378E28539F0009
323A0755E58BA7564A408B142C230672A423DA6A6E54ED162AFBF8FADFA75B0B
FC648D5DA6EC31251B62B9F619AD9460876EEFCB8F9D2369CA3055820306533F
3C1D47D5A2EF97619FC2C780BCD9540A820748369FFDAB9D52492F130C0AC3C8
E0C87377DA6C21F1DE429C15AA939877876F84605F6785B5ADEA97321BF29DEF
3692AF535EEFE801975F94645272142128A3FEC8B1BCEB6E57B83520B5C4DD69
36DB8CDEF6E49B8944CA31C59F8790CD3FED58F1182D9AC6DCB2D75B4881B430
C67DB769B4745EA54233CDFD5600BB2A96209A83FD04C13D4AA4AE27DED97D25
93F6FDA5F64711EC7A2899AC98BD8D8879A6A348265832994C3BAD80E1D12291
CB05924302B780443A76A09E1C27E8DCDCD87FFE3BE17DE0421A47733C2BD723
9C876942155834190F65598810AF8CAD9842F8A1E3BBD2AE3348BD8FC9189FE2
ED5643EC4D87148775121702EEB7639ACD80EF4F07542BBBC09F98F81FB91A1C
89C691BF38CE4239B11C1C0D9A6B864753E204C0BCCB093E139F9D6104FE0584
DF022C621F86E5BFE2E047FD560E8A89B3872C87F7811E9EBCA9CF182472841A
88E7C421E5CE69DAD123B88D4E6C0FD85C86C74435BFCAE28C2B5CAD57D91A9B
4473906D044085B5336B066C6D9CE994D2B333F470AD32D3BC28BA2D699B7AE6
2B689CD50CE2D458501EBCD2381F3430C3059EDCA22D9F15CA03CD18CB160E59
C0E960F79010DC1E9EC40BA6914F9FB7951CB4D5AAFAA135C17D5D64CD848A32
C71A5C856CC9C94F24B6C9AF854B83771678C0B0B4C6A4D9C05ADE69E5C04697
8751F11D2AD4ACEDECD8D9ADD713BCB89E89FD5FE649B1803E3C1EF42D93DBB6
D27B0E21B6043AC73B6FF214AF5B072166583BBA69C7965DC0D8F838ACEF3534
083DFC32E5B188AC9145D33F891966459629C28959651D899B9DF267A46260AB
1ACE2D780F5624CF53DE6A33988A6DFAF89F48E9ED6D9BC00E54DABD29CE1992
FD55E0F38B8C3202D3D4F36FEFB4AE1EDCCA00299CF085F2E5A1F36DA5C25076
2E98297F6D6FB6A04374984B8A4A9609F11C71B3BA30B22414DDD6C97819E29C
1B183955048D80899581AFD736FDA1C65DE434A689340D0346E0F7873BA3F38E
A4E51A1A1F2E93F2F5DEBFFE420C7368C5E73A0E5D59097418C1033DD0209362
8A1379F54E5D7551EC62CB89BB4C9DE430C659868C979C475CF59579787EA053
B62FC8F4C33339E05BD7E50DBD13CB8F058C9AC51A7A1B288841E63778246280
FF82DABC96B0C8D6B05DC04530E33958CB72DA28DAA11A07D9D7257CCE2A6747
A62E88B4F3ED2665FE6EDEDD0B1B2F0ACFB39A66686AE14C09D217D1C3ECF64C
1C95F866AD6FCBFB38535AD385F3FBEE31DD19A86BF97195C267454702C59351
0BBB7AE0A5F4125C282676CFB38E41D0055A8BA28C5262CBEAE15984ED81596E
B2039CC1A9D5271DD673D1241DDDA5FDA97AD809021D1EA243019B299765A6EE
F8A12E6263CE2C7A75806C41BD8CCC4FBFB9C8CA5FBA4E4E99A88103935A91A9
10B6AC680A8D872CE89A2FA7CAE9AC02990882F3E81B9090CF23C4F1B87D58F4
F7247675B2391F4610A58C8A18DB8D5AB923D1CAAABD63C49E665E9E9B22418B
330B24A0523396463F528D5160C7E9F656D93EB214E1FA04F01B6E219421EB70
55EABD746EC148159823E67B18643BB656BCDEB0F3292A8AD108AA64FFEB0CC4
106C9881083F76F9FE0B6D85C50D9B2C4875701BA03B7B042C7A371164CD8376
433E9D2556C8FD15B110E435A6C93FC42E6678C5048808436A6975645A8D0668
BD40279D4E233E77C42CDE50214DA86F8414A3EC521002999ECB6794E6DD3AD9
BC73D8EE27894A1B19B5E41617DE991A6278646600CBAA57E8617241F4ED7522
69316451D65011788297EEBD7853A935A1AD00FC93B780A5A1A40F8803D89AA4
F15A63CEF1A332DDF10639F3F84E2CF9D650B3DD5D8A4131AB3EFDCDAC63301D
F6B0A0CF28E918F844C7A8E197207BC79A05951D15AE650609334CFE595E725A
02DBFFDBFF5B71E1041E49B45D34173EC3157374B94FEF8E77173E5FBD8530DC
9C5E81F1BD231E6DED7E8241C27D2C9F792B3269F8ADB1EE82359D114C1015DE
4E16D1305DB36392AA8C477BBC994389D806B3E19297E8F9A3B5D1D841A976A9
CC1A125C8A2A10CAEDCBD4D30ABBF774C856F4FDA49C67C57A135C1E62C497A8
C5C173F10B3A681026367F07665902B7963DE71D8CD53D42D84AD041E64EEA67
9F78F37398409E62E48D1F6853A21DEFB1FE0913EFB087B698901CCA4C0C949C
DB0FA884CDF665D0494FDFF49A4E4B541F92B0940ABC31B5F8111BA5D8F1D816
4CDF3AC045BA1227ABF00FD186B16B5AF15074E4829FDCE10EF651C222D461B7
3B65B6B23C17E54BA57792883B53D9B5F479B25795674572F3135F410D9D11EE
39E338B20C864D769C0B2F3F2E2B5EA81D6BD12314AC2752BE793A852ED6B140
D35539FE4541F95279F17F7CBA93C154A19957D4C843F94F52077235E68A65BB
D8144B53E69A0BF9E2643FBB340CBC2CB2B78D188BFBB83C6AF09FB64DAE767F
60068B127F512CD94B4A6DDFD89B501F212C04DDCF14013B39F641946EB21E62
34BC1B1166547B306FD0FE5114372015A8CDA28AED5EB78B4FA50064D7A01485
B458622B220631188F989103E4F6F8A2D93136D52CF079EE5EB741A76FF8EEB7
E309A7071152823274A655F43C10C9E8824F3038D43DEE9C4106E3E37A9AF8E6
E8FEB1113E9690AFB2B82FF75CAD9FBAF64491CE33E250F75311BEC3A1316865
EE7DEBE396116230FE81972C05F20858A2E1071C14C88C1762DB09ED57A323C0
49F7785143575804E64D10C387410271209DB80713C7D5C2AC2560D82B1302A6
DCCDF9D948506716B3A5040DD93391098692D53E870A5DC504B51EA132515B35
5A1CE24C24EB30F877FF5EF944F62575FCDDF3093BF5CF3E702C215A47AD18BD
54362ACF2D523FDE5A4AD93B648F6F54E5F7E7C38086DA57C75298A4E43A77DB
572F71818CF7D78139BD1A407F16749653D1E0C589E143BF5B6F014DD28E2B60
F06B987E0323E8B487E76B765DE428609D27A7F793FDE80E5EF0194DFF8C3545
853B60E754898ED8F08E232E3E708809142812FF64F26466D5119135FB8F1700
4376676A200917075663076A9730FD7543E777F380CC1E735AB8FAC2717F99F5
80CF25C3A64982634C8ECE94395C28EEA275244DC7B1CEE17957997FFB4B64B2
B3B6619FDC7541557E4BE3EDAB572B816C02CE2700205D7E1D43BE82C5490942
52A18ADD5626450A2914B9892E0147A245EE0D48B81B39046A34DCDBD02621AC
20ACFAB65C54852B96D04EEE82E743B8A3543FA64CCCE4A69B97E460E885B647
A86F4B7869C2FAEFF9B4FB477B82D5114CEFFBEDB202555CD5D0555A0327B9EC
EC192422FBC08EA3CD5F95D6E1CD48096446FDAE1016A3406165856699FD89FD
2DE3E86F3B1913294E8ADC0DBE33FBE372F50A7CC7638FB49DBE05E51DC524F5
65424C0630E8DE401BCB188DD4CD8FB97522500949EFD99EAB7D438B00C8D066
06B4BA702EC2EC570D8B87849225736F62C1D165C0F12B02AB5CF27C06B49CDF
D6370C6DFCCA03D657353EB568DEDA08162D9718D28BF9E906D9591370733139
78F2D4383FEA6A7AC505A4349861F3FE8BCDB2B447A5343ED19561DB907B2A19
150135B71FCE0D460334287825C94892E2DF9B35F469ADB45309B0B2CFD7E622
EC22119C95B6669F9EF86193FA77BF6B4ED189091E37E91D93114E59B3A02BE1
264A48F3D0E610E04D616815B0529375B9B37E332C596821BA108F2D43EBBE77
01CBAA603CAA3FE1D3A28E390BD7BCC6BC0DB893291A0936CF3C80AA8F204229
9DAACCDFB1253018B968083511C9CD65C6CC8589C65C1CFAD461CCC1A09F37C6
15DDA575F46B22AFA495663C8311D1905AEC03DEBD05688D9A8BB238B40E635A
C2EE5563332D75ADAF193E5E9B30FD11F04D70E268F1D4B352395011B3A13BD1
44BDFAAABE3E3F9A2B1635540FC53E8FEF33CC0AF6A8C1095C01691F99A45C8F
AE0A4455C3575F8374B2AF8393C9101FF9F05DF95A2C2F454D060914604C5A77
9FC5C0D5DB9D38B22130C5B4CFD5AF48A89122C8110D1D3F8EF05DCA767BB4E6
E77EED67E947AA958B11ED879178E2082634E743A5EB7E40045F10F38A3E82F6
3A805AF9CD5446664C394E9E0AC2CA7538930B3D049B0F47EDB87255BF41A4DA
BD72668FC1B9537C2B47D0586E41D817284CFE29144716130C8C9CFC8B8581A0
5876770144120419BB6484A5E944188FFF9B5F0DC89D1E420487ABEE34D06A4A
DFBCB75BBEA215C1821EA2E37D8894D7DEA75675C27CC54684A1AC086DFDF9EE
11C618AF049481EC370E0107BFB75A02A010B73EBD66C1CF3F193462076CCB52
1A3B11DCA3E9524CCF4A40EC3C0E5C70EF98246C20BDD70EF02E745352C4C6A2
85C96A5DD31E5D9A330111F875868A455F9EC136795E0763D6FD209A23F2C84A
46DE4968991698CBA46F9E5FE2135F6492A9381FA563032F82878404BE7530ED
3C833E8D2A12C8D690814948C19D04EF925650F199BCCDD2E182CAABFBECC9B9
8BD97B8CA036169017B955A38134816A44B3025DA828E38453DD5231DF74EEB7
35CD1C9878C9F6AC142A5EC47D2FE5916C31C8A1606368DF06E23AE2E57B4FC4
67222E8F86830FCE746BF5348D22661BFB772FFFC210918B5CF0AE3CEF2B45AE
1732B3A8D52507D8632FB2DB714754A511ADE38837C41DF62EA9094710AAEFEF
BE4EC43395BBF7E3CC49CBE1460DD939231CC4309DE68699CED4A7EB433C5777
89CB573E694A60C5E5811903F4A7F9DA8996899784235337FE850190490DC6A5
CD8C1BF60F76FE56AC02B40590A2A6EE59383935707E99D607115C82770E2271
AB7E9A77A1671AAA712D922B46DF97AE05915E89BEB1B6DBF7ACCB12519A7920
DEB42DAA5A25E6C1379A364F5F0A4EBF3EA0BD7CDF493D35A6BCDB63A46769CB
B4D52D7796056FB0896A9E3CD8FDE30128D33766FB638DF84B7BF2EBCB12A309
A42859ACD1C403CC9D71DA601D5CC37B484DE55BC25BBBB53FF0FF98DF3100E0
1279397F08661969DA2E834854576DE2311BB63DEAA67637FABD1965E18ECCFE
66C5F23DD00C6C48AE76B08201A86D8FD5B3CEB8A429E3DC0D87D7649C543BD7
7BDDF47A15CCC4FF32062F9F287613B6DBEFB079922C44339DBF4C4D4D9521AA
DAB16E32F92FC49DBF4B878FFE02805203043F72C87396C0A74E41758D0D5EA9
018CD8FF1B871E159F9244B06E3BCEACBFB681E9ED5FD253F194485105D53078
34BFF53B255E88DD550A9A39D1A528A9B9CA2A83159CD68D6FF81A199C054097
A44F48397B54B54D737C6DF3968D10B965EA45FC4EA4F7980039FA23C00C3FCE
F68B65470D6AE6AE3282083C8CB55366F358C37F6266370A362662C635F0131F
F3FB3C3E47484835F0B94434F6F44890A703DB34B6035A2B84821BF7B39F51EE
740BE369BCBD6069BB63BB217D2B6BA18AA7E6890966748FAE97D3EBF87D69E3
9DFA5ED6EA0E72659FB2D3F62AAFE9763ADD73C6B92EE42FE98C751A20980FB9
D868C287DBB9B787E714CD5D3BE0D3F0A21B5741BF24CE33AD0CDA88491424B8
4858CB3EA93FA3C723D93C47A1CBE2E90D1C88DA12FCCDDC616A19F68C641C61
EE6E0D37C9E94D03BBF25779EBD6B094B14FBCDF05B54F19E18341C0A3D10059
9BD71D47CA1221FEE3EECD1F129B1D33AF0E3963EFDB0A694E78DD3B2247144F
40839F73CF77A46DFC43C547B8804BE401468AEA3B85B66E617918ADEEEE6ECD
9D2F3BC6EE2C727E823A46E8C14E6215CE664FA64B371CD8C0AA242ED07A57C2
152A817933EBA21465BC9CEBBB7B2F3E34ABDA12ECFBC06EC9DAF9A87FDF24E6
636E3AB3B4AC3D9A4EC52D24468F49C29934BCD654BF7BD3C81F202A38457ECB
DB5237F58120FB27B1B7575119CAB76A015525761F19EC6C599AE119121B71C9
2C16A6D52C69CA077D8DCAE3C6E65733E787A60A7F5A9873AA7CBA684E7E2E11
4A0B3B5AC5FEA6EE389FE977C3FCCA5D91B363F99E4409EAFC5046654275B55B
9133D1DF8824F251B043DA994002B23DD743CA17407C592943D3F27D6E47F4FB
96025F2017527E91D49D160DCA846F44FC45B82847B85BE246C53A274F9D51D7
A8F080C6F71F0FA7506AD1C2F79B1DD1F7313FBA6304D42C39157FA9DD5D6196
DFB5689ACA820CF93F5FC0BA1E4CDAF6B7CD75FD3D866DE6336172802CC87E94
7431D74A7ED142E5F94BBB6E2C2BA5F7697A696EC0CB1157CBFB2618B3B748AA
1C4598BD38A97AC0DDC8E05D96029D074C55133509C8A0C741D5CAB00967D722
698C99C8F88C2DDAE6DED67B8DE5BCD72D5DFB4EB107C46D6DB23748251DE1C8
8C039BC9823B96FE42964C1D6FA2317C36BD4AB70B597C058F8A1610A6D194E7
39B738D825DA4D23CDE6E2B84091FF808078763E612213C42493E047CC4F047F
4C24CC65DDD509648A5D8742BB42912C6A81FF449BC190D22736967BDC860C2A
0CB2BBBF2CE2EB8F7A4D93E62302390F559B4A8E9ACF9133FCA7A264198622BE
2344F3BF74258AF295431DC518453ADF92CADAF54BA6424525B5D3F83B68A424
A1C3F654A0E497514F3F28476E00BBD99EA95789A0684BBFFAC78298E2A8BE42
02021D5F7CE36EA0CD0313BB4832ACF57BA571CA1454AB51EDD236B0548EBCD0
9FFE81FE0F9CC29E6C12FA14BDD7F1DA151378D54658194D20B8D2C970E69764
59A7C1B0DBC2871E393EEC13B4CD4DCF141D2B4CA06217D1C6193A0C41C7F39F
702C27D7B74DB62AC7FEAF552ADE36A1D32DC13EF7A2F5007F90B6E43064C80B
2B951CCD27E8D2269F501C03923299058B31311FE9AE6D701486D801E54EC5EC
E27851D81D685B49718875A21AE5D0B87BADE00F9BABDC83160988FBE3C73B5C
59478C70AD96BD9A75856C0485CDF2DE7E6CB4165EF85013E58D0C4D6454A464
7479A6019666639874F1F05EBF137D6109A0E45803A336CD2EFC63E1D3A25560
D17BF0FAA3313DDB410A54FDBEAB131DAA8A4887C36548D70F18F07D40A67272
4C9F16AC600F32B4AFE9EA04D3FDDAD121B6ACE7F7CE372F712F88088DEAB6FD
0393BAEA1C2F3D1BE74969386CE146DF0DF979DCF2D501C1A5CC0B61FA66292E
572B4DF407490D64D6AABCC9430144162FEAA8A16F776F260309F59554533FA5
A54925534307BB47E6B700F7B040C8CF166B2121ED6639F96A6AADD812EB4BE7
2BA1E31341240FD460EBCC77E61F50F82E83FF50015A3E341BC39477FA40778E
9577FEBCDF1C3829DB22E031FD0DB69453FC161D391E60C53312E234EBCA14F4
3D6F39FA2B0DA2A8D7AD7FAE19BEF160C2C5C172A8C59173B673C13D255E3032
E1C8A5CD07918AF130D5EA045CB3827BC0DCE09D5FE1270FB94D0824A859A63B
CEC0692F8B8351400184461A86F6126B5C50E19B642343E9079322E8A37D6F66
78A4EC636B8E8319D77D4A938E55CE1888065B1FF95A3A004378BC46B54FF1D4
5C72FBD602DC86594E628594A085119F11F64F7C7EDAE432A2B0352BE794F4F2
3E5F820B4DF85D5C313374B795A948B65505E8FD87D1EED60708FFF43860798B
0A48AA8582E0ED5172D75EB5914F78E9EAB84974204A324D144134AD125E123A
33AC784485453D9990FA4F9FB25B39682F3F28B7794A9FE5A62A8232106093EA
39091D5C786ABBFE29C193BAC9D1FC83063FCAE5B90560D4FC5E6D345025BDB8
485E39CC98CB7276D8FF902DFA75BC41EB6D01713D3B30B95F41BAA04890239E
C93C0C768F27F3AA3B6CD034C264D1E1C18DEC47C52E96937FEABC9097533F63
57B54389C5E44E2817807494BDA2645D0FDBF6B95794CC375FFCDA28EA3C9D80
E36151778577919BAA073453B24815DAA075F6BEBE39239ADB477F3D7ABD9B20
FEDAEB972F9E84370EB89AC42635D44E8A04BC3D5940B0ACDEA9C2B88B0237F6
DE4D15A0BA6147E665068676624C2897CBCEA2B828E6F5ED671B856477195D3B
A5976E4D90C0A1FB6010941940795D0F15DE5AA079216FD0EB092A98DC8F23BC
23630DB6A2988177D3E200A018C78BE2771D761DB605EF9B0C5B991A65A31A89
CD631CBF5AD97CE1333407BCB82C851F346D6BAC844F5E2645FC607FB3636A5F
E7033E9782529ADFE182FF658F5C0C523D3F8676DD9E6EB80E06D3710903FECD
AEFB51486603C865AA5F44D6E6228707712CE92DBADE9295D8E18764EE13FC2A
111F431936D3973F0C0823388A8C3B6AB9758C204A2F25C660862BAD2265AB13
F4BFA2C8BAC78329CE0B5EB7D79C4F8CCD759B83CA87B9DDFA51249819D42872
770B9AF6CEF89701274A97F435EFA0A16A6D3AAB8CE7640DA878C26F4B6EA145
D5DF35033DCFD52CE1633636307C390F69E2E829C44E54A34F63AF8F9133A6D4
5FBB5B8749D4E95714824E939267229A2F68080CFC13AA91C0900A0C8F97E6FC
8724E1A5E5BC513EECF39E2A1A3CBE12501058D3A18D99C15FC3671A3AFDE8D9
22CDC694C0A0B81276A9AD1BE9E1BF3011EE34B552D0001B19C8BE73622077B4
1C38FDCC6778918F842485E3BCBE9CADD113A1DC513CFCEC7F905039DCA43C25
BAFD1EB411489A461C06AAB02EA63F81B4F020FFE5886759E4926461B9A99521
87885F795BFC324752D4390CFCECFFAB3D9BC0DA6F587C81733AE6153D013580
F13DB277FCF47D06A70F6F5EC32CB84FD7FAD313DA1E9A55177EFF3F23F499CA
9F67EB5D5653BBB97576FDC96F4FC9638FA75E53F8B5E3B0131BE6A056AB3572
9077EB65FAE11EB0695903993C26EAED9C15783DB8643038F9AD942A5D48969E
CA35BE606098953C01ADE80BA8715D42A4B18CCFDE020B76AF50EFF43A273D7B
D0EC942FDB52F7EC4217072A3830114CBA94158FAC11D76E7D145425E02DAF7C
12EF47D801DBC67D95FC6E9D36A82FD225B3C224B97C475CE8C6ECB05A972231
22F15F1E1EEC367EB781EF298DBA6CB1758D22EE8A7680B01DAC100EE7C46BAF
554B06608C9394954B53D0A84FF84BF5939A9F95773C49E0F8EE1DA6B4E6F212
98B6A6D22A71F09F907BD2C41573894FF976BF8EA5425292C241456649215A4A
B447CBC5C99131B436E3695F522B3A9F1E34262FCD9C41FC34FEFB523CD77C17
1DC673154B9C531003F6DA06DA3BD897156E72985C4E6BD2E7C6A96DC29BDE60
B49B364BA46737C2A61A3B8F58CD63014155DB034B881CDAD7C00CD9A60AEBBA
3FADDCA48E2745359AE31AE523E2D55DC081E8B58F2F29E19F7D715AD567F556
BF49627C8CA5C945BB5AD34E9EA65F91642CFFB4D4FBE791B97172F032AEE5BD
F71E90DA34A98FC36B2D2C1F67FC841D3555CEDF10543411F7E58DE846E1F13D
801C553558D7B63FFECC4E4B1912074BC89B4216D5F57E49B01EA2A1F48A74F3
11983EB6801E61EED930A0C66563BBB8C980553E38D897CFC68897E3205BA05D
BF8A9889EF273BE77AC21738246C148C08AAF669F6688E3873FBC7A494A98C93
AA8B50BBA0F69C64A315706D38591372BADF30B553BA73D2134D35241F5A4220
9B01FC4836C688C2CF39F3E3F5D39943D9D567ABBE754C85467EDB91167A89F2
C736DE01855A3A9020561BD8542254D647D45435289348501A430BA8D6768354
2DC17C6237C67C502D4FED82F32FA58C8D2BC06C5F91434C5557A320A0932B65
C1FF77F5133F29BDA4ABE4AF3D3FABE6FAD20E8C5FDBB9A0FC55DBA36B38DE95
2F20E96FEE36B565A2FF80BD1523D13901986703D866CF9D1439C9FC56C6FCF0
3E0CE6FF00F93621C663EFDCDEBC6DED877FA9B01C70B8789473136B046FD576
4A10A5DED261536486560E8E312587A101D01E5C8A1611768FBEA7D8A7DD54E6
FD4AE7E63A5FEBACA5CE6A9A353140944F801F9413BE8483E51EB3390C260D51
DCBD43F1566AE11E05419A98BD1474F76E37DFB19CC343B46B769966360069F4
9863EA7B614DE5C791848A89F4A49409C34A491AB056C791E7AA134DA0D03AA2
CC62A44CFB82BBC500C5B2231D616A5D14C5E2E04019C590B938EC9B08963606
9811F1C0C80920710C102E07B540B4773609C70F69CB94D169B85A32C406E623
8C39A207F84386CB8367330901C5836964343F87E7B1240970B0E6967C65560A
0EE4086E95740C929A0A7ADED39431033CCEC0A4C456FA17381B9BD150D59463
2299E03834090D752CB2D11B13515C47FE6357793508C183F3486D3E3F5411C7
6D6AC728673729E585737AC62F1BA37BD27BAA626E08DD89B1C6C000AE32C9CB
F3360628822CDE8A8B47978C201AE84FD8638067451FFD8AC37D07DBC70977F9
EA496176CFA7936746E83A6EAFEE75DB363C7B9F84F89DECC71D4883B9C4EA33
70F98442CED059ED1FB15E3D9E752D94747250D79F3541DFF07C1A6D5126E149
DA98A9A9C847FD8B2363517D8703964A4AE763360A0C1D15366613F59BE1AD93
667018438417D9E6DD8F082C1C06DABBC2F5A68A74CC9E6C5D5CAEA84316ED41
C16C6DAE4527741FE9E34EE4D80CF55870847E9C791023D647982AE814685DDA
E902A256442540EB11CFECB4D1070269B6595D3E1F68590EE7C4569AAC2503F5
63A7134BE67E5CB086BF19935B5D788FE5B02FE97AB5A9CD8F6556EC8103C799
695D26BD337C5EB164EAB31DCD1665E3FFD09C78FF5BEA4111FB963A156A3138
BA680DF9361228A3AA3256E00B96A5F73F2749D4A2E992E1EAE53DE6C87B0AB8
111B5C8638CB801CC424DD95F52B19E9130CB1ACBE628BC32571AB7C2600A928
79927FD0D6EF0A71C7E134A56A07623D94B7170E85F4256A1B70FD4CBD72B872
6119CFD4DEF42054C5043082B0D608E7CC064115B03DD29213CA4E1161A04FEF
832FE91ED5D8249EB11A5A8B3265E54BCFDF0E0C3D36A8A7CEAC0420BF9B49C2
3ACE8D170F82F05E2AA928DF5FDA128A2159A7DA936A1B4D90A79DDA57545DFC
DABD4A16502DF751C64CC62D9A202768476AC61CBD9C192EA36BECCB4DCF4FCF
60D33CF0386F6A52C8265C910AF297CDEE3DAC31ADAB0927738C97BE7A624D78
3079049A962AB365C061D5BA8483B5461933DC9EA69E5F28389E3A3A60787D84
D0E914A8193C18E7F401C44816311719E11D1FC80862DA5648ECE74BDA1BA604
872AD6C5271FA89B438A8C07B6A47EEF5191B9AC2F2B9589BB5E885F1F428E3F
5DDFF6D32D04C681C42D15D8B8DCDEF77987C808BF0E9484CAA1BF17BBFA4E9D
98849E6AB20FAEFA93C3F0A6E0FE657D20899EE8C2CD56668F756DC5B9CF1C87
BB9B1351FBDC140AE17DE96263A6CA5338F0545FC28B0036DA1FEBDB945961E7
C6928B4A48816141930045D8362326398FE89D8235FC52B979C3EFAFEE0F00BB
E7AF3EF460AF17A70CA58A51705171C196C59F6DFF72148ED6C631EA375E3AF4
A809C228F5DC16A771552DF21464F96F605D7A072513C78F71C560C617FEB051
4E063FAC8D871A51C8C5AAC623504F983A7DA68B92389C02FA99CDD59AD36D7C
3A46E861C4F2F57B1ADDEB70F258775EEC444D394F511DF75F24C38F99A97AC6
D6E07A24374C3B868D74A543D5D4D7FDDDF2F15A39F33759F4F6C873CE2D3883
11C8046F3B3D3B0F0FA8361D7CA62858038A7B69DFAA9646A156B1131100E3DC
BDF7870C969C6A441D199785DB9CD2CC889064DFECDB6EC1B358E0D52FFB829F
8ED11FBF6F8D398B13B619E2926D6F697BA89C4DBFFEBEFA0511263182127E10
F30EFE833623B5E20E44277A68F4A59C4F89A5193CC00483AD73DB3FF09A51C5
A80C5C7238AB88BEF1FAD5E302C5F86E64267EF11AAB6C22FC98BC98579C4CC3
4F8E643B53372ECC25149A97C968ECA0E68AF7F7CDE2E20BDE45E6C67C08C185
5A9AD9E6E6CCC05F61819E9DD039FC0A5A130EAE00082CC77C3A3B1BD34AE651
981A80E7D3A1A5B76F1B27A55CF3C91A6EB4ED51868E4669542D882F765EDABF
DF54B6ED8047C7CE25C8EBD62121EF200EB8000D098F00728E9AB343DF9437EE
05D079644ECA41BD3771A42067EC40C776A24FA41009F79A021B81F03CAA567A
BBF02714A2DCA3598D84CCF346F7CCD001475AD6F89F37CFAA14413C087DB819
83B0755FB8B73261FF7D7C3DA37CAA509281180C723391FF781AEABAF72F686E
6E7C9A81151D88FB401CE85435CF30BB6205BD785DAA527F3C60F8BA929C597F
FFEA4A59EB57EC0874E26BA43E1E6BD84B541FACBABDAB7A75F75F535388530B
EBB62207572BAC2E9E18F84D569A2FF154EF135A04FA5A38F6D206A04CC7620B
A405C4F9968EDCAC2FCC775E27EA978E0D59FF7A0BB1C59B638E677A4FC26F9D
9A17F28132BDA3FE7B1966FCF7B4C92A8EA9C0630E500B177761B39F1849B483
757DA72047E91D1A51723300EA987314D4F4C86489ECB4AEA10E8E04BE42EA10
CD8731C0E140672C644575ED80DAFEB019F0CCDAAF4A786FB1A1D005D575C2AB
2E9A12E3443AEE8FF128D4D3822DB99B50B93511A2EF3FF5EC6E483F04595265
4FFD74B1077724560A1DC67108AA69443C37F99CEC7537549160423FC97BA67E
08A5CED9841E668721A52101F1DBD9D98000A583155639CCE97A61B27168C2D0
161CEFFDA429D2F521B9CA716AC5802E293D68BB5F7D05F54733FF46527CFD00
496DB7BAFC9FD9A044F499A4904845E5D23A0081D830BE463661F2C23DCA83F4
36529195954E7B7C220393FF8E84EE70CDECC91C1B1D6BFC8D8A92C7D46E4D2D
D3BB6F9B492D2461B64DD97BDDE436B06A04B309EA4CC767EED198A39FCDFBCB
88AC72457CAC182DEA5A8E67181C86F14A6519488062A1BE165BAE099524F362
A18868F11F2571442F90D1EF6CF0DC08E16ED9D434956C7787AF25B052414E67
E59B58C6D9BAD01F707D612F1748477DE7F2F40915E7D640105F3AF3C3F12C03
D79784ACA3F8B90588D0CF2AB8B8A60CF0309A09188E1E9EE0B835ADA9527B4B
11DD1FA0E8BF640D3E8546E824811A56ECE4466F61A17DA5255A065B21E0036E
F396F96EC2A65F8630E8D60AA52E3CB15C6A0E4DD5AA8698D691570649F0525A
3FD6B54753CD07CEC0F9C25A82D36667F1A41BACC588068410E354F123409E8B
A415D5634ED6CB6FC8F8E1BE9068A5245ACB7A230473BF69CA886EB627C129A4
047457D56024D95645ADE0D95DEA748A659C189779C8C6325F0460690B92002A
C371012A991F1714CD4537FC4623FFB59E14CF669C7B38CB2DE6D35A7B5145E6
3ACC9385BC53E1FD3608114F46FB836111C3FC18305E5072E72774AD4EFCEA07
1411293050667D950B1F9A67AAB21D471E8B5CBD08736BDA0A66F67B346E3F76
1A3F6539AB2962C5D90409A5258D338A1A94B71C6F5BA69A5D07DD4E68D1242F
3A3523BB25490E6550B3A9E50AEF64F9D3437A03AEB429172BDD7C29E99B5641
BF3A8193F899918C238342B3239FBF2755244AE2C647DE273D39C19BBDACAB70
E1FF20F5D90517CB305A61FF3FBAADC7C069C46B465D1449F4D26C103A20D82C
ADE30440964EF02D39D3E3E6F4CA1A4ECDB83B64C9DF217305763C697F4A8BD9
6353111004DFFBA39E616D08F8585D688AA1780CDA58B0883C1F2DD11478A00B
32AAA491CF58A9446ED3CDC49EC993F339C0004F10527BD6219B50D43F0ED969
2B2529C31C094F48D1598CA6BB0353D7E2E338C14F10321C96BF6EC84517904A
B4D87E206C5A883EDE7B47EFF00F4CAC35D918BF484678966B780EDE4A342BB2
93BDD1E03E653330AEC352880293398F20C160E06F7DFF39295117A35CD5F9D3
344D1F1DBA7454E52766AB705DEFF8D0DAA5EF82D27AC66A2F9F29A07C152A86
78BEB35D372EE165096FE2686E42B9B45BFA74F948764A0A474774F0C26E1DC5
783F9CDCE5AE2DA383E7ED6CDD350694C8001FABAD58B46D71D866F5D3B2A9F1
C90A696F866684C2B8F1745CE982F10BF3BF1A0313E4E783B35BFFE66317DBB1
26870AD0ADC507A7F14DEEE1C62F565A76F4C542FDDA33C6533798B47B4FDBA6
7A3D8A7BA88F035B2C2F4CFBB31456669712E4D09F72FC12B2EBF1A5FE218B5B
08588DE9B9D50BF223D980491259FB3F501D087C8982D6B65F209834A5E8357A
7EE7E75B3B188526C82F173D170AFD9740758FD5F83540D5CEE56A3AA4258418
1D5AD2C206CD88A43C54F3095FCC64DA5EE32D9E7581D407EB6082C6E508E180
3DA3064F424757B4F0FC70C3D58DC484BED3C2376CDE72B51F2BB65067FCDF8E
C7378BDD87665BF143F034270DAB33594B42F198E884CE7CA3F26B75FFCE4028
0464EC0292D4F6E11B8CB41FE5DB747A69BA4D2E11607A8945CE9EF70A5BE1CB
A2297DB65E318BE7F78A0A36585FDBFF787100A74E831033B9DB27A8A646EFC9
80559BD38AC5B6F2B2A9DE392216D2868613E082511023B2F36BDC882DC353FF
AB6574A041605F51D066280048C61896EF46E19E446B8C3075E3829C39B4AC1F
182584DF67BFBF3AB63819BF6541E73737B25312E6C66A69F82FBD056BBD5349
84BD9B8D746C1800A4C8C647055A0C342CC117521CBCBE5A6AE683A71B601AB6
A2B5D3DBA52BF010D8F14B828E5B0E2F71174362BDFFB422BF700A33C0055740
E59AF39711AE341B720F5AE7D240D89AE88A6BC5A41CB5B08CDAA8FC4C777B11
E92E3DE425B3402318FF7033FA994C6F1F7D2A1403C4ACB7DAD0D7F76520FC6E
D53FA7C30A41BEF4A3B8406C4639DA710A4716E17A4070B90ADC945A1D4BD179
AE5684CD4662D0C816ECE6B715A075A0423AA77C8CEC5304FD4BC6E213BAE9D5
17AE1E4327ED681BDAD30D1BEFD4CFE8EDF2C2366A1841CBBA374F4A7E8CE74E
33E97F4E3C1A2EBD0D36AFDD4BF4973BB6AE9E76E8F64E1ED4FDC6FE09C22507
97BA6AEEB77D1B4E07BFF0CC68AD5462E41856B3B4F3A1D00670F2F08C718D8A
64BBB176EC376EFFD1323B4359E2F91528BF869F5D85F531373F368AA90737FC
3F4CC39C1712E057311DF474799C7449FA8F5742752F9ADC5FC343C598976099
5188D878A409AD0AFD1A7B7418B3394AF7EE7076395E67C3CF9B71BE069AE6C7
F1249224A7554D77CAD3FF8AF4F8CD3B277C289C8649054004091A0C1E303470
EE1E8AAD274E14259A48571D7F56B42BDB21F7619180B8C7E0F275BF550881FE
FF3757FFEA9821454CB759B3D82921AB4B9278E652C2F30A8E565642DB67A8CF
6D5078F1AFC0882DFA9C2B9E0A6A9EC242CB0B4E8D09C7061B705F415428D5B4
E246EA4EDE2F1D7AFB2B9ABA68B9495E156D2DA92B42C8560901C16524C8B15D
84C4B7B6F1A01D121208C23145D56FDDA9CE1A8C1592C588D0D48F959C4119AF
B5CB8542AE65A90E50809D387628536D198CC10349306EE881D22870A9CE5170
7F24027DBB19E8202B7688880A86C8529329639EAC0FB97010A6B1ABEBA084CC
337705FAE0F7710A1B966939640C6F29BFA9DF20839C5F134D1201D19F2A70D8
ED33F39DBD3129B9C8592ED94D40CE4C03994FB0C2B8AD99539B29137C92B811
D773B475C03AB49BB044EE7F9C2567A42AE79BD5F165EDCCF53FE1307F9AAD7A
AFC99AE3D4140BD690A372474862B2BE73235E47D3F2B9B355278BE4D2DBFC52
FB68B4ECF8EEC326501ADACDCE2CA7DDEF876A491A317A996878BA0579843C35
662CF3EE38462CD4C77CC3DD229F1EF1A53419DC05FEF1E840D5695D70DCCF0E
707DDA96AD0365EAE59E45EC3217F028859C1047F1E55E05DC582908B89B6DEA
A787FA4E224FFFA0F831F6833C97A1E875C7DBFA30295A87606FD345C3098433
952B69852561A3149AE77E2A6428873E14EE231FE4F89C5D10CBC2237971D50B
2580E431C10BB4D94A3864236D6C3C24A268171125A85CAB5CBB66B4612CC66F
393D733D7FFFE2E608356BAD93D12ABECFD4693B83AB17DB199859ACBC25317F
23C07F7851A830DDD392F93F6CE1A90D1DF04D9B26541C69E2ED313ECBFF60CA
3E5D60CCCACF314E86EEAC33E4D242DE8F1D934411F9BB58C2677A6FEE34A550
8031731809F124929CAAF9701057C6DD56B569BAAEDDC9ECE26E2FE3D03C122F
84A8D9B16103FE852DE1E90FFE93A687BF4702B4D94CA54980AE8BFD46D6E501
86F11C5AEC3E26DDAD69FFA69B14BBD009A04036426E8C11D40C288772E9D446
F1AB2C3BDFEF3B8600D0E9CBD331ECA61B008F824FE595E1C8AC7FD2D80BC6DB
59314AE0F8AB439375FBC21A3BFC4E2303F5849CE0980655EFDB97B56E0AAA7D
984050C48466C4352CFAC5A7864954EAF50FBA122E9E5908733F1CC44FC24152
AF583F5AE8F4F489B019543024FC9E52E901EDB52C881153E8A174DBB511FC30
FDC6532FC9D5BCBBEF8C466E8E71908038D3C02B1F5E8293BE9BB819B6AC6F53
7AA03AB6FD0D5BF4C9BC3213A5BA19D274242B5101FA3EEDB73500B7AB35DD7F
93E4DF60BA32158232C200F6E27BB35E591601EBFF9580F378E3BF2E5A49250F
D6274540476E3BBBA96B3FF82F13A246D7A1775778461B9C9B15DE33E67B2574
4E2FDA2E47AADCB3286F7BBE20572943FB64EF33B2776180606E79F42F69D492
402ADD352CC111F43C1B4F699AFD63BA149FA0021BE5036DBBBB88DAF930B970
62AC89A5E23BB17ADC8594683A367ACCACF67E6300AC1D1506D1AD16258593B2
3E9E69CED5B7B7FB5E02E4DFE54656D599F468223E890F01F842AEDE6EBD4067
C5B549E83AF7B999BBAA32DCA27053B78FA2E8AA6A9433272C23534CF0E8DE3B
2E3D42FA08D429C6AEFCBFE9447A13D00FA3D6E666B4AE09D0D20E24BFCCE963
F89BA1451F39C3A7752BD478B2CDA4968141403FE386DFAC2247BE094A885352
C70B1CECF3A80AB5400D9C28610AA8D48B790EDB4BD5CF0864692968BC53BF98
D2CCD6A88B0A67C909E66B76985E7B9D02C73FF2BAD0740A8A4986EEFBCD407D
7FE3FA2545677F2BA392D83A577B77F81BAD985C73B05A79D3C8661A9985262B
D1C6BDB9FE7824823E37DE05592BCE6FD4F9FC6A8E0C4A2D65D5505880FA2D24
55CA29C343C19C499F005786C4AE92C55955E1D065312538D8848C6BF7C66F8B
D36DBA3090888B100BAEBA4E0C1139E3F29AF7D91A600105DFB9FA7F3A487C3C
FA6F892AF36FD0E81ED6274540476E3BBBA9EBF999D4EB5552B928079C133A55
8079225EA05EEDDF23F6B2E17F6874422629438E9A6ED1915E90BCF77779702D
09A82E05BA98AF862C14FCAB9D3497C382B1FBBDD8DC468979F0105625CC483B
87C634C4DE83FEFF8593A29B4BB7553C90B4F7FB949D53BE38E4A505FF9259F9
67346D8253A89C638A1DE7017D34EF6C9C237639390ACBCB6F9CDC28AE3EF96D
493C01623FD3612C7D9C18CB01B498809B5F2254D826FCF9394BF161F4C89620
A3E38861D8293CE15791C07D725DE3A38F66095C60559014358FB33959DCA877
1797C6AFB721C751699D83E88266E59BDF3192711F973F0DE99B56318C40C64A
03823C82A59CBB6D43D303D2ABEC8E3DD4CCF166945CE6462E016B5FEADE1A79
40F7C2BB8B122FADC89895D6B08A46D98440880CF5031F09B7A04499F55D0E2B
E2041FCA3C7E28D848AB5D2C21A95305B49AD43B4E143FD661782A37A121F832
6504B47B45E7DDE2364F6392E02147213459CAB5AE6B67EA8AF5D85FD7B650D3
DCF5F219D781CBFA87B005448A17FF1A269E6EAFBABD6C6896F041A81C343E9B
24862508F9EA78FB55C05A5D7C35C322D58214B161282982C96003D50FF82761
2C817732BC0A10CE24FE63A6960D7992C6FBF5816608B8B2D7D71C4BA813AA93
D75DCE2861B19DFB4DBFD914EC943D7460399F1F08F9895C2F50F9DD096F80B4
9CA3444C02AB37797043429AFBB32CCCC830DC3841B19956444E02C42EB24154
B2E400E9F96CC34E7EDF885BB04F7D76A690903E25CEB39FC6A4FFB44C1593B4
E906CCF1CA0A25AB10E07A6C13025F1436AF3042206193E04D9E32BBFA361593
C47296A7086A2B1C6378EBA79DF54B60999DAB9692D3F6C6468BBE43197AD20B
21A07D02D559CB82CE0E87A3F2CB50091092627CA0CE8CF8037F6DB5E056F1F3
B6AC4D6702F06087C7308074735D304E09FB3E0CE6FF00F936211D0A90EC6854
EE28FD1B2F56F8BFC7DD0B461544B85F64FAEDE1BECCC0D7EE148C9CA558794D
C40C2469E4D33196CE55A7DE83B3A6DC7FAF8C23848F933CFCDDCC723A92C5D8
1B3B8D5E7BD3C814E17BE002FE436C8F2641A0331A1B124FEF7F6297759E9892
C4962ACECD068ABA3B0FEE759D82A5542CFC4A772D8C2D699E55D655CCEBBBEE
705B45D1EC65D0EACD9C471AE988C9197C341105B044E7AA81165FA1B97A1035
53E3C48C6FAED25A690FFA7A7412A619E4C35AF7BF31F6693BD7076EF2F506E3
DB3D67A2D10FA038561B4D714B0E6434CE595AC3132C7BF0E66DA9ED6D5D7249
9519BB15B3C4DFF99CF458230A1642F9D6F432581CC32E2D7F25952ADC04B524
A3A442C7E50D342AE0995D1280C93ECDC1E4076BBCB72BCA6D80E9B8E781FA5D
A60DE4E928549A78EAE3AF9382824A4B9912865C6FACD2B6555E8731D94A3F98
E54CE3F758E2C884D6830B00E1FB1F743CA0A4A611C6FA52E9323191F7B83CB2
46CD2E4BD54017208E532C295889A6967942A943FA352092E65B8023E5AE6B72
39CDFA05F1E4A7EC87764D1F659DC739ACEAB464EFF77FD104F4EEAD324DBBF4
D49640897DCCF967B802AD3E829A70F49CDA819369AE2919D5FECA0738CA3863
2132A35ED15701136DCE4C6EDBB18D463D448C769AB33BAA1560B6E30A545C4D
E65181B881593EDE440E7BE795F30DB9883C1E6207615462B90F351A89F44B6C
D666351E338C7199EA36B7B3848E6058140AF825F8A3708D3005BAC904B89BD9
43B49ABF540EE8C265654E16EE978B53DFF884D14BFED989FECC569902F18784
5C9D8FA075E1AF1B7A62BADACF5E7BA1ABFE021829A004245E590EE1A0A35A73
A135EBC938BBD745F781667CC12F173FB0FE5E5E4B71156AE7ADDC119230F09F
9B0DB371D59A05EE140C9DF0D4C66A671165FE3B07820ABF3A040CB489A8D4C8
3D9ED62B49EF8453EABC2064828A2254F5568A8D9E0FC027B4619AA4339CF26E
41995544558F331E55C9A1614B45DB0C2D4E80FFD5F88B43266A672CFCD697B4
2FEB3767534F8E7AE523E0362AE977FED22B5D04F2E7058E5C178A704F46F8D0
97D53AB04E673CA6A7499BDE0603EC6DBD653E7D055B889245BB6661679F7EF9
1967AF1D8D89E122D2FF99461F3A9DA8501E87CAF49F15F85483D155FB93C294
14F21318B125FF8967B38478FD9A97EB32BFD0450E20A2B1E1C648B36190D2CE
0DA9A98573977DAB2CBBB8A87C0939B7970ABFD96951B5EC51670EF8463D3F7E
7598554D223D306718D25057CDAFA5984FC91F72A9C612109A70F8E71CE392DF
43E884D8B8856DAEF710C921B4F50AD1359379B73906B32B27BB16F03CBED82B
B51E9118550FF963F0C9C2D98CFA8E2EA95106327A03ECB150A474E9D24435E0
1C2F2060FEF80336C9824E01A5B5D71408B4F29AECE73FE6E0CE6A3445855413
102A2ABC50596DCD50095BDD288D07CB27623F09B5AEE583C329BB8B33C15A9C
EC4E2A7E9D8634DC48F6EF5BEFE7727BD00EB27062F8C5DF47F71356E2833378
762504B6A3028CB934F2B0E7F1B5B2EA1E0F26655D1DF9797F724874212FCDDA
068727E3551E9ECDB576A5BA94F0283A5C62790A50F5E9361F3ADD421D1DCD36
CB4D6288560E965B5534F562EB8738D25513B4EF36BF078E4BC4EE51A680E400
BFEC4A2B61C59F2CA9D64006F3956DEB0878710700823D80E6387B06A133B083
E9F3394E458EDCC6B7AB680728E81F5041696C183D62872AA2923D802D94278A
2835CE00C7AF4D0F51CF4E726240B63095D44A790435D7FFF36F2FFB4A657CCE
94D311F51A49326E93EBE93FC663849975D50190C0BD04D4F6898BE61012BB53
D2395A6CF682FD7D9BCC70D18E3FC72E8A2CE3051BD437DD2BD1B3A790361A53
953D75312631D6F07794B1D853251462B4D2905A7F4D7EE6C6E5AC60D34941DC
BBEBE13B8935C1AD298D0B7C34004EC1005AED45738F150EE4D9D0FEA09D9AE6
D76351116D5BDB1576A00347E241DBF90C698E34D5E19866DF96573D1B7CEBEC
65829377493E2A690DA1422679BDC3688965E405326C1932D1B963A59FDB522A
D75EBABADB94FE0EFF36EFCFC72E313C2DCD831079E2FC65A7F6DC4654FC550C
2411D466FAA7535029FB484193EA6E539A864CE0040CEC007321FC19D548586C
C6C4D1FF181690675AF3523E89A1C3840994F3F05E62DAFE4862231F0917A626
FA4E5C5F5F16D214C61CA83875E1DB42A5A929DD19D2915FCEF07267B02738B1
7F0D2E3A91645AD751848C0AF196620C370E55A5CA4A365107874B9D1D1439BE
AE051C26E36DB5FBCCF4D94C69DFF8297BD421BE08C47F83AB9D1E923CD180A2
063C644BCD757AD60FB1C0C632CA05B5AC2E5C7D33AFADB7391A4064BBE0E29D
CB5425762692B1CF8718D7D5F8012D5DD0C093BC585E16D82EB4550C7AA7EB7D
EBE396116230FED9C3D38CE1FCE336CE1E7E0F889DD1926B84DA02D7CB474400
14F30DA71685C08DD656315095A1C1DD15EB00E525BF079C0109F63E133F2999
B986212AD42E3A512B495BA53E73932EC3EED1A58E76D1841D0069FA69EA35E5
A9E5EE0F7A64560AADF9B41F301EB696FED6C200CC9A4230C94D8CFA534F2C51
ABDD1A3DF62485ED65B2E8532BB8C8A4E6351057A4152189AA25EDBD5E3D6C9A
3C58281B3DC764F484C8271851446EBDC6014AE746148F51BC447AFDAEC32069
727167133A3AF812F8EC5CB1F070EBD8D03EC42AF8B42D05EB38678B27915C3C
A59DBAA8F4D64E899727644B7A3C02F9115356445047BE6D267A0349B176E755
44CD7EDCDABEBB33C35CA453DC847644DA28B5C77DD068566B995B3E0071A287
43FBD2D2E745EE4C28E23611FF2A794421FFE13F44528C1FC8414D158EFFC021
CF695AEA45921234B69484C237E27B1C617AD29055BCE76AB9E0C7C88D481365
96834CE03E3561712972B4422D3BE6048C0EEB1760E7A0AEFE56B5486F85E70D
8C296203B9FE8B7447DCF9348A2B02BF0BE0827D7CFBA98D62D277C81EEB9F96
DF1AD01F364B033046EFFC4675C552EA06B6BE59F60442B723D939767ECC0DE9
75151F9A26A434BEA94BBCAAB21999901C6DDF8C0129AE6DE62D7E4E62C16301
9FEBDD9155D8B06E5C0AC4DE8CFAA8F833D87869F213A4A01E8082C79449E1F4
7990D4F066EE78AECDAAD7770B088AACAC7CAB9417DC1DBDDEB82B11C6AD170C
942DDA14AED17EA11556C21FAEF14C4EB1038852AF89B4F0646BD7F91F4E1B81
587D7587BE23BAF400FD21824EAD75263814367EB556C32C1158A03837C80B4E
E780A565FBA1DF1B524B8D15890A2662EE4C9A37D4B918C5C24ED9F31705A38F
E7F91F7EC59689F26339383AA186E71D8D4A5A21F2B0134990EF215B151F2503
EEEAAF5EF38D056A34EA35D36EED9B5EBE9D3F523978EF51CB809B92D28C9843
084053C10F03CC7FE311DED22B8F7D7E4A61DB208A91F86137AEF0E8D8D4D2AA
25B8931C8CB8DCF5658111B12CFD61E34C24FF6D973E082F21B9ACDED0D8C438
2E82E61F6DE3D9CD4F511CD06EC3B2310F954E389EB6A30340C8CD591421343E
97768E759552BCD45E9FE3855732DD7DC86ADD8B0F888F5B17FA848B46599FA6
DF47ADA5E1AACB23436D94363B2114294E6616A71A515BC9CB8AB2B3E01DDAD2
75A0986DD01961B7F09018CB599D35C5DF7B10A39B6DC9B53CCC9D29F0645E8A
2528470F97138BCAB59252EDE328A5C3FDFCC2634CA219F7D73E7A19281A174A
E8E401DAAA88DD1463EFF193CAF63989277CAEE4DF0F9BC058B3EB357B9D8844
64822213BCFC3D6B72D0F1E020CBDCD5AAE7475802312F249717B65E51FE7DF8
6FE7E5D4BE0C4FE978E1692FCC85E3C2A9284FE70BCA88CBA9D0038C14F70FE0
9C31656FC5A12B90867E95A92B40361BD72118F1EAD3795A5B8D4B88DD1316E4
41C5B10E291F11AD66BB0390F10BAC6F78FF3A892963AD5641C226427102F475
F013E39B331F7E2E4EAB8B8D9E3E384AA5A18DE65034D0CC08558CD97F29A27F
30F5CFBDDFF27338A41D0DCD8CFB6F1571346ABD5D7C17F52DE454A31BC42A7E
CC56C97BC0F989F32727A6ADE495AA7D0D01C75662E94B7AA03025CB22162373
A823430921EABC77FA977031EEF31B49AE730A6BB14C50B24D1B4AC16BFC4272
32DC9AA97F0337A90716F4062BCD01F57A10E73E8738AD1C9D5940023011588D
C15F318F85AAE4A932AA18024590D760FD4AE95484F7C37F4B34CACE6AFA9976
52EA5FF4F01AE6F5C3A764AABD6EC71450A89209F07AEAC97D48D08FE7AC15F8
6F8E50BD570858D52D1C6C98C90C0F7E782057D9685965169D1263C7E477ADE0
D9DE9F4118AFDBA8B5902677EC7FC27032E69A655826C2462FB8D2348BB4DAA2
45EEFED3620E5D74E1BC73D1772F7CC3B20A155740BC75C7DECAF76DDB58988E
4F5BC16B6E62BACDD5E790239E1C1D34FD70E45D8050EA54BE373B5F564F27E5
352E34DC782D78B0A8C76AA6C998C9319D1102014822FF6732BDB825C1396B39
D3F34E2D7E62F51E58627D5E26224A4EC490996CE613E180DC9AAD5A9B6DE4C0
11FA62C942AB7F96AFB6D3119937F8E6C1347C731C64BFCEACCC01279FB84238
A635BAE8AA6446CBBB2B029DAAB94ABA0FDF543B2E5A0FA9B59027942631AAF3
A79F7DA9D78FB40A9103317C2D869FF9413C50475B77A2B808BDAF7A946BCB66
3AA2A61BDD6A6B9D8BFECECB47D6716C1C23151433F668FEDA84EF787FF112D8
413D68E9755AED8868A8C1CDE2B37C804F50CF32B87BA4AAD49B33C0128EB9E8
8DF0135BCFA044519694D98C95A5ECA8DD6681F23B690A0F25C108FC546F5300
372D0802A8C4F3A66F2023590179592E0AD2019E774AF2627935A0626C89E342
A86E96723AC87E8F949E3925563728A5360253B228DD8AF45BA8E6AB8AC93F80
872F0F92B27BA7C7B9DDF0716F9DFB9726069435C685E95799E326E9F727C546
49F216A993B7BDB2032A27A1830346777ACFA3C15D92A6417A28AFF2C6A09E83
07AE004237D2B41E54A4DDE2C36374C34D13040B3B59047C0550B72B2E049B65
22EB1E1AB36688A005C927DDA526ABEC8E8B2F345116A195AFA9B3576CB65FDC
8D829195CC07F8FF80BF2EBF2093BFD06285C5061827DDD08D703C04FDE9B86D
B5718862F281FD98B4AB971C31DB62D463AA71E779597196B523B607A2915FD1
8AD7480EE8F1E867A144A8C068DDBF63FEFB83A83AD4AC0D8DFC9F63A67DB9C5
CB101A2B93A396B4DB97B395DB1375D710E9E0A4BC77479FFB172A3C33F4A81A
D8A3C4E962498278935E20E4A840FAA0B1E6CBBC83D63F5A71F0BB22F6561CB8
2A0D718247E0CFD8F8CE312FCE086FE28504F525DF166B4FC7FBD233BB510187
45712E823CED28D4781C1BE872CD38003882A66A4C692AE4E110536AA4DD6780
5735321CF15A667E4AE9E451291CB10E58A558766171002E3F53CBAB94CB10B0
DEC2313101597CB3D4173CD57523FE28F178D465808077623BCB8A34A8C7BD27
6A7AD8A3C934EC3D7B2D1ADE3BEEE4CB84C050619530F59E5E316E3D00E9E2FF
FFBA513855BD5DFCA318E16DAF52B62B01ECAC85C9FF2D401512179E7A99BEF8
381A21C27BABB219F4AF11DB31FB4CE894AA7B1E15A41A76BC49FFCCA4AB7F9A
EA6BFA3ABF4B0AA447C07EAB5297E3ED8D81FDD87B9363E4D6FC75125E3A29CE
5C1AAF8099653AFCE5159B7DFB3A8FF283D4109DD3D6311EE327613495926CDF
C191CEB89A2AE4723A5CEF1B29FDDA1DA86EACBEE66BC0E2F46DDB5F7FEE0070
59932B16A21158279F23E52DA6C3B2E6DA4CBC3FD34497D7D7C23CE3EE31522A
C00EDFF20384F08E4E864445EA5D59FA99816EFAB3B860755ED1327088BC90C0
54D9FCC12BEFEF779D3ACE88E7EAB814A20495AFD7BFA3C1941CD00CE45CC9C6
311BD0624DB5F73FB9EA321C90FA6C0061A6ADE88664435BAC14BDD28579700C
8DE121789C8DCC595FF244B7E8A5DC02EF3DA343CB7D1E72826555ECCE755AC7
F8C45C1B9E036AC4E671F6D24D6D39B8E2932732316B3CE36FC1C9BCB283130D
351A03015901FD3A2C77167204669324291988FF5F6671E2CDA4609D764114F4
87C2A8E8D927ECD3B5E0A8D94A8E459758E71EE5C7E66F175E92259576AB3F1A
8CF397EF62D2F4CB1D39D9243ACEAA2C76CBD321AA35BC51087A62866FF45A08
8129CC3444C7773A036F487C798C55D1AAAC0A306D8C323F9D18B8D06E749BD3
6AAF1C944BC1A88E39CE6140E008AAB725181CD6F489EED30B5C5C40BE61B1B7
8B22D6756FD0F9AECA70DCDC24D88FA032649842E0479288BCDD89EAFA52FEB5
2A011B991F7869C140D5E0C37B5AEC8BD1BCCBEB1337DAC7E2A41E1EC28B0E35
60313EEC7E4805519BB0C8190FA1512C5CC981CA70879309F8FFADA90409C1D7
25D593311F309E4955579FEAA1F3012AE38CE5B3CCE45ED7A4AEC1C3D7DCF26E
701784F5735C52EAA3C992EE103987045032B0F4BF57C3B296A7997DBFACCA91
51FDA4306D674880504961DC66B42B58D32C2F5BF16A103C61BDA4B93B03EDC6
9DD32B19A4728792ED9C14FF5798C31B04DFFD32E0A2A0FC5431C0937870F4FA
854244F5E2F67526C50A67E719128E212A1C23B4F4E10BB5228C4F89431D95D6
0BBD6E46C26372FBD07DB29DA47CD3366CB5FD0680EEC9DC7A8A05347E22E18C
894BD5DA12A8B6ED845D2EE22B9046E7CE32F74223E93F817400B94F1A89CD2F
0719003CFAAFFDE05E47E8C61BEDB79204AE84522866719FD8D2B086FE66E1EB
8B1AC009E347FFF87BC43B7676E739ACBD0348A908F26E67281444280B1EBF37
14B8E6AF18A9B524F6026F355100553841851EF61DB549A9DA5631316AC7A6BA
CA07AFCF5A8888BFE28466DAF18D8E4CB7A4EC0C88D719811996AB23E52E3FE5
14E082304DCE56E29F463C9EBC68DC1D577CE4CF2A1A1DAC06545E35BB1D0305
4B59C17219409C72C27831553252D8ED3D4F15D0F66FB311788DDC43467064B6
327A37E3B19F0C3D7FA527FFC4D19B96AEE78E6D59D428B0D22CD101D4D3CF60
543C783E114AC5ED9A59BD181D0BD514003433914320A2F96A7FB014D79B6E18
8C1FB581235009991E7CEFF0494C5F48FD924C84021FE32553A017F92CB89815
C06C25368402E6B0FC4290A58FA0E58706E9B290F254EEB692F10E445316D35C
B9946C756C79DD7173F9974C69517EED5CCD57CB7BA6F0B5812F47234EC5811D
37CFEB12ABA3CEB7F56B916882B3144CCCCD260DAA1B57215696D6B921DC78E8
ED9516E27305BB512B28B15646DD2FDEA52342C4AB9E7D0E6BAF0EEC14AAA88B
6DDAE9493CC0633A178706F71D3A9C29B4897ECF463E0ECB61F51C3ED746B97B
7855DEF7372B50B9700F57B2A13CCC8B93FFE3EFA7008ECC67D84EEE8F35F48A
1EB3F8BBB9796F8CC75CC8969C93CDE6AB2E393E193C8E915CD4DDCA38347BC5
BDA2BF37F7A5D7EDBB0D0F0F581D2B99553E2E4E8BE0B410E8765E62541AB6FC
0C918002B347402F46A5390DA0FC2910CA0E415DAA822724882B0D481034B110
801B1B182F1568374CF6B1D41FEC5248B3400D7FFA281C674511BB20698755E8
ECAC8BE3D93327EC069A3CA82C9C91FC0D8FDE9B1B4810BD870EBE5B6F720EC7
41007A0911B912FAFA12FDCA98E165FD08A319FF3AD3C0597C83CE622967C86E
7DE237353694AF9A706973D9DA00B9FC306D10C06F2C206370D75543E7C6D9E9
A5B7CD9AAF2F9E47A5EA7F33A2EEA923350061D265C52C10D0D72669D4A4CB84
3DC494E4FFE8C2EB304E583E3B01CC0801E276466F57454EC2C601D61929F2A5
BC702EE7CB615BDF37C85CD7CC4452F95A27C6EE5978EDC324CC311D00C2549B
5D2CC9AFF6285AB75552C22BB309E1E056FE97AA0A91A3583D40FF40CE71DFAD
096FB62A22DD19AFC2280CC0667E2ED796A87D9C3654AA7503CA1717265D7981
9FF222FE7297BA07976E813D9223A95FECAFB10EE2F3B743CF0721DD3CBA04AF
518C06BEF6323D3AB8E7ECB5B20EBAC91CD6A9D04BB548985E7AE1591EFD402C
AE35F0A2EA6A0ECCF6A7BB8F8071D0EDF448DA64CF3581E404EE40A163B456E2
1B366EF5E946993FB9D295E1063EC1C270E1145EC8DAC4F1A5E0343368C427DF
4ACBADB0037D4844880C1319CE57AC85006397A653F7BD92E9BBA76FC26BA21E
D95F8AC73865D67BF1212294BB0E0B046780708343C60DC25885200CF7516CA1
7A6F15A28AC105E3A78081598D884B4A56685BE0840B39261B5B66B321D975F6
C38B42E47AD44FD94422BFE2DED4C6AA3A6E80159317D4DC24E744940D88CE08
93BBB84B1D5700E04EBEE5F8CEC3FD703C8FD55B2226705895A95E8A22FDF7FB
F4C6D76831D87BA1433DFFB699F2A51E9ED124C79ABFB9DC919A81F9C78F6D43
9F74943466EC7324B3DE36E30141CCF1DC7F0847DDB117AD6464C67F2F79BE94
DAF6C068BAC354DBBFE5AB79596EE7C02EECB5B58FCFED51E25CDD86163392BB
DA6FEED9C9A8FF7D8D77C20D8BB0F7FDB3A4B54BED7A3273D97FDE6B3049BD01
20709A84A3C99F03F10E7EBCAC0F426B7E4AFC9370FCCD4BF60DFBB3341C0DB2
15FAF6AE3009B6A1A7A2B36F08E109D936E6F8C361AC1800420466231AAAC0AF
8D29929339F23FD57EEB1CBE34BC712709E52691F04AAB7E02D7134E7C807BC9
BF84A521E8E48A17E8B15D24FC453BA64A7728A85753E0904FD154B049536873
79F9FA0AA49F8D8CFD83E9CA01CBF2CFA2ECC48DA3EC5C62E54E0CBF3F4BEDED
8F45CDF6A0BE7628782A9FDAF4D19DB2341E0832F03AB17823FDF2378D4CAE82
3848019B6A636A53C1A8546B4045E866769CAC21032F64B90C9B27987859435B
B6C69BBF3F00595BCE1861FE998002DDBAACC33AF202D623D077AA323E33ED00
10023A9EFABBDDF1E9B492DAC5847A99B8707B04C8516E6BBC9EB9A2EDB4C80E
76BF053900359010AD5247BE6545DA032690AE862A72CFBDC27971675C98F9EB
E1AFCA631B0DE79E3532F81D77E38A63AFA92424989E3D66E55D9C286E980C61
8A91170D7ABE78FF2FFA568DF2DC158E5BCE9A4F8BC389FE94D7DF8905107071
278D2B7F247D3498C43861961F02E5328F5D0547FB814EC13B56B2FF28465B76
62587ACFA8C5BAFA9B7A06DC606D9725C8A21AD4D2D3E6BE0B6515CD574920A0
991615DEB83EE6F0E8AA3C220935A4A54968B39628E3A2506569ADE22D516ADF
927BAAAA60FE1BAD1EF88837D4992E8BE17631460CA5E35179F5C74F3B088597
B5E5FF718ADB570F61FA85F29DA79D5714AB796140FED838C69F25AA6A6A0371
19FDB9FBF01B211F329921FD1F35FD343C3F91AC24B0EAA8739ACB33CCA87616
0FD54E046623BF14A34FBF263B8D6B25231C7A80163CC48D231F8D58A0D7D191
11D6E2DFC75C0F145FBE12FB3B05D07FEA1519A42B639EDEAB959116CB01DA1F
C4BFA3A258E2024CC660BB47D7A9A61F86D01E1B4B35AD226640D93F3C4629B1
DDD5D5EAE73DBB38E078916FE6C3B341E7CC8740C9E0A6BF3EC02923AB915D89
1CB6EA0BCCCE2BADEC150B080C1BDACB070755D2992B385DD4D271114F8FF127
93F9B94CF91A5588FB0C6934563CB243E9D829921EF462CBC1E4EBD6A0AAE341
8C7CA85F40B6C490D3074C1ECB9187A85A28C454AC66D83F9905D35743306F9F
E50633019263FC23C10FFF25A3BBB1AFD25F25A732B5CD5B5DFE842EF1C19070
CD2A6A2589C1C5C87178CCDA20FF93A261B808DF4F1E22E5E5D70FF1E5DC2424
F0BB509687B00ABE3489D39FFAF299B14779EE2448144F0E8DF585960C5C22B9
3AE8D526254109E51EBD726F292B6C78CAFE22DF40B58DF68803BE34EE3FA9BB
FC2E2B282258CEC588CD060B738D59ACF5AF86B5EBC443C2078FF80EC747EEA0
0CB0E98286A0D3C446CC0D9BA498E115299FEAC4C91FE92823C1F4A2C2C46F03
A41934C8925B98CC9178F1C6D4A367D882E37CAC627A78D5CD8D6E4ADED4B535
751AF545C6DE1E64B789E7C04D7A0B0E8569D233D07B6595F78F83F690B4290F
0C6350B3314ED290C6FBF6FCC17C7EE4B75D645E56185BBCD79F75F710B3B9F0
B570472069B805EDCC505EAF5A25DE5D38C2A85D8AA017AF28962DB50A74194F
E1F866ADFFFC486992E5827A852F7FD6D7A3AF6AD3A822F8BF61EB273808B048
A910320196973CE640C195EC32B9F24013DEB94809E28764DEC80FAE79A1E0C0
0C08684AD6C4215BC9786585802A9673EFD84C3A6015AB4B2B2C44CCE271A9F3
A0C6E43B9AFA5835ACEBCC540AB9C69EC141940AE9827F7FB857F3204C49C9B7
C9F2F6E649BA2A1FCA85660DB90E1B65FBC5B72416CF9842AA8A263D3EA1C2F8
9CF64644A225A544B6859249CDF58FB2E509E10EB25734478A015108AB47D25A
D9D597E09D21F53A15F82FA9CEC1DF4D6B518FBF67D4F2BB95170D4C815AD00C
71AA5CA1D3EDF970FCFDA34F9FD524DFB97A16F0C98AC7F77C49A8E37CCB48FC
0FB9991C91F3C2A1166340F962D60BDEAEF9B38FF851820CF4656E330B51CC8B
5ABBF724E33728F56DF8DD259B554900383A60DCE3FFB81D45AB0E684A1CA33C
D52C3ABB1594FFFDD9E9DEBEF4E993DE9EE644462E29D1FF5F5255E28C867CEF
D3B4C7ADBCD1FC0B1549128D13A6DE83395D3F4B2C6C9C8F9FB6FF1D21FBBEB9
9F8CA94598691F77440703207637AF40EBAD052A4F2AE12B163D2081582990AB
F4B7A926DA4D5E21C0876B327625858571EC2D0AA4163492F9BD316883049D78
F8CC30E41E46686031DCF5D74F36B35B9F05B6771D9F149515F4B93E31F731FE
1797EB825A41116CE31E108D3F7125E6B0701E000F43917EC0526336D9166158
9CBC1774BC9B1A9FD8B3FDCB86E52B34D9C0713466B7FED89B0D3A0105DF8654
0AFFCD2AEE0A15CC70AE02F8BAD9F40D24102893DFDF4FC7DE23929058D5DF21
9EB765C4299A57BFEC774E722A37690157728CFAC9FA76D79644D1566BCDD130
506FEC1D5037335CDA5787AEC8175891250A6DC32D147D0FD3D035EE25F2781F
1BAA5F6A9264303D8BBA14402603689F5EDC5158AF335690D2115D532705A5B8
2A672B4023BB1C98F52AE160D08711955D8E6FD6991A7D2AF18929ADA82C44F5
18D2365D43BDC15821478E0A63F78F3460519043C618CDBEF899A14DDD17D0A3
08EF82C19065DAB1EAD92D203C764C1B53EB0B6961E6343643AE131A3A9E19C1
7F47A8CE3AE60063A6FC8F8843E51A44868CA5056A8D2579FAE5F034D5D8F985
BAC6E9DC997E867465C9463C52195868B0467A3E6D7C2CBC7A176981D2E75F8E
B71F415950A7E47AC2613A71266679958626E7DC91D4F8B7800A057CE178D22B
BCFFAAFD86329C429484D26BD1BF8A9DF36882773D091AE333AB5EE890D5B29F
B3651AE37CD587A88B880FC201CA4BFA805D3846393A1FE8F83E61C9CD8A1EB2
334C4A56B271205F6E713BD3714D2726B64C7D0712DF52D4A92C5E5989BE1337
A57368FDE31E1877D8B30E5F8A66F367243116A94F8E94EC7DFE64C73022293B
D00FD4D069DED4AE46E6DE2001DA6C7BA3EE708EF8C4E55DF6B0C139A9F6FE99
DCD05928A1D3D58555539EAB176815BD1461528870007CCA3A1758D0E596D37C
0662D82450CB66A1AC88278B42EF91963952C1BE4EC4D3E7F1D421296A6D8539
9DFD855A4E77853257F6D59EB465B17429182FF088364D9867B9662B45A42449
8B5AD23105E76B28F80A71467A956C2A9469CFB5066DF919E575D98E1535C889
570A0CEB74F8196B8AC09C967A5BEF5CEF20E6E5B6C577CCA66423B0610ADF60
4B1984ECB3202FC699278CAB4F9A7C74164CBD53CC1F293A7DE1B8252F962F0C
20F8A3E747E50E6D4A9B8DC0131952E473E020C91F5ED34CCF8A2B155C5279D8
DB83E9AA1163227F219258E615CF2E7CA53283438CA74B0ECCBE448F83EC85D7
D2345AD38CB3E32065DE04DBEC0457D25871E3FF8BA35FB1F1AB5B17BE8E1EE4
40359C3549D6D062ED7CC1030DEBDCB6764BEDED7A106844366E13DB1F1BE2B8
545B0D86C0DE562561BEF8F277BEB8D8FE1D896E2DF249A747B0641255E1CA43
E5DE1D494262EED9272770C098D67EE4045DEFC4E184124B63DBF1E1357EDE54
D6A61E37E48E7E61A46B1C2CC5FC1CEF41A03818EB12F19CBCE5F93259A65486
F5C1A3A81AF8E1D3270A89C0C69A357BB22FCE4FDFC0FFECD302A510F42842F0
C62BAB8547E610723A2A14707696E4A64EFCAF39A6696E337699AEB3E07101EA
3D60549C7F46FC401319CCA9321F51136224D37EB710D3A4C8FF95F440316664
4CAC839862B0B84432EC474BA44FB0B713DCF7BED5E3076890B0AA9C8CC974F8
EDEE3A1D7E017C3A7B6DFF3DACED24D15A462036E200D060B9C583897864E59C
5354C779DB0FA05BF3C08A72BD4F875210728472C5527C92F1423BA6807DA0F9
98365A3AD6A2565784C6223124D923DD88FBE246F11AC2643E272C727B64FA09
8A4A802C37B2D9CECDD4DE2E51C6EAC91E57F96398920D3ED669A91A533B7CAF
2195E89F233CACC31AE946B75AF2784B89EEDC7E36E14CF36546D180B1608E61
BB0D61016AB0F39440CE6EACF54125E1DCB6F490FC383B7E3E63A4FE9E8C8DEE
69FD586A4512130849D1BCC621EFD71294BEC4B4A3FFC7FCE2B5AAD6CF6B6E32
B69840EF7F14062D01DD81461257DCDBCAF46C5BA60B81F2DF21C9C6559EBFF4
8B07C413252E54236224D6632911B4685F6017F3BB875B38E536B0C04907593F
503D363C893CDD10104EF2582E2D07073E3F17096A1E8F6A946EF0BA3C64F80E
BB82CE780CE4926EB459E3695F81EA7A61FA0CA9DA7FF2F27122676D6136F6BB
23358A298FDD7DC01D5A56F43F25728A9F1518C5BC0907D00C6306693FE71BAD
CE80A7F502684F65492D343C9D31962FDBC0E124FF65F31EE63B073178692D3F
97201DD36642B5A8BA87F6AE60AA1804A64C04661556136D1028028CD4DB5D44
563EC7BC940AA8C04A4835A7D73D89518EA2292A39188C01706215B1A2806180
7AC94487FBE7A1746A1FEF46B6B3209D62FB810FB02764B279CA4326BD949923
C87331C9579B9F2485DDC521457C7E6C59F396218308F8D65E7660A4893F2C8C
9771256CF9C6844A7208C4D0AE1935F8964877EA2215169627E8E7B19C9133C1
AFD7A4A4D8F9565E0C3857EB1144BD302AF6C2E0E5DFF50FA1AA7EE77926803B
63FD11F54AE1167EA3830C21DC480C9120FA917C5921FDA0A580583D76712FE8
13F52E34C3D0B9867EC6C15ED849DBAAC72A99F351D82458DCA6377A8942936A
2FB30E6C652D23F282069A61656054A51DFAD4189EB9EDC0B007D8F5D82D4A25
A60A34AC30679EC28E1EAC6C7356AC782B928F17312A7AD9EC45E3882351122D
18633FDC807E5EAA9C115B8F5BA4A45F490EEC9CFC7F6748B63B0C6D5364401F
3E8FE0B473E558D75D88E27042528B0996FE4E1FBE9BED3C56421390E252D78B
43675B8548840E129869117F263468CD6CD9DC62065D2849C4BE7199C390684B
7B3807BFD10E4299A85A792AD7D7423A292F44B66CD6EC4DF04FF93D1EAD25E2
9F61A0A36F89DF49C5BB8F29ED0410E26108B2B2373486F83DDFD5BD0A341763
77E27C2E992797F482CEBCEF4D4BF076DB352CB3FC69CBB1849B1D5F4F637D8D
61D1C31596CB92C20338C7E865636E5CFA757A16CF043C131D662141C88E70AB
262E9900178AB3BCE7E1B8CBEE8CEF463E7BA36E0BD5CB357D0D25320161AA0D
21EFE4C73A005EFCB24B25BFEDB031FC3142BD043B32FA7F2EA7BF7DE83FBE45
68B79A6554F2FCC3732E1EE8893B4C5589537DAC2A75A3F21840E349F3D6FB66
5D6A56067B4B513F5D93D8C381FB76985FE03B05E27065B5FB55DFF52A2953CC
27F80D30CA35DC58F98A03FBE64D1AEE22080B396602A6282E6191D3F22E335F
4760DB45D6FBADAE11442B75814C9AB2EDFBB08479160F3556E924B94EDEE636
4F5C184F773A50C20F17EE82E3E4FD070F4F46455514ADADAE67E459FA284893
91031EF6694C7DE87AC2A9FC8BD051FCD5B059A728DA6ED2F7A3C0930FDD2E7A
A5618610141CEC3C24BFC60C94E157C3C052EC078ACFD1FD79AA9E03EFF3CE10
683BEA98583E1FD1C18A94D333A6293C33765439F5B21D866ECC130C7729128E
F1317A0D08D5464F4C62A849AE8FB10D55C6C727FC6DD7B641E28AE0D85BBC15
DF0448A6D8E1D973926AA31E5372F7A80CEE06FEB173B8FBD75775C736EE9C05
498B8649E5A6A0BF250F1C35CE6AB4D966FEA9F16B6200822EBCBE2DB2DA7C89
716D87BCCF89D2AC9D59CF9EC61A1A649ECFEF60617378FE9DDFFA139D3623FC
D14DE4D9E4FBD86E6124181AA9FF5F05D2F77501F8C182A17B0988DB4775EEF0
45604D1C3498B1B7579163B2834A4F34DE8C74AC80609921CB2D4700152C969F
8C660CD6773AD66BD7C493DDF83BF08074C2F7CFD630629EF9F16EC0A3E99280
6847974CAA65E9A72FA742D11F1673E426E3318A008E325C5052E2ED16D4BD89
AE6F1143DAF240C6AD0FF6FA37408CE691E76E04A25459EB9EA0ED9A1AAE5D35
10947C66A0FA86995026E37EC5520458647B3B9DB96F44EE00EBBF8842597C3D
57817E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-BoldItal
%!PS-AdobeFont-1.0: URWPalladioL-BoldItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold Italic) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle -9.9 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-BoldItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-170 -300 1073 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB24E0191A1F47407C307
6F88FE477889FF46B2040A07FA5B51CBE0AA2B3C32F01E94328E206294CACED6
72C03340EA47FFADBA7ED8BC1B3CDC7C625A2C39D84F8A622CD4D90F40C32A2B
1A217E58BBFCCC3080203B9588C82AC9E00C6F71B89CB54892769608CBC4E9AE
9CCF60564A2AE6488D2634E05EE61DA6EC0A64113B06ACCBCF2A44D0F90DA087
CD8EA2943AF7711E67DA772FD9D7F72EC8F877F8096C4C6A650BFBCBC6F6F90A
952D23A2BD3102EDEC2A39C68AE390A02C884EA11F5D230DE621C936124A8660
CD936ED3439499C5F1BA747874B12E1299AE30CD3CED085605B6566F4CD1DDEA
FED661F00458DE0D4DA174E06FB2B789A47BEF2A35FD424DD724B681D4976057
2145681CF876B1423589E7EFBD0AEC19F189D9815B44CC62654EA0ECE266D21E
304871354B2364E557FA8E537B6D40FB78A993A87D656A92DFD1AF50A5E58F13
0FC813CCC1A5F39D6E4234B65B4CCCCFD37BC064CB479720F6BE5473A51B8C59
3ED529E08887EE5DF7C182919E88BFBE1B94D1F06BD9556F39902C1D204E8A81
D9FF8DD23D7B5BB80EC4B5D56C13B026ABFA84A3FCE1A658A754528B1DEABF86
0980ADBE60B21F72E831B0816FBEEF4849A56E220A0B9CFCE3D4E4ED70E7F05D
2F4CD40EE76DFD344A0D0506B1129EDF97AFAC3D3E3F373A7AD522B510B77B5B
DDBEF5EAE3E83BF84A23F32941CF740EF125412F742B21E3558256F3C8A4DDAD
18D487BFDDB797A0DFDDD8FAD587335DF321EA589164F4AD0A16603F6993ED36
070FD56FF4085F7B3D06211076514E28248456919ECB434F19746B9F22382567
611AF536205FD4A77E59DB0DF9CF57123E2F6D4D4DCFAA233612794B5170764F
DD3A71C8D84AE2A56F4E100E463A7963A49C763BA3ADA4E24F54E494B8B6B996
29734A61F9FFADE246BAD7DF925C8B457D1327B3F926A5D07E71F352CCEF1871
AF930D8CC9EC66930E55B691D18D2051B2465E441F6B621865797B9897019226
6EB035CC39C8286090947F56B64264C3A44FEED76D4E65D21D7BBB6C9FD03621
49B42231B9820C7AAF7C7C845095281D8DB5E612935A5029FD78E23E35AAC22D
64A78A0997962F15B4FF0502157BE9B017A197F6B81AB5B39419480E8C4DA16E
8F425A1943D5DAAF8E7E4BAAB9DE55C8366B7853299DFF59BE6C8E8A7357B9C8
6BB64C2A8D1A532A1EBD4C83EEF551583D9E576810FD5239C9CC0937BF33358A
AB830AA22F967BCB97046EA3C4A9A3A97D7C031F9E88C5597C601BDCF84562F7
7158BFBEAD3AB69689DD74108187979A7C20DDCA027B92FBDB05DDBC14E325FA
922904601397AC6124220C280E417BCDE241F0C25111E40577DEDD7EA8BA95C4
79340B9E18848E9E29CB018DC4EB29885A11D100A928720A707BA004D9543D10
459A4602CFA5EAE2D3112D43FF22C4723429BCD9396E71104202FB3F677DC4F3
98E82228CEB92CE0B1AE3B9CA089F7320D1B9BA214E43E83C1FCBECD57341203
8C6FC92E4D81CB7723A14C83E11A4E961F1FC9879382F85EA515D665F6BEFD47
7FC3D2D0497A8FF4B33A03BB379BDFD1FDC40E678BC42FB3835475F099D2D6EB
48B5EF659F1892A8C81AFCA148704CC1313134DCE13A19A62CFF57309C787261
2078DF99DCD01E21B463D183FFFDF1A2886838CB11B791158E1FB4FAD8037E21
A7F5B55FBF3C58A2E07D021C172810C3F47189A44A0757EFFC671FCFE41CDF60
A34B00B0F3D3BB5F5E49D5A65A1BA3ACAF2773F285C68918DBDBC486330F3CF3
E6698EE25EF3C6D9BF8BC7619F72502173E701707CAD347208550DF890CF5924
BC50D349A1158B380A42D3AB886A9197C0079E12D9A79FE6FD1DE27FA72987C4
64D5A507A40F2C061D1DBBC2F811A66CC932D2853045D5A283D7A2C7CAA60C3A
169EF906CD2273BDAAA73476CC26A32F37E719C0931FB872A42344BC8487EAEB
01B65023A6FD20406E7E21859EBC00E35A3B1562AEAB09969FA69DBB37E42D72
C12127C53E8A3F98100A686ADB740C45D0CB167BEB8857F1E0569166E2F919DD
8B77973CB68D68E96228E2CB7EECE505776D90A2D1A68B51C0B83856E9927C93
6DF5171FBE56DE145488C0306C6EE589C2E71F0433B9B82B34F3A7BD9EF3FABB
04B5081C33120741EF2F23E7627CFEBCE03A8E365AC6E14956714282AF3CC8E8
2832A07A9B319C38D4221576C131962BCC5728D65B83DAB642914AD1214B8BFB
43159501BAEAB263FAF920D54668BE4E014A9BEEBA3881959D8D90CD5F09A875
749C161E40A8A8AD8074AABD6A06EA11E40F1F4F4C6B43021301D083753323D1
726E22C04895627F0054CAE4FE4CC5F070174140B9901874A34719D07E1ACACE
87C1B92746E8267FA78B9321B7497195A0D094FA355327A582968548D1C5648C
BE6BA93CEA0DE409FC319BCEF75CA4EB317A628F42F7EFAF5804FF3858934BF1
C1DB0CDB39307FBDBD27D9816175D196832A26058212ECF70C24F5811B53C23B
795EE7C1065A9134548F0CD6F17EF1C500407F6D442E92EF2E00B8DE7AD0C608
DE99FEE68796482566340746AE5C0A6C9F3A8EC0D2196294FE173EA579ACDCD5
CEB4EC0A94C48D205EE2D6D31BFBFA40063D732B10D2F6C24D1574CFB0D2CB7F
A127F49BD2B5ACCF7ED80CEF4FE96FEA461C2016D6CA98017C7C118D8C67F71A
4BC3C8794BDF57340DB70968FAAED1226A949C78D176733CA1427F04C44F0BAB
C60F72CE2CB794D5D86E1A0419D9579ABBAAE7FA181E97431CDD0935FC9D12DB
A2BEA04B1D113B4B133C58D716D29E8FD7A27BB14FF676F11A4C05882DF30569
D86C3FA13E9E9E4534AC2F079A5A8F032F938B6566BD816C96D704A30F5494AE
4D6997AFC3E05587419C70AA92193462DE726263DBFD9635B65219626AF346FB
D5F50796B79DD498E95E04A726A8DF1182219104B22197EA041EB4BD5601CEB6
D079B99EB874ECFEE099B33FC49D08807696374A4A48ACA63998CF7951A9685E
7147AFD434318B94021A7E5A5A2381825FD25359A10F84AD9A18706CC30F6EC6
119F985CE4E5D6AA1C6F813D68C3D0E18DEC5682F6460C47DAF81E1F113DD425
6BE6504185EAF8D48F2D1C7C5ED44E2590664FBDDC6FE2646B6845D9D4835F7F
3335EA5EA1DB1FAD71C69F5C5C9D103BC205185742394D844F9F61FB670F5521
FE1FEFC260F3E926AE8AED5EFC844FB1DAA67F3D01C234385631BAE78B35812E
C2C51EA9141331BE35D1D5300F8616A61EE8B8295498B68A580366A8C69EA9EA
BD00CEC74325D3774C7543429267999EA3548B44A32209CCE1580820D677EDB4
7989E6500A60AAD8F7A2586B5802A7FBA50CEBE2BE28FD7217D1FA47AEBEFB15
1CD51F0DA2939CDF27365B7ACEE394F3CF3AC63884317856AED58761B895C90A
90363CEA58713D3C04A319915E39F67EA9F53DD07FBB85F22467706177498E86
B4FC6531AE59AF38CCC7412D6A8EF558943C2F421EFFF773BF4A58ED51F34008
CCBBA63934FDD66B4FEC484F1F4CF09CE126AB8499BA13E2668B1355664D1B4C
FCF075B51DACD371F042850047DD1E00689644E9A9D6E22330BF572FF872DF1B
56F5F504AB332FC17EABD6E425CA195445145749070919A734F426D447CDF8EF
DCC1C8AA92340FCC7F2ABD44E7DD2F65C460DE6C53A811C8DD08009B214BEF8F
61627487113ED4682C5B84F61C5C898692358FDDE23DC9E3DEF6471946061D0D
B6701D0563A372409085AF0FB4A3861C67A4552C610497D442E859EE91706867
E39C0E1A56B6CC0B676141CE02A627B76742F98C1530A3598F35E26F2E8ED5D8
A0B0A4EF950F4C973976EF232F76C9D0C0793684D68FE95129C32EF4996CEEBE
9F1EBA0D3519F878064707A6F8DB91E06181F1F3C0E9B2EECAA01EA5C1DFEC66
81A6414282747163A723A9E71F504DA5D447AFE8CFDBD88089F2352BBD43CB81
03899EA8517AB8C18737EC2FAABD102F11FDA4C818B0A3812B714D9025814369
FE71C39B0EF059E24087AACE885BE6FD88F53ADA6A0E010560D97BBBD8CCD04D
E347E31D551BB63E42B412C389297FAF0A9F966EB9261170ED04F7433A928756
FC9BE85499D1F143795E2A0F0A30C13DF094D14F4872A4326C33FDA0C0AC392A
2F772A9E3D9EC530266427264912AB06E2A1040FAF2DE1FD6AFD5FD97EAAB614
95689180498BE27798576A28A21ED866FA75CD39AD747A1FE94BD3EB15C426BB
CB0A20D4A0DC078BE75C6503695290749CDF8584D5DB0E5C30E5A42DB22DD8E1
3A29F907A961B62AA0F5E525C03402B8AF7F49C00D5E266D3F77726E3840FAC2
7A27B59664E856EDDE290103A0D490FD76DFE1D2F039D4F536CABFA083BA6C80
DFC355A362A6DA8A777225B84138B959B5DD39FAF86A1DBA1C615E69E408EC96
54E76C73BFC3C79DD8311101317A71126DA51FCAF5A6B7BA4694F804EC6DC218
2FDE51196F72328E5866A5D4A4A2055CD35D520B40E15FBE17A440784E4F57D6
7974C4BDAEDF855CCA6D7379078EEE63E17EDC1E31F0CB7F7A4DFF3B518AF206
DD99BCCDAD65B7BDC9F704E15D7CF52B2DD05244934EA979D48F768640F7E963
D2C09D9BD4C929C8A03801502142BFDAFEEC12D32D609CFE3440E6232045FDF9
B386108E04BAB903A27E83A733F354FBB9A8D8901D368D057290F301796A36FF
76447A13A5F80E5F2353AB7C14C161D90B107E46DFBC351447900D82D0501F41
C4C401006F42609D4B0563550C0E0130A2314C6FB1FA0B48FFBAA16B016DE5C1
1EF1374B67C2EA31AD1D62DF01A82F4C059D2B40E15ABF0C605BA40C405627DA
346BFB6E0247FB384954C20A127091168F63DAFF382C27C52B8248E944E81C9E
E7DA210F62A1C87A102D7616628C80B613A16D5FF46DB969049031B0CB8D94C5
5DF251222F772D668981CD337C68CB9F4DBFB35941A35E4666DB96431B5A9258
C8472C4AF837EA7C03B528EE1BF9F05DF95A2C2F45CE722D9E1C8D4B202B9045
7E66BE037BAFBC79F33E07B315ADF614ACAED323DEAE3AEA8F648222DF87570F
4CB1612BEFA1CB71BC1CF847D1A0AF17B08759FB45133291C5B945CB12B02597
67D2CCA7C97A82344F676958CBE764ECABE84ABED150C1657C88E183809095E8
8840F703E9BF997E8A66669199CA6FFB0C77BE269DE3B2C0C46E879C36143840
EC16F48FFE515A7527DD76E350F26EEAB85EA7ACAF7479F67E59A84E89C36AC7
2560140421800FFBFCF4372B123AB0E8C974EEE28CFA47054DC41A389203BFB3
D601BC9A41A03A9EAD4DF1F0DBB3869B74C2373223236E809ABE911501B07933
495A954F676F7DFA49F81BA6B221FAB4FF6CCC8B35CB48DA6611E0ED9D102FC5
598792E6234F8F92C90D62BF85EAEAE51E4D7B7D66B4481823B60F897FEA0E7F
237667AA288312539283153C3E919F18C2A31FA387D78B512B98701285BCA1A1
AF9DCF6EB91BD761D60494D664D9BC430FC831F03438F0A18BBF588ADA7A1F42
90DDA4B9F98EF79CED1D8CCE5125B4B0BD2547C5B7C5BC0B19209E22164036AE
157A4D53F5D501B1F7A54A840F0594706BBFABB6D16002A1083B0D452F5D1556
7643E590EA4427250DC5F5C74C0F205F247E6AA58C7B3A65D90C4598DE6DF2AA
81DF1E792BF29682F687343EF61149DC3BF556A632D10F0E070A5ED29DF87512
A61DF88B80A1920DC288C46B6BCC4907A2657010B34A93D148900E639B83751E
FA470F566A6DCF28A6672B9F42AFA94D871BE2485B0EBE5F672C09D17C1D4D03
0D7C1CEDF30C1CB82C492BD8F7DA28DE82337E71E1FB409628AAD2D2F3D2171A
DB17357090B2721D8151AF342D42D52C38319373BA77978109DFF22A69EC79C1
CB030B63D508F8EF42A1781E126FEA3FBDD4B058BE494E7328A855F3E978C238
3D1BB5349DB8A8894172D546964EA0075C88B752192888DD3352EB6B7B3FF325
E57BEE37AF1031594D2ADCBB56EB1125D63E14EA26F921C9778D03AF968EAE36
6D422D9AAB802B3FB1F3BC9D5D5422693DE6217AF70369F93DC188F3E3102A04
AAB845C08BBEA8C45BB228598865B04BAC6BA146758A7CDC3B0E022A4C364F9D
61D5A876AF7980F8BA345CAD7157AEDB9CEFE8C6D27513060079F06A16D6BACC
F2689E7AE2CF44DA22C239ACEDFE74596F1CA87C63177395EB94388654B91AF6
5067C3C496369415626DA73FCC4F5A87276B6894D5CFCB7E8EA546775B6128A5
181CCCC6D90E0D88DEC3D9B8C822230ACC8013B256D0C69FA190E9E93C8DF819
4B191FEA4E0B4064AA534A2AF5128A040F1B561D4C3A368F8C0F845EB084FF3C
D1DB3D0E6F9394B51E5D84745C4D6A46A2ED5592E7DAD8D0C4F0A33EA395C5D1
F3D1DE2065C882B52D82E9C7A166407CAC255BC2695F9AC1911D03EE4564D226
889B31468D0FAC214B7F2BC4D710387CB57E2A23E015F7C6BE50F14FFF4452CA
6FF748308BAE99AE06106D90DE65FFC15685F8CF6DEBB38411E8B9CD0EE418F2
74BA87144994469B724EBFBF39D51587D32EC1130C4E43A70C1930B83300BA58
68F466AC3F0E8A3D96530EFD6CF07BECF37587795A41124649B69AA25DC06AA5
E5CDF02B32905C2EBAC2C6DE6A1FDE919ABAFB72DEC7768D683AEB91505FAF8D
7045579326C39853101B94610418B533C5A0255FB7EA3BF057819899B80925A7
979AA05D39528358D7EA533616870588344D7AF34C78F80B8B95FC61C825ECC0
0D2BEE92A6C2A9D964BCE852697AE7B4842D3FB61A6EF38857D0D51B7C83B529
24237408E88791B3254E7ADD9D13230150D1123D5E6A94289C2483AEBDBC7D0A
FB15EACEEC6A0D73FD959BB14FB7C988FE7620C6C185A70C6A9A87C84C4ECE0A
BCD44C6BBF41F12236586ECFCAB1022C12DEE1D4C733C81969DEF797EDEB22AC
FE9C69C8E1791DC2564475E3883AAB0739E41C90A797A3A1270E6FBC65E40B29
4182E579F9D7451888C6CE7708D8E76541B3ACF17A20E0384D9E33FD80A79216
9B17E5CB24BB7156E2B6A920DDB4EE8A9426FAC6456C51466E99BDE47B002255
701F2BADE28357678B3DDADB2DC08CCEC9E34AF5EB38CBA85B58C47B56EF8238
FE3F5C88DD745AC27BB9536B90A66DA0A76FE2087A021FF5FC228787DD625EA5
397506A8D328199ECE521095BC521B9686CC8DD9C7DD53434BF9AAD95C105467
5CD0EA94A638BDCC14BC3E8B67FE47796C8D62F383BDC9E690F9173EB513432C
F4AE7245842689D20DFAC8313D2495E6F96C640992E108B4A2FA4E08B6B88E25
511DCA400EE056DB3C07396906717852B04A3E115BF515869E11A91B497B390C
93610B3E8AD35CF856DCBB31FFD5820BE1595C10BB71E50AE55615FA7C2B3BF0
1142FD2238658060293ABBAE194FA860CE8D4540628F360598E0A8C3AAF39D98
E1941A0173FEFC80D699581ABA7D3D25143CD74FDFA73653754DDCDEEB48CA3D
7A7AB971ADCBE7FD6D74EBB4F152FAA72AF1BB8A54482442C8690E0F3E881D03
3282E34B404AEBA1D29FE1AC76F41E7AE4433D44C3081FEBA198E2FDE96D0878
6272924DA1E7E8612270323E6C7E6DAC4E592D34DE321A9DC28FF7EC6B0F1C16
668E016CDB44130004F35E577225E9E1B5C61591212BCE94C84D774AC91C7062
1763B0735851118D0B17420253136CAFFAAC191BFECC74BE58FA633672829F78
EEC8CAF224558BD0C50C68F878F5B78D3C62F09DB17869299189FE714E789C1C
3F480F9A7ED2BBD35E06C8A1C712F2BCFF69357CCAF149F643EC607E69644F6C
38A6359A96DCABF40453E37504DCAA6D7D4E137F18D4AA6B92E209B43A2CFC23
A5F3A535AA9BB9A21FAACCDED037D1AE3104EB475A0C946B2D0E350272B3DA86
48C6F4CC389EEE62CA3200D97F57BABF9F5C0265CF2A3FA96F409E592A02E25E
625DC47724A300613F3886845CCAA039D56200AA2DFFAB67E3CF8A0B655E766A
1BB33298840D0D678CEB623240957A1B5B706102321DF2174B65735C849CE0F5
30DDF8C95C18E6ED9A01DC44BF13FB69755B7DB62DBAC9581F66538A553C6801
5E71BCE84ED32420A542184AB87BA310EF3C122263E6BA36495EDF8420628540
E0FD5212A7DEF82FCBB5431A473E06BCBCF9449CBFA843F73CABCF3A3F2030B9
032B8382CE1F423AB54B69BBECCD7C36C39FE07D22C2155A7CD76C01591952B6
B4232E31D7B8CCA1527940C52D3CAC126AC25AF487B27E30268783C4575498F6
798010F76FBB2EAE5FF7E5B7678F96A4B3894F9B10877585BE61BDB9A47DB52B
B83A1F15464D43E2A620DDCC43264B2D2FCEE435745272FF8E999D3D3197E89E
03FD7F4BBFEC866C14564EE7FAAD48FF3F0FD3BC81D40C03A8AFEEB78FA27D07
C0643EE5869666AE5C50A95DBF8DB1F9E6858F1B5D569DEEBE11BC7A34D97F56
622E44C6B2EBD97837638C4C2F750B5DCD4C060F46E7F122D942C0E22693CD01
8193006C44B06FDAD5A310197E57432817052CF0BB99C8A171920C54978C821D
33E0599C65A4691664E373B5C24B3EB36CB7D5F86AB267E1C8BA3C56AD8E8957
84B9D744240E11D8CC3DEBD199ADD162DEA2677D46D6DBB7A166C3AACC83777F
9CB34FBA2086540256F10466049F023A60911B4C04CE96EF34948EA9379C7C24
97219928158E34B402913DCD1EFAD01FE95FEC9E6226011A23322B000BD7A43B
DA96586BB4D2645D3BC01CF5FCA7DB48D76A2E9465174D665E9601B32B94BE48
5DBB6EBFED02A70850F2D7ECE38609663D08FF2612F27C3C88C969169781667E
B2D1D940485D724E2436668E3F7DDDE544BBB27ECC664BCF70081FBEDFD21821
B2FCB9A96154DD8E2C79BCFAD9BD47E5D3B317741ADAD91FEBCB4BC099FB010E
66C0C7B6DB8A11C9ADC27E10D4CDCC892608B8F821B8B0A5FA48E71AA211D04C
513579069A638FF59F4809FA28238316ECC327539304E84D11B6492348AA2747
0687DE18F39CD172B204BE6654C5BD3555BA211347AACB702BAB38E1B72E363B
8ECB2E68C0D2672E8F3D5A40E2DF2A5DA0E8325BFDDD13741F21F68BC43E162F
AC503B8A7466B151AEB4F3593FC6CE4A6D6B9DE21F7B4282AEBDC729A64A3460
4E2D61A35D04C28B9F454C81147E3E23F205EACE206E1050AF1C7EC9814A047C
53F3FA7C0FFD3FE314D17A610B762E72F14AA63B12734D83394FCC328B413F11
A3968D9FCAC28875B34AB8445272F38E9ED1AF30488219EFD5FB94E8C012073C
0C3338E636BBAEDE1CCB9F8DEBD21E86825581E3955A5ED069D7C76D8F8E2C75
D7460CE135C4E1D0349033D576AF6134D3719C72C2FB8B8274AB54A6853DC678
4398A6B997C5F755919054DC900685CE73A8D5738C2BC3A5CAAD678BE82FE046
C615B231FD5B7731010E08A50DD46A89CD32143B9672CE2B4E3FE94448F0A8E2
88A3190A2F8ECA0D2BDDE741CAD677367993F1B4E7756DBC96D8A862A8D03D7D
BCDF5A12F2413A82ABCFD2856963D5BC3B89D0E33180DAD75355524454160BBF
89AE33342978D99464D464C23A32B31CE33E468014DA1E583CA12DF2842984A4
0545F973870CBB5CF3A0D57ACC23513339AD7F5B19881FC0AAA15D4CA0ABF8FC
747808A35FCEA9D18460F654EDD7AF409A84FC0C022C69A7D008BE64EC039F3C
C18CB303754C87BD560021E7316E04DCC92FD6FA7E4023918590C6061AAEFBFB
A47D479DF1149465490369CCBC8A4339350D6006D4FD7FFECB95BF7003E5DAE2
167AB993A41AD73EFA877A19124918E1ED3071A762D0B93CEF3C5F92BA716DD4
6928ED0C6348B3452C0593BC18233194F1765118CBF1D97C99F41BDD5C8359FA
0800ED66C961BF468F25A8237B4ADF4FBCF10F61C9BC429B5EEE3FAB3E8E6968
9EA2F83B8DF53EE8E41302E597B15C2F640CA86F291747C4C1B222707A748CC9
7785174C6E81A614B95868CFEFCB2C25AA01AE8644621FE81A4307B9643CFDC0
453807EE043C66DDEB73E854FAA7A181A9132B96220FC2B93B6CFFCE9B4DFFD9
7C21A534C8A75EBE18C09C8CB07D8572E59749FBBDDA118FCF6B4397EA7512A8
4CABADE67A9B3D18FD1238EADD3C52B5C6F80151201DF7794D747898671BB7A2
FFB0FFC63B7D9F12B2F4A61E66537C09C5C102688D162C7FA895DCCBD8276620
B10E6C7E03FEA4C3712537C4EFAE92A0EC0ABD9DC217A467694AF2323D3AADF7
D96E1339E870A52661736E23FCEEB2667DCB465B7AEEBAD2F9F0891F553381C5
E352B4D7C4C16789012EEB16072C57D1882CF581F352AC43019F0A4C553C78DB
44C8965DA246D11B291C3F9A95353F31235306174DD66EB12AE869A75ED6FE17
68B8E8BE31F533D31138784FFC212EDE3106862F54A3D148BD88425747EBD84B
F5048D7FBD085085D8BEBAC637D3C1CEAF96B4581E1C94BD520C6F70C1B6E7AF
8E11BA4798C1DD2EB7D4F96208B9E5E068E55B7186855063934C5716EDC3F505
6BDA950DADC25DF46905F9EB8284105CEC31918A10A18981330D388B3D9062B8
0F9C42F94B4B17A5661AD726E0285F960DDF00AE4AA5B339C187F52630B52309
834F266D71D3C3D248376693092414F78048461E82A63A9A4DBB219C3F925DE2
302E8F26BAFA9C8B162D982EF5902192B345E4705FF8A70910AD75C8B13FBCF8
0B8A318F9B499FB2A05DD142F14DC9532DC0FB76931629BC216CBD42A8EB426C
EA8BFA775366070A9E8C18D6F76597DA46F33D4FF09632C267A05895B76C162F
6A87E39DBF326C93EEB02DAB580509F4B91B6C2E1D3D80994B414731F0AA4187
EEB703E33FFF9D78591EEBE7AE8E745F8986516493AC832218C3E4E6819AFD04
F018DEEBFB8D5A33CE2A63AD59C8CC9375BFF982E1A068E9C61EA876F4FEA72D
9EC479ED108AA48B64CB919B27CD7107D4222DB031074C9C1BCBB42150195CAA
FEF9D5D4766BC21BEB95A8CDDF4A2420F2DAB3612678BF24A2450F6E99DE896F
7F3E44BBD2D49D6F12246B7A514051E6C273C5B044052117FBD605B07A36EB7B
608D2AD018C84F470192BF326C93EEB3B850AFFC91C9E5782C12D2FBEE3895D7
F8551DE31F280F458C9A4495D2062DA1D8F6684D096AA1475909C8B2125D2359
AD152CAC44BEFD085CA5CFA8294D816AB1665D713ED2861F781AF45D55D2D833
87E9874EA7668DDC7C753ACA0892E0BA3500AFE886AF76859D2D5137F0A59DE4
31A9B3E3471C609BFFD6A27A96351DC61E31ABD61BD8E5027B7D1E0C22A83AA1
9F30AB25F328B5826817EA5366E0D71E54543FE04BA6F49575728D150095141B
03E3455921CA39D69ECB4D0391BE0894F486DF1F56131846F8B8F7C22433634B
804E7461C4C257950D232DB03751EF775FA4E5582839AB4C6A4EA4A96C696DA1
3720EE032234737CB9400417512EC4A5C321BFE9E07A4476F3DC48BD8BA01A6D
09106E811F2052866C5F77D878E9D414400F81FE0DBA9E581F7572239E485942
A55CE4779A8ABD2FB956E68538E2887BD4EB7C7BA2A6DD033D6A0D689929ED20
A96E8F4430344988EB94048545A761892E4FF0322BBC0F0F89FE477C2413903A
61E139B0D0A1F46AD9BBB27B4BE4A1C7BB3FA17F242B2BA9F7640561E649328B
578A2066441716B21F76617F02A5FD4A3536688D058CEB08DBC89F2FBC0F4585
1ACCE96B7EAFFE4D8F6B68DA1062DB53EEE0C552F705CDAE9C4FDD907680CBE3
73EFB2A9D0BA7380CFB386313297CFB487EDC78DF0FA994730EDB595920C5B69
882D5EE1176D570A58FF258DE0397390E4E4195FF01F441FB40E3EE8CA1E3718
899444E8A2D0E659556F2E4377707A1D5C6A184DDE591FAD6F00506B3F99210C
D4D7694F734EB5E0466DDFC7DDE2D85AD8FBE7CF0FA85B640F03B553041C97F0
743E7F8E0AC74A0679067E27564CC15C48604BB31C843E6F542C5918BBBA22C0
F34BD80B5F1C286A9CFE641EAA8D1F23E14153AD9A59B65FE89DE9BB25F80732
4E969E8EA4FA79F77D1CF58ABD780100485D3F145B077DDE4E5176888C5EF043
663921499E463205901D44D6B698041CE70DF651DFB75DEA63B95C89B8403714
DBB29112CFE1CAA143AD9131BEA5C8986EF4AB4C375B89C7868AAE33521AA507
BD6D3808E1A813BBCD0E993888EB36BC2E699A11561B0C13A05AA01948BF3CA1
40BF090177F5F54372003FA77F866C9C0AFF5C366EC23E5D0144879F52D5E984
6B6804A990F47A054E70B398FECAA1AD7734553C6E70CECF27ABB216DE33FDF0
A18151E74535E40605D83FB98B90EB0007629A8F6036B0E050C7F113EFD62BF3
313B8528EEF8C8C35B207BA0640582069B36D507BC1E333A6907AD0B39F897F9
8300DEA28E28DC918B4C139BAF134028529A6AE10C337B0E76A2FFD7E81CA0F2
7E49B521C50B03C808A878680E95849459482383F6CB23ED82022AAD3159DDA3
2720D69689B9D7DA6CF61A43B79CBD275F7F03402F79FE28149FDE9D389C9516
1384FC5D09CB51B45199891710E2DACCC8469B31726C9C34508263844E526EFE
F3E48B58CBB43E238959683203BD2A2177426F57DA32AC83ACF355B3085EFC2A
C66DEE92155860F0A1D661D6938FBC839515EE06FE147396C2D47B36BD857097
CFD68A7C536F438C9D4E02646BD5E1B915339C21AC3E92B03EB5D276BB509D2C
FF0FC53317943F94D538164B98BF5E19DC189CCE4F28B099B504414E9AAC7CD0
86D9CA39FBD538F2BF16314CCCE25F5FE6C4A57397219DFBAF5BD11F5F711BB9
B45284ED612B28FA9F9EA6665A83781DCD1ED8C078AA46A3FCF078B0ACDE5F29
936627BA67D3E0E6B720B48FF6A461972BDC0377388944B518C900F3DDD6DCCB
30DFAC973C7B5548E2659775DF55D79660ECEB2D48BC53D6DCE9C3B88D3ADF42
4BF1ECD60128046C4658FD519004D81E3AF27A6A7A099280A40EA4DE002E1294
DB6B1BCABE59A193D69B70EBF716C91C4B5783CD1D263A9781A26F2212F77367
F9A73A7FF1328736371B7DE3E1E72C1B6182F4EAD062389A8EC95478394A485E
C3BE3E80FD3B7A1E82904733B33AA41366DD8AD68129F3BE79B116C55CBA0B1D
249D25CD13C3FDE733CDF3BE813A9E25F358B04360C80A100674F7EE46336B27
6296120C83D460448FB14E9FA56A696C34D9DA54931F6A5E8AE068E991DF9DA2
BE49435372ECC55A7682D1A0AE125DF60C6A4DCD60E74DB4ADAC009ADB8836E0
9FD807722EE632DB8B5B086C2FAAB91B643FFE2447FF6C47ECBB46D7DC418308
B0ED858298B18328115CBDA4210F9B6BEA58F1D10550AD7B1EE8191B8D2A3E7B
25CCF60FA4AB3535DEFB9C1D2D51AC4FD7726D54DA1154D349717A9DF11F50E0
EC7C255AC34EE0FD538247C5324862D368A6A9DF9942272770975203F0A0A0F2
FF6F9DDA05BD68B09CF5A2D73F55CEAE43E93C6B490C440DBCE03A8444ABC731
76A09851287C67273EC9B5DA200F0FB1DF9481BF8D0AFE7F1ACDF4246D95E579
729BA7D4B1F4FA2DFE00ABF6EB5E292A20A22B174283CC99797ABCEAA1473B1F
AAF16062B7C3D93A6023D3F70916B77CE0942A4613623EAC656B40C016A2AA1E
14E27DB01AC8C433734C6F09BC60B67F85AAF73E4EAA0AB18519E5185A57BA9B
4344979AEEFE561D461A1FFA9FD3D57CE0A77D8FFF7929F47DCF65633990BFA1
121E5C71097B9B66984C0E944711C7753FED69F4E36FC0AB5C5035A89F89AE5E
EE31A8BF3B7045224CA935B2FD6A48E9B2690AB815243F1D85F65EFBC957BB28
6093B54AE8183535B473B11A519FBA417D66CF242B9A5332446A86464A13583B
03EDA1F52A19303F256E193A49618227465FB10F40633BACFF8DA1AF63193F92
D71A67375A83F3DCC8A58E0149B431FE8CF215EEC38BE9D3F5B5EF1FFD2C5227
BF2EFC2F043BD03276ABFB37A345D22F7DAB8E0FC3746A58610C62761B3F4216
149C606786A4A2C5791262E328CCA520C1CB9990447B557950221727996467CB
D5D9E804F836787C6C24A01EE31F5E4DC09852F5B47B4F2B311B71EDDE43929C
B9B6CB3F7C155AD62EFF08FF9DFF4355123DD3C1D53D47AFDAD01881F820CEFB
A32C2A984DB25FD8D99B1B5081F92B6FBCC54151597BF060D1C07E65CDF507E7
495F11E6F7EFC6B3CB3DD4F6EF1D8D407BF78624E13BD6641A7492A756F17D94
916D704FD5CCF79104B5D3E4056EF963EA3015DFDB87D7440C24BCDBE87BDA77
2170B061E9784A8ECCDF3C4E872E3E6664DC8255863D44DAE4C1D5D860ED286B
65B67D163C02B7F59DAF12936C127597FC96765644B34BDE7A7D38039AB3146A
A9FA79D0D4956E203FB591DA7D11858C8FE63760CC66AADDD5731E4579D67C08
8F57C1AFF5EAA43E97A878A0EB9DA34C614442E2E0B517FFD12EC6D3D44F7263
F1323974B48E238466A8CF02B1493097C3014510F32F5325AF666DEB12B16763
6622A62C24B23F6338ADA840DBF6F46C0C6C3ED704EAB329475EA77B74AD28E9
75E0D4A6BF6C938D280AAEBFAC5D9DA2ED39BF347F8D478ABC4594D86F03FE29
A5413F505A5C0AFC671CFF178261AE75E4285E6A93D4ED15003BAEAB51DB54A6
9AB56362E26CB165EA4F16C154B608FF63BDA60AB7CADC9A2D1E54F0143D09D3
76942DDA16B74FDFDA5A0191C7ECC1CE40353F869870223BE018884AA2834678
2801778F393B238319B6677D6D8CCCDF3DE3EF11E5A4F0EA42F4F4562B817033
18824B757D1ACEBB300CDA298712DD13676741123E5CA493BB0313F24C98A1AE
B89115A05ACBDED627FCCED4861C504FA2C9708369661E186CB694DE5115EBA8
35F4F4EB6F599EA8DF38DC2E624B821CD5BB5B20
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-ReguItal
%!PS-AdobeFont-1.0: NimbusSanL-ReguItal 1.05a
%%Title: NimbusSanL-ReguItal
%%CreationDate: Thu Mar 20 10:08:40 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-ReguItal
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-ReguItal known{/NimbusSanL-ReguItal findfont dup/UniqueID known{dup
/UniqueID get 5020908 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-ReguItal def
/FontBBox [-178 -284 1108 953 ]readonly def
/UniqueID 5020908 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular Italic) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CCFB357288DEF82BE
422B9914B075E7EC18835881AB22C2A47DAAA4EEC0A8DDA1CDB5292531E5261E
D8FBC087C00D12D9BDC0051529207238FFF92500581849C386F8427D44353C41
FA42972E325397AFA55CA5189B1EF4979F06711E406A219DCC46C88FC82473B8
567E47B75364FBEE1A883FC42C9CD2E1EB581D4D0C25F509BF595314EA222031
BA9606F17E3E4931D50AC6AC2B63711B0E85A6CBE6FFD9275461474D673694DA
B38706890D6422CBB2B499C0C89A7AF218BD84FE0B13D689EB5930AD0DAB5C0B
55F68356C285EDD85B3C0AFE1B9001572AEC0C3692958F7F3E16DB0C2D0647BA
C1A4EA2EAE112F680B33AD9D59962FBD63BED5766186A1C4C21F500B374218E5
7CEBA25638D9F0520E789B2F39CB0567D6BD72C076BC76095B60ED5E82F33E9E
D2448B364626AB558A979368B0F1495D8C504EA8B6E291E781F5DD708FE9B5D9
9CC26079902BF1EA845CC6ECC973DACF88D956769DBABCCC1F7C44B3B1111732
3CFE60583458E93FB796A440E43018C4CFE846F1C79CCA0416E6B446ACCD1D05
A4A682928674FB388BB109497BEE1F0AD9EB289AD984DF057E8A27F23601CC25
EBA38ED89F18CE03BE3645F75ABB0BA2D6CA8746A0F96518E865AD53CD4F428F
601B06E05B6B3F27C3A62CCE52668854DB4DDED614791C32F31A1595BC2D3E16
772C0ECFFBD06A07A1221AEAFB8CC91029C159B121F677C9AAFDE187994135D2
741BDCF6B4442E6728BD38194DC406A9F88D3A94E458275AF47E670A57FFD531
F72836EE4932C0312FAA0C1CE257FBF790B4B211B413770AE9E73A46BA6E12F4
A58A5CA4121CD6A7A7214DDA473850650623BAE8D7BC6F4034C6B648F329EADA
DB8049C762F7D3B273FE1AD47F072E6A69282866FE0F37107E9DAA8FD7EEF483
7B825A0E000E57B711220A699F38EEE6BD832C6ADD8CABCF7A9A5EDBA83116C9
D9139619E407AF339C1A479065EA6FD7A58A466C6230CB5A8F8583955E0AB271
536098804287DA09D1CBECBC283B2810D28A1EDBFB2158886231E454146E77EE
C99A662DC705BD092B9672669F5D791A7F7AD21A438AD1673B5B14C54639E8B3
AF835E16B3F572AE2DDB34FB454F1FD7457B8F803BA0CB207934C29FC51A16B0
8DD920920702B3982C098C8B8EFB199E4B098C8F969F2696F99B310834A0C6D0
36DFD7A74045573F1DE33041696BAE8F8DE783227EA2AE8954123E0586505DD1
631A01F4E029C7494D5F4D94DFCE0A72A08CE19229209F81567747542BD1857B
6F5060D0E08D41269ED78A655718F13DE2756FE91B306823F116B667887F864F
E14B9986B90BE6C4280377CF6F63A8DF81E537B689FE89AD254C935178E836EB
B891DA7F0794B9AF93AB2AA8FB3DCB5CF1401035A152F91809FF91243F18F9EE
020A5F6C02176DF5BA5DB2A26710452C3233CF632DACF4D58324C77B038234A3
40DF8DDACCCD94DAE6EDE99695D9D185F3C54B84B94558B940914C4CCE8B7106
1FA5E8AFF319FAD20D3A6A587952E2FD4F828E078A2CDEC56502C9CF78BAE7E0
B209B741FA5489E2F283754C61C099FCDD9181CFAC6D5546FA3B1390163FB8A0
8D80EA810DB92E287E641E2B781366AB1348C87CFD6D703F63CF6C8AF9623945
52C852A803077335729D4286C1BA9D162F3CE97F910C9A7E6794012008449731
CC1D11D4F4361F8DF9E1C1AE6F5F6ED410BCBFEE0CECFAAFCCAAE15177D9639C
6C5B2404D502EB7F41FE51095D30CF0CE31B93F38B2FA9CCF3648B20C687D77F
F83C5898C718A1E73AA06340DDDF451636E19BC9CEA795AF21EF3258E5238D15
FD8F2E6DFBC10FF2376E84279B5190A7FFC0BCC5FF00F5D3BA5367D7F3264433
81C8DB3FA8EC5917E3BDE1FEBC2F6C2745D698BC1A38F38DFFF36FC0DE312429
79B9B0036AE48CCB5D492BF8E129B93F5BEEB2B753AA52FCC718A3F6BB820540
447CD83AADBD47E8AEEFDE25FD7C6ABBFC6749F350F767A58EA5D6A5D0E3971E
304167B8347993658B5E86C26854ED51C4A9A1C13958449DE217BCB2A2A776F6
48B3C063E9C28F10413D3449213B1766EF8E4B93D0746AFB81B32EAA64FFCDC1
94DFBBCA14397977D0FB05A4553DCE80B95076155C39443FB4126192FE536902
9F50B73E7A7A43FA9DE62FCDA20BB289C57C0AB3E61466822832AC86909FFDD3
1DB0EA1603E4DA6DEB2362506EC7274F837609C6CA1B96E00A31FD262DC7F7D0
15F4B966C1D40D4C44FF67C7CEF5DB33C259CF3F3710C308A9DDAEDCB537976E
514621D92E05D493DB1A817C87A25E58B7FC16F881D2E4EB04E1E5720679EA79
8B080E053167DB1C5821F8B1DD8B7B9ECBE95A1AA1A47CE870568C1F0852C57A
8D7CA479E41B21692F2E711369CEC1A0D81903DFE6216A948C8FEF79A6E58394
BD8317AE32F43B481BB8C9DC388BFD5004EB30ACF897FFC4EE10819388782A2E
A142EDD22BD2DFA573EBEEA3F92E8E59C991A63FF84FD237B921A0909608E8C4
C56CA2EF0DD42A5E346F282D8DA3767FC9F11230CC3CD67B7D8E6030E480FA40
BEC013B783E6A8753B7DFFEF8071B9F1BE8FA48454B62A6A1F98CF4446C1A9B3
C0852336D2D8CEE36C9A2DCF16ABB0B90E9D40F01CAAE307ABC484370405639C
15783DB864303A5205CED3C6662F5AEC5B3EFAA888582591731C80516A256A93
147E40F3C563185662EEE213EC8671211A726F2E34212A72336D6DAAB732B3EC
3376BD946A119169AA1EBF87F75FD4FACE6AB8A46C5A7A31F4D96FBC591E6BF8
490DA0C23DA2F68B499386161B4BD1FEB234701FC7128048CE8F2291AE97EF2C
4B2446425E572253C08645F0BE1E25404BF8131379A057266484C694A52F4557
4E54BEB36344FC6820740DAAF6698291C297E18377AAB2DF1A89C27B49FE4DF1
A6724A2D61C4B002661D4D60A73FCFD5FBBF19A63C347D512DAD1E9CD18B92B1
B8DE4191B2FE616E2BA94B2E95C01A635AC12CFEA1BDFCB3233B9397ED4C4189
328C965AD209F2E1F2CFA7E6C477906CAA05C95E740E4E69B18775AE0C4786A4
8B96C1DA18627ED4427FC22077B6C1C5C7737C114C08985106CEBF3BA5ECB8BA
2BC87DB05AED0AF931C12260A33DB235C5CB6ED329CBE852419E48E07F93C3A5
9948DBB58568FCA5901524BF3F435E99C7432AD148CD22F143102DEB16C36E72
CC67B01B101742C466D18D8880583EDD99F8E648588E3C4DB49A1F7FB304FAFE
2740E0CC561EC03D397A9C7D0A14025B74E7EAD461E1127BAB3FC222312036A9
BC6FC13956E171C2589A6F9F22DB2834AD319F91A00BE6EC32E8C912458068EE
4E169B1E6AC670DC6030E298C7BFA07D9006E4FFE8260D21862F6B7FB8F608F4
44A4F636D24A8A33F801C0487C52AE63BF53DEF188A2F578028C471C5F89A696
7965C1847AFA52DAD27D096475E0D7F687B5B12430D3FC5BE47AD13D56A178EA
88B6BBC730074BE1026721CE54B8D2ABF32FC17F616D2A5CBE989D1D51D6F567
6493147DBFE4374A68BEC0429817A21E5C0F34880FCF58652A48059D210833E5
DFB3CB4E34FDDCA97AAAE917525154CAAB0E74A673A00040810AC97B5A6EBAEC
7F645B8809B95E3090569CE702648851AD5FA10F8E4C4C094C0894C1A1A6B108
12A312BEFE7D3E283A657D16258464FB585768291A669979DB6D2C0E39B552D2
D52450A02267E500FBA9318A3A5AD29D579B63C7B87BCDF6E01FE634590AA129
7377F632B970A4FC77E29FA661A708031C3D00D04E14CFE7EBD535DB12E9376F
F8E0319A14136CFB6433A9FA19798AAFABA38B70692A567B87BD9B0438131FE8
44396765FCED0E5E1EACF4478910E6EDDCF2DF93427D7E2A93EA2D890546DC7C
D7047A127F3E902FFE233AAF2A85B552186EF35D31AEBC05CF4902CF5F3B374D
6EDE972C2EF883E2002CA65F0FB971A553C7392BB6905D9BD16F25E2A81A248E
5F8D7FBF324BE6A4A12080D8D6A53C6BA6C6587EDAF582D1C7BABEE29349E67C
2270DF33C52173394F644E329CCF18A1C204A6172F67E6E50E4FD0547E316927
08DA7D8DD10FB1E52C3762E6E5CCCE068EAAA045B10F549E86F2A4DC937E368D
AD28CCE91832C227CBE3A71BB6B8E5CD046861074127167A8BE52446DA5F0674
E381FA027343F1714381E286DAAB437829EE705351BC0DC8DC06FDD4083FBDF3
30FDBBBDECC3C6CCA35F68023F22216C683CCE20EE93A6FEE3DC8B4CC7559A2E
6A7E266BD150D890E9E37A99047785689BD4F74ECCC59CC324C7EE5A08F58E8D
5D692E8D81B32799C6EB41EF9AF5EE7E8994AD96451473928B9145A2B5225593
A1AA876108E64D2C242D4D9D888A66E198F09F3E6BCA2EB575AE7EDFB3918E92
E16FFE2562EE4B88D3B89A0198E5675D08BB91C58D4A1FBDD953738B5566E279
91E603F1AD0A577FE45786FD55FCBD655DDD930E2AF5D42EF7EAAF8DBB05BE8E
B7F0BE2AC760F49BBA73D635E02F5E5E45E5769800BC500B7B3D081518FCB030
958FF5037036E87AA59357F96D41B83A9B7F0E60B947302209D285DEA588FFFA
7C12ED6617BDDCBA1763C326ABBE0BC380E351214A470189F614AC46EFC1F223
65C07686F8AA3DEE7DAA2BBC195F081DE38C674B0DE35060F5A1938B873A29E7
9A2B7C18A96462FE87F3610E84CD6F7B9EC7A5FEB6E0FE446D6D9E572E80CB65
3FDD8C34B05A94DB650FFFF61FE4F7EAEDDB3F172E1044B2B030AD851808FACC
5326D0A93D0D4C912245399247C5A2D281D1AD81038F55D7E15F733BD6E159E7
2ADCE84558C9CBB6104912B3E7EA6FA71E3CFCC21A327177560503AAF4EB5FCE
14B9B5D3C909B002481C5A0F93FFBAC93C8359578E613D8F3B5FAA5A73A17267
2F836473D18B7CEC09D0F60CA554C7AAA5A17DC1A8E0C98E3B88D63BDF1ECCBB
40A4978CFEDF10DBBA20AA64BB3C435029FB410B55EB4D756870DD46E0765452
6283960BA243188A7212A273BE47B5A0C0CBB7F97BA4F058E9FF8D5F1A404660
CF3812B71B103DFF24ACC0B6090B9851B0820FCA917A2BBB6753345C7DE2A248
6AC61BDC34A55A7E9EB00E807EDF4C1D212B2A790EB6AE1D58753F7C4FBD86AA
9B3164EE5A376B6898E0156089FDFFACA025DF93416D821F2EF8FBC3A0FE1E61
1D9789DC1FE730DC5634C9AFB0489DF80F964285AD3C143B5E358A796CACA168
2B9F1740D44CCD1D1368A0341BFF5A30A9D3D661F966DEF9C63363DFBE1B6D6C
8B3FE606C155D4F0C58CBF673C5E72D82FE96D3838E01EF66B711D42CAAC85E8
A75A34B561C6D1FEE6B65C7240CFAD16A5CB2C360DE0B942AED56586966D887C
01FFC47FFF0AC843E14E1517FC01CD233093AA2AD6B0769BD3E5158303ADF646
FD86355AD80A9C8A99EB8748A368FB6E9BBFF0063D6F76E17B2DEFFE7CCB06B1
EE3E56E2710A5F38E4993B0202DC7410C3BE1161BA7DD94649AAFEA19C2E0052
B2D3BC93F0AAA3D94E0200BA2B88D8B5C4B166062505FD3D5E3FB12E296B8192
4B2ABDCEFFDA844A4103F3F4DF0399CBB1A2DE439267C947989BE769F8498190
C9C70C81213BC72EA52AFEB19F680D152B5AE457D0DDE0AA79C1A840D4D3D3A3
E9B1FAB635246F222363CE1518362C8CDDB9344FBCD943D208B89291EEEA0FC1
BAECBEA49C062FAFB22CC1E50CF21323949B0141F78624DEFBE290E93A96E647
B1C461837C6DD1B76C4ACCD465076E143111E008D2AF05856C6757E7445A2D29
04C40FDE4AD8AC58D54A799AC3D26BCF8746C79BFFACDAC7D836E05FACF8079B
772D8627FB673E721CF02D37EBC861B952A06A849834169267FF3A9A5E6A4D9D
97BF323394BFB66E22B85010CE045415B2427E04CFDD03B5042759B6565F1349
0C9BB1DC3E0B4F1BE38B471181C30BA4B222B5999D84EB2765C726F601584B2A
2C6BD9E68A04A42BEF26912F1AE2D9FA733BE60AA0D62D855D1BFEC52794BA12
45226C02982A7CCF5B95F9F9EC2200390D48FEC0081018F836250DC99D04AF43
AE456F7B7F723D51ECE1D28756A8014FB171C5D4D7D4D37F53A44F47727F46CC
693B5C1CEDBFB3BD3380076410D885297E4A5DC515CF61598446CCC0480021E5
CD81EEC28AF108F639B2CC6CEBE684723FFAAE71CDE770BDFD757924B05C4A96
36D007016E552CCF2B6A61AD44287E0F7850295BDFE51D422A39982BF7EFD58A
DAE77DB4F08F4555E8E27E2829DDCAB6317FE885D5FFFDF6C8F860E45F0BB475
33BD84A5AB3486CBDEDAC89932CB8F2E49F639B35120109FF3C487FC09C93AE2
4466302ACFADF0D2045C0B2313BA74C8DBD04BAE3A1424ACE0342A208CB0E9FB
91C03394BB3BE589BCC7C633BACA43C6EF483A23EFDB524F7467170C3D757D8C
7ABCCE2966289E4999DF6E36680AEBA6264993DC56E7C9DBF5F1FE3ECD98D26E
A2A34BFCC12A1F18358D7F7E94CB59D29CC0A8DCE6A49117C96FCD3E36B57BCE
2B5F29BD00F24D24D79592E907DA7817D11EDA82181A8BEC957513D3C8FC9866
BD039081D987215E61B423E895F8B6526A38AC8D727611067FE7612841991495
866F9D4A07675E6A53AC59712253C3D627787C77787420E6E2FFBFB1ED8127D8
CD8413DB8C43275AFA5742D65809E20F6522CF748B0331745551CAE990E55F02
84537B04F4D392A45C48A7FE257C99717E17FB274E86DFB3CEFAE95F7F38D3C6
178DCF6E262095DB703873E23B61709FB1D80A9EDC4F55709C1E12568DED63F7
F230A14DCB1A371E17F48433E3C73D2A6C4AF4E86D334C7EFF4DBDD122BB413A
073C04773B71A75DA63BF9215D002342D7D2CB150BAC3C638AEE1E0D76CCF052
6FB60EF3B9F61B5F8E61925B4EF528CADFC36CB05BE00F9F9FA8C682966A6289
FE8AF86319568D4DB4469726F84967FF229AC82A13D84CF28A99CD2A6214A883
0EA169C777D56DE3231F857DB851BEB4AD31900336AB6F73D87D55E97B36A1D6
502920B0020AEBA9AEA6842423D4A5C347DA253DB79F22A5880466151D63F955
6F3B456F0F747B8445F853008F8429A10FDCA647E102F5294846150193E95CBF
0124E2558C78BD85FA8D5072FFDC4D458432DB0D0EB4212E1A31C27F60ED9869
5169E18FA2D28A8D8816D4DB955B1C826F2CECAC04FF1E0F8F6642FB7D6394EA
E10B447E584B58E7A241BE7F7BFFE690DBEE7CDD20DF675F1E3AF2BDDDF1920F
C588D7B4E78AEB8CC44F813D87CE260BB43D75D83BFEEBC8A8808623F8D7ADC1
6336C89B5F2F1CCD49C90CDBA01CDE9E4E1F3CC89929B481D14DC6F8AAEBBBEE
8248C910AA425D53D495543E2DC74B9641EDF192081B4B6199F6D621FB0A07AD
0E7DFD13545C36A8E8E5F629FA508D9C825F980D0BD97214F06AB35F354F43A0
192B4A527F9731A604317C8418F7DC6BCA1ADBD3DABC83D2B6E7D0AD18B14E4E
574242F664B880F74BB9921AFAAAEE2D08D81A2A712990812EADF8DE84F0B617
8B93B13668CD889EB74CCC5B329368606D6AA9DDF10065BE61BDFBFC7681E142
E63F17A7633B79DFFAEDB9D791CC8018301B4F1B30D7A942BCB6E558A7A9CB37
577CEF329A7ED58B153EEC5DFE6D4D6023B5D04ED2FFA9EB003F0E3576EA6DFF
A3FE374309CCAEE29C4E4D01A1B7EF383B84720D1BE64D6D8C680EB0525FF4EC
BE4087A21C90686CB2B04EEA3175B210F17824D302991621F700E84E2F104466
9C9301AC69461BE0A70C1BD6020AA04DAD4B3884A2FAE65D9B1D16BA034F75F5
9D59EF06EDB851EA449D3C52C813DF31571C806CE1B816FA75C5FD53B2A6B0A6
6E35951507D72F9C9E70591786CC94BC1972412552CA1FB492E5B5FEC95F9433
17023FC8988F43574110812DF3B49778842DD447E8BAC8271B28497A4B254EAC
9061A596376AB2B2B35523D2AA1E31231082932AF576C50E647504BBA530311D
5A78E407D3DC7D7E0DB7668F818113F2394FF2BB2827CDB6101D3C6EA1C88897
7FDE85AA974F258D6726045540839241FE5991CB72EDD0828A032543D260355B
966AE65DBDBAAE607BC283E3127254878997ACDD2458458FBED3E84FA99409D3
7D0BB0AB0C22CAB9E363DD4D5C4671BB5FA72F4FBB698C093D6B7286608F9FB2
484709778DCBD13E5DC849A98C9E3150FFD6522DDD562C5A9C8B1E36290C1DFA
1894DEDC17BD71ADEC96E8FBE5EDEBDDA0E02E050A422F09ADF83D6F10F3F84E
1A0519DAA604666746ED5BDC83709A49D39EAB26A7B5C59F6888CE30CC789C9E
6DEB811CA5798C9E7FC6D037F4BA3B4E9369237B712F8FEC82D910D6A79735ED
E766C1DDCE17DCF7109F8B3E4C1CAFCD1ED4E6EBE31A5D599C80065889239715
6E7C9D94738ED1EB55277CD27F07648965C2DF463778925BF6BC1751456B191E
508F66BF008414BE17F04CB231C947E67F5FA351F5F689869ED5A7E45EC8A560
71B27DF93290271B3B90D7271DEA2587E10069A4138576ADDC781557126DD700
051A1C1486F5CF218D138ADB3721456DE55C4C9023CBC61151B00C952D8D58C7
5D886DCDA1CB5CEF18898D9D076F0E703AF49558EA446980E077EA39348EB107
C3E86DE2700076179F9DCFF28481521FA58646274EA0A98FBA08E8CF4799096A
4986054EC86F8447BB38D792B164BB103B095F95859FFB70C04162A1EC608AA8
9E25EAA3E69498C2E7C5BB7D72A219B3F619F78D2B7BCA21DF514398EEDAA1F0
4B0B2F0C2793AD70A820B47FC168D3E26F6BA54438E642700ACD32F6DD9DB3AA
2B2916823C595244FD8B836651D5D8DD94411B584B816C8D6BF04C1F4B14E27F
AEFDCAAEF780D1C37728A813B11F83D18103BBAE356D50C51625EC9F6A522582
D0EC4F52D5768B110FFD93B1754CE3C395D42B8D340841B1A6B2BA4AD28BA4E0
097D88E431917139394AB3B4C75D8217C4FC3E4CC99B4DA67440073D0D28A05D
4300A2D9EF18AD905525DE5000F13C8F3FE6808ECDF0263D54DD1C2A50212DF2
A43E898E97CF8E360121D2D97DA220B4CD7450C18B568D12F2934679B4308CA5
9DA573DCA17324B32C02BBD716EC58294173F195F9944F7D1F21D9348F58668D
0FC44C7AD742A96E4337F04FB0E3733E121490FCF020F485EEA6F17FF3DF2B4B
FA3BA030F57D0F97661B16AAE0CCAF263E8B773B03BE6688BC2497C886A55EE3
A12978B955CA9C9B40A5932B7F5D86FF01349E50B99AED4826637BCFCC19FCA3
35FBD123419A12390E17E7703BEF53282ABEC59B6E61933EA30A9842DE1DE9E8
682D7447DFCF9AB5D575D7CF6A974D63397C64D419CF1D0AAFE8E88309EEF35D
4B2029707493F8FA383B59525A4C299A748A5EFED64F26B720F92D14389C8D12
26C1181836E7593FC403C53ECED9F26FD9D28DFDA970305E1559B9510EE976D7
5509B2A3D6AA478715DDD715E24F9B74D3BFE69F0356531035F82C302E1CC769
990EBB15944B2DBC21EDC8C6502732ED863E88E65331E69006FCBB94C6004512
BD3E327DD7C06695737907F5EE2637E649FA13BCB7CC48590D20916C7629A161
1D0E8F2AC2973F6595DB1F8CC5B6C6519A8181E9A55AB20376FCB02F89B4253A
0CE092AFF5E9D8354806A649D70FE86797F76A1888571EC5F56DEA12430C7A36
FE30192AF01484DEA8197043C087E04EC51D5045C9F5986C1ABE8DD25743E064
DB315A314E29E48ADF0D2EB0B3E00FED14824C8B0387A80E95E4D12353AEB7C5
1673B552A4ED8B8A2F849015E5A244ECAC3D9106D6CB38E7C80CBA1A15235AFD
F08911386EC7AA92933CC2B5910810BFE355DB8ED3B0797CC4FCC82AE61A9DC7
A3A241A7D95ACB548C866A8DF82FB6C1661826DC8636EC26FE70B6EEE77CB0D3
E3FD8CE97748385EFEF02596D00C5C4167C74BB0BEBCEA6CF57952EEBFCD5F82
1003E8CF561E27A460F09AC38F596DB82D4B38D641893AEC198E603B7749527F
2E1D6AB60D09A7DDCD430BC34F8B4EC8F336DC86E734999FE608291C77CB0E98
9AC871262FD8DB800FED9BC59EBE947D65A75DD1E07EC8E61375B73164FD4006
C220D99869B83A3C201D3045A841E6A92B5BEAA2CCEAE8487A0ADF3FD7FDA35E
4FAFF8CF00C1AD62B530BC1BAFB55B92CEED326F329C0EFE6552C3787A8D7E01
5E12857BCA30DDC025F6A1729B7DF8F1820EAE5381925A2B00B5705CEA798F3A
0095BE7E1FA541900C9DCF7479CA8AF7239DB7EAF8079C8E8EB5CEF7D57885F1
D2EAF9546531C4E7C363225425E97BFC6DF3FEAB46961BDE02FFD678B929D4EC
5E75D0C5B42FE9BC7F85EF418B5557F0E01EC5984400270C2B819773BFDEE260
D5F3BF00419F357ABA5B48EAA464CE23A5254B80C131F41AE9333A357775FAC3
2642090589D17611AE1D51489EE37EC716FDF2433DFFF8EB3ECC106FBB0E7458
8A93765BDC81064D748BCAC484E125975D59AA684C4937645D888AC2012CDA0E
B858E87B5461BA325F2F9D29172164C664FD8E24377217E8FE29292C253E02C5
07FAB591282A436A2AFCC35D74CD8907E8674DA2B8381E5807205B598F45EFD0
38433A8D74DF71F8593B61DE1286C5B6B870108FBD77CC456FC7BB8DCF35F49B
4A3ED855C31E3F93DFD5CE02B8B9D2F91D2A966848E4815297C8FF927400288B
E027379033C8B821DB81D3C80CCD5FC22A46FF124F69BE42936E690E89D8B9A2
205894DC6D65B8EE6D1FAABE2C8C68A6BF4E8DCC8E868143B4468BC6037860BD
998BB78D16137AE1BF7C636C1F369427F67B9164E072E1288CAE4721312BACE6
52D37D9A2596FD3FF5FFECAF6EB3026EBBF2AB1CB06BC811376BABC17B2E0FF4
8758DF3ADF7203671A44C80525C571BC97F66A8002A2FD07D87761688674AE2C
BF87951CAF625F1912D802C9467A0CB16FCB7D131DE4E96486CC40E877A98586
13F01806ECC413453DC7637AD8B0FF405CEE2B332A07CBF9F013124DF969E633
71F94FDDD72A83BE6B85349B5EB3EF598316B86BB8E145A9267EAE8A38087120
3C6DA6E444B8771F5B004285876E1AFB0BA64706223C5CCFC56DF085B4BF43CA
9ED5D452300F5B46ECE6D6E869C6E121A5BF1D49059ECBA80FEF82915EDAF564
0F000255393AC47C3C6AABAA247117EA0D2C8CB12859D787A0541BAAA7F41606
42624614890F735BA0DDBFE00590F1C6E6408CA7BF40B962D739E895FE15BFAB
F36C827A3CDEAC916077C7708C6DC8603B510FE2B198FE22D705171D82EA6D2D
E5CBA46D1FAFB9C390D44E55F5BDC721A26493FF5FA8F7C68C6AB3D019EF2FB3
E1AB9C757BD3DA14E283240988C9B5A40EA99E76CFC17534800DB6676B8AC771
6757E675E5CD1BD320BB122DE971A26FAFD5C8F9A8ADE03874F939305B7F95A8
0A7A3AC7CCDB2BB3D4FE6B414008600C87159EF07373BCCBB9C7AE44ADEFF4AF
D66D495AD6F8E7DB42B25A11B9101BA00CC3AE8EA26AC2AB85E944C8D2F51829
9B1D3270B52071815424688B8D830070BF5DBE7A604384326F7817D64E6113FF
F7EA75C3E2C1A1A911D284F0C5B84D3C84A8B4FC21262EC8696CAE18A9334B12
04D395F9B0820C363A92E63A865937C3C2BCA04657AF0D8DF965F0516B99FE34
95527C59AF5E9285A3577134DB617FB172078F97849CB7CFDD96C4B64B3F182E
EA94298D9AB1DC6F11D0BA0CEA35F01C5330802C640D6164507B917477087C91
B6BD32A494A4672880ACE7C4DACEB74BF97E98EE32662DCB7C6A1062983DBDD0
F3AE153009269678684CAB718F3505DCB05E0EF475CE215FD3632C612EAB942B
988C0AD745B04DE5B14A22D62E185567F8636F73DAEF36B1917A2FADF00E31AE
893E2DA0C5EE0ECD45E1C895AC310353CA64BBD9951E7262B41F72CA66C2D954
46E01B381BC91A0EDD82605E7FCC495C3913B9548202A5C917EE7E574B491434
FE9910577DB5D595A18EFC8CC2F784001EF949DEF63286092C5CBDA10E162B53
E74C95F373CD1C6912C8FFBFC13756FB808D0E8ECB285CCD9D2C1698DD02915A
DA5315903958682FDB98B8062850874AB3EDEBCA57124A1BE89C2990196E32BC
BA736AB54CDC1DA224B9399542EE3992FC4F9B68D36F286C6AC34463DB370356
9DAFB12A1620BA95275C68D0416CE2D3623432779DDBA7EE719CBE9DC7516109
D45D2AA0E905839C5A57C4207ADA67FE7E0C58DB8B0D38D59FC69CEFA8680707
F7038B3744A45E2B5B67823F809C295B73D39215C536CD00602F3DF500CF677B
3123499F2EB88535DBA066DE38674D8874EF06D83FBAC493E56377906EB432CC
9935A6E4250D386A22352BFA0C83CD98A80A8D92DE8706A7A433E8E512E987F2
1FB099DE5955F56A30B1728A4BD6FD297125BF6365D9888090901DDCD445A7D7
BA562460CCD346483CC71408CA36BDDEF0D20323122936627C44F6F5011E6F8D
DB67908791A338F9E258FA209604C3BE52681D4556694AEF7FA394E426B9BE0C
A8C27142581D10A8A35DD600D24B89FFAAD4D87BD2134BFD3A131563ABB26AF4
4909BC7445C626BE9E5A32E4B2816DD716A51DBB29040CB3CC8675BFD34C01C3
430385522A588839E839B68DEA6EB3940DA98CF7A0B37516C06AFE7FC11EBBED
66B9EA27E2A5094B2B31608746B05933017CC67CBF178C2E2E9685D956E98576
3C1F6805EA55BBA66745E7A63FD36BD0CF99F90861B258E3258D8F98DAF28A51
573A58C0ECE391F17E91E397EEC62902BC917A3EC5E029A2FB22B760F73F45B4
BC45520F5FE96BC4766C5F89687F99EE0A84AE2377BA1C617453EA07CE61DBDB
4CD5C98CF4BB0D08E9F71BA41783BAF9D8B424FA8A2763431FB3743E464000D3
180A3D09D1E853D32783CCE80B5BA5A8B9C077A0CDF030A3D96845724BDEA6DF
F01264B0A43B302DFEA6FED67DB28FD892C6A92800EEA2609E3E407E3138A749
F58B8F3BF877D2F6CC698905E63EDA71DF1004770110A36584F50CC8FC87BD1F
A7B4776D02EA956397924579036F4A4F77CF9E5CDA19B6BB90C5FEC61F0D374D
8FA91790862238F3E77A106B186FE39ED3BA831F97393FD4A0FAFD1D16490C88
3E6D913B955DDF2E413955
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC12C4B19E33
F046CE97B53DEB549FEA96CF6CE66357C4904B7932F5B1CE03CFE3A10C976B9C
C9AD11D7A02816F8E11666CA8B3EE1411DF2CA94172659BAD929E3E3E5248F48
0690CEC6D8F7061608CF2672F65ABDC96B4FCA84D5C847440CF9523D3BF23F6B
D4365582E4B187B6A1A0282ED323BF221EDD0A4CE11CE7EDA738D1AF48B2E19F
EB3DA1664DE99C447C35DFD45069FDED1FCD70B4A6855E91FFBD7146EFE88012
0BFF1D6D1ACB53D5E07FB5795F561A4A3E953BBA7C03A9762ADAE18E58DCE6B3
B1A703122EF3B16963AC7CB9682CE60E17947E7E675D19901C7E8272CE4C9FDF
536ABDFFA429B820A82AEE9A73D7DCF77DDE4D8E251CB3B3A5B0A91C0FCD7FBB
EAD7A812FF194FD049F28B82F4C2D73E41CC73C1C9F668931A2C7EBA5400A1B9
0902EFE6792F207136E1E16B41794E6CBF7316889A602D35C37EF36DEC95AF26
E9BB0900456F2EBF2705ECCE7B2ED90343D23E006ECB282D4B3629BB0C3892F3
FF9C17FE6C5FAB68358E1CD44AFF021948AC9FB8410A3DE22E0A01E367C52470
2A8CFD284CF9E8F505D5DBD7BBE242FE071FEA0094A55ED1CD7C9BE6B7C56C98
16AD1985FB7624F5E48CF6C0C2ED85B466F64C52F017B20CDABB85D24452E086
3942362E764A2BDA0F6C1B24426E302DDC4403A087EFB2850CF3275C7B24275A
AE270F212831F4C4A5D95DEAB61923CA126E587E8F5ED4F2D5738F06E8C4F911
B346B8ECDAC481DEDD2F546305A7CD63CB67D40093C618FBBDF498C8D7EAD8C7
1F5F022D0BBCFAA8670E3B3B999A1697C947AF38D7E1A360E3F0825A9AA77840
D7A9DFD575CE2F04D308F7C553EBF569AC84F2C12AA0869CE107C713A3CCE624
5059BFB3F5AA27D10E337086144AB09286BE3825A3482C5422454C6A9CBBF205
833316780EB88302796FC427A0FB9E53A7BF24577FEB3FA5D85CB6344F908007
183522D3C760C11FC7DA8D14BB5DD800576A6B4D1B991C1BF3DB0F9CA2AC5D22
91079A199F2F6E6DC68213D33EA893B74F6AFF30ED1B51F8B53A015FFD4D2076
B71F73225B151CFCF11E2A2917CF1B3F60E2B4D442307C394E1625F7E60EB12A
F2EB9CA7B17B082F1664D09CB7A3F38AEA99A13F659089426126F47FAD5B6DC7
64101CD437DA3C22BC43E7A8DE07253EB371470EE1E4E42A5D1FA2C4DB5565AD
79D6271AE28E8FDE5D4CB24064C145DE44ED486A1E7DF2DF921F2B1BE5FDB120
D8B781C3655EA72DC22A2A2D37579F0AF60B42320AB25C8D769124352448A154
7A381B388A4D9A54E82F199BA35F1A3981823AB698E3F87D38D32ADDD4F13832
77FCC9ACEE7FBD3285F689A85B76D0FEB9E70F09BAD0CE144770A6CC203CE40E
15912DE0E3465DBC7918E3EA49ADE57EE8C48C75937F5D25498C45170693067E
6902937C9B43AB6080111663D5DC6D88F72A39C5E7BAD677229498323A3E7A22
2FE2552B00CB91CE2848A1A53538B7AF2503A3671903E10DF0E9641DBB70577A
E828DD3CAE98FA9E1A74F4377F908D3CD79461408ED29832BC4C9865550CCB00
45359282255057A4BD4859915CF1E45ECDB7329F90BBF63E0A22A54B05C5ACD1
9C7C4DFC25482A27A20C7AB908546C3577E87ADE93EA46436314A0A7C524B892
4B012239E77CD65AE2949BBF7E46A5A2269B7FFB1CF8A5BC7EEA1944D2B0BF37
BFC36ADAD9A599FA133F77935F24EF518819D054345DF144731DD2332B0F7F5E
84C46AF486941CF1293E86EE719C9BAB6263470C7009C3933F1857B0A863E36C
288D37E6AC85E6A1B4E6E91C0A9FE367BEC427EA3713E8D1F0523ECFF6067717
244CA21C177968583815F023420A660F7AA4CDC8BF25AC3B3E429942B9F5123D
84234C186D9226487C76DFEF5D26165771C0E75F0ACE7E3882E49DE831B46C12
E30DC37395241D7619C05ABC40F5A36F8042B461FB6C3A5181F77B14E9E6D978
37356B4B31FAC3850DF1869063724316104C799B6A2F42C361A375E4D29EBA7F
850FE29EFBC2CEF627A25DB549A4D4C48F9FC9A2F32FA50C1CE6B5A545A95F7E
BF2E9ED710AE91ACE1281A44E49AEE4133CCC04926A6DBA24B721C21188C89A5
2A49745501CFAA4364CF49E3EC2A59D9EE46F33362634F9758827B199FD07DBA
939BD7387124656831862F70A97C5A05959572C74865F5902E95093FECDBEA3B
BBA9B47DACE807262DE0C7EF04843259F58A323471237CD573298C5D0A0650AD
2ACABD71CB44C63675192845E3D01B3B28AF871F347D4A460CC28D9E94409443
30E893D27B06132063AB727A38F447A2A4633D29ADAC01BDCCC7634E64DFDC55
9141F69E1202C4A0FD48479B0ED95A7605C94901373E1100A6CBFC113FCCE445
E0317CC94A8507DD637C37676954B9D34C6727AACF17285876DB16DD0E11384C
2B996E85E82FD8FD2B8F9B83BCCB398B997364F0DDB71E60CCC50CDD5D122EEC
C36B86A89FBBB5BFB227FBA3A7B7DE7C907E58780FC276C24FF066982691A97A
50D14362D27D790375A47162DECC53C5C11E8A7499788DFD86AEFFFE7E674AED
26706E2D079E9A571C6A32ACCC8C0DCF23508F58477D05F9A1FC679C0DA64254
27AE33293D02C9ECA01DAF2D0A1B07E5515D36E18CAA3AB1B6C5736DFDEFE384
DBCD244F0C11087A873C4501C6DE2A5A57E346FD3F92A0451E63FFF6B99C6DFC
64ED8673DC54EF6509D0D043925BCE39072FC64DDF2C49B8602D1A51EE822F19
D7B2135AA84626BFE3FF321A6BEC3A003AD97E7699CFA34BF41F9C2B38DF4794
CB5AE36C95F42B44212DE67A96CA9D047587998636673A031C4EB03CF1A55326
F5D94DDE75086B44F095EDE0068FB6B9D256759041CDA04ECACBD8D7784159AF
AE31A9C637D9A5C0C6840DD9E30EACC66D4D6FD6F12A603AA2DB3E9862046476
ADED15087DA8D19A2C3B7260FB620C19CF0C8F77445B3C774A1A6EAE77D7675B
DD7272617DE59824E5308F85563A98DD44DB8CC9662BEA42BF6D79164A87AB4C
ED4A848913531321E4CCF34293068718662259AB0CCC303901A207C83125D327
B276967F7B37885856BBA23EFEA2AB1902F879F1361AF8C04329FA3F773B665A
DFF0135A65ACB5311765991CFA191CD90195F79A0A30F5C3E3FBCE53E520C96C
0E126A6767FF1A48838221A3FAB6E8027A10873C04482CA1A1DCE0E4AA6C193A
EA970F45D01EFCFBBD18095E8EF7AD1F39F7243D600CF7EE6850CA6FEF497C23
65EBCFBD449143A0DAD5A286F3CEFC68FD0884E5A9FE4C039B09D77B795FAA9C
E14E6FD192E6386BB7825B48491FD0A3C9EDFC45283DBFF9E2C703DB3422605E
DC92DA3CCAE4420EE672576D72420AD0B6EC83F21EA581759C6DB05DDD410B8F
86C6D2D31069286955E0DE5A85EAFB9158CB2B7144ED83959C135A5755DCAE64
C40C11F49D01BCD64A4E06E30F6B185F8F7DC3FADD6DCF8D292C75AC02C20DB3
D8011ADF21F6FD82D4047A53FC31B227430CF55057B0D3795AD53F1ACDE16335
637497EC9C0DA348063390B5A90713629B06EE0911E08EDFF965C6BC89419523
301937AB8A80B7AF640070D4FC672CD10024F331FE72D5006B5CB38C7A634A18
882B73248DBEFBE0E0F51C49B16022E06A761A66FB00C1313C220BFDD7A30DED
E201C51E84D9573C7E26FB4BE67A1833D36D09829FA03EE7D559D5AA9871BB39
2E75FD9BEA16B3FD22EBFB9D13E7D7EB59D754FD44E44FB47949643896ADFF67
741FF8F24D7ADE3FF48AE7B07F30FC4E9EEC8EDC1A4916452575C7B3F123E4E3
C0CDE38FB5E7950A37326A09C2311705AC37E2DF50FBB44FF8C272FC1493F1A9
9DDB2E1FFE7A6765758887D672CBCA219D2B5841538FE1B0FE8490E0821E71F5
A2332D9A7C14479025FBC64489304F69499F2C4BF760EF7ED4B9FC5330FBF72C
20FD2D8D13A2E245D9395B79EF4311A81B0196E0D438EDC078D088785D00952F
144FD45B50B2632319F2DE103605DCA21404B9120FFDE88BB68C1BB7727843F1
337EB7A1158185274D0039C4ACB74C3ECA7FCCE29B5CAA423CBE072DFAAF6491
6424C514879C659F2F9D60B895C339E322EAC989CD14E1E1825F66F51581C988
5CAE52E31A8DA7AFFA42839CC734E717BDD52F97832A2B0C6CE0F06A4DA2D231
954FB9403E7446319F40E44867E391E9628DD94D1E4E0837FBC9C4838F3CCBDC
FE6BA70DBB9CA5E23CC2A3BB4443704769B5BBF0FC7EF2F42B18353A4912C14B
21D0C3774EF24F368500BB0F9394DA6AAFF21AB88EC3D498CA6AA74667AF8EC1
7A41CEC4CB8EF688C9839ACF4474F8AD5D186B8026888EE2AEE387E40A5D78E6
B1E15A9B5E05F8ED25325368D4BFE10ACE43981CCE9FA5FB95AF65BA0898D529
2037CB52152485A610A2A4C2283414C94D93546A29395A5B9971081D1B2BA4D3
84E959E636FFE9568C0E6EFA808F7E37FCF59670F469C6352DE225E7094ADFEA
DF5DA326DE18C1ABFAD67611F69DEE1239445C1FC614F7D9E8C3630706CE1623
71BBCC0BE485699177D70FC5848B1628C5544231517ABD724907FF4C9319E7EC
0EAAC7EC99D54FE963A062D96F50A2AECB9196A878B4567FD0EE4B34B024B277
8744B5D779A887A15B8604A3224BC443B7B1339E01FDC31AC370204B8504FB88
BA15B7DFF3BD741E3FF0FDE74A5961D183FFFDF1A28868C88626086195194CE3
44AB374471693454A8101493B0874E253D45C14DFEED64C3F64BB316E904B719
22BC9447201E408492377909E7B94A6EC4803190E6AF42EB57380426BAAC0EE0
3C94CE913CEEF9101F5BB0A886651724FADEF0EE23BE3A5BB66B1504861D16E4
D45BADD0CC889A95AAFD1E2D39D982C5B1D5BECD801C15DDF8E0CFC78BDE8549
534A96DDBCD8819D7EAC3EEBE036BF45A935835B40EC27B7ED3E03770C23A83F
C926E4E494FA0A910EA98EFC31A04041B8A3E4A901284F589BC7549097D2E55E
6C7A52C3C7106FE2658CCCC0E009F2D3665D404525B5D3F83B68A424E7FDD047
EB4732F1C27DAFFD5054C8388DA82117A062D64DEE11C94AB03CA1FBE5BDD207
5A96E87E83EC06CA377DA1F5B66FA844F25509E56307D4F90DAB7831872B7612
B9C8B111AB34DE46DC68784900770B39B2886981C94E946745358526E6669D6A
FFB87CAF9AEC531E83B40186B6D8CDDF062640BFF7E94C4C2C23E1B05C413323
BC8250901D96AE47A33146CB0403898E13113D502EC5B96274280FD6CE24A785
BE3CBF2F82115796A7FB52873F06EF624EDFFE1FF044999F7362327C9DBD40AE
4C08562670161D495800BAB3A519C24BAF960B222D39F7C70D7A7D9AD3CB2388
6288DDF015B93CCEBD0545DD388100D8825C6313BB0B4C5EC4F71B9643E05856
09A5BF66EC0C03D217DDE4F240B953D2EC5687657D1A90D3698B4CA921C1AAFC
0E337C0F9DC3255995287DABC120D203C001F067D0041BE40C225B8A07ACD5A0
272B74E42127C4032E75819B2806B7FCD8A8736D379A9E99B225E428BAE3E6D4
040A1FB6E9C3C4AC7AA8B27CFF05C5E768115C104826CC10B9ECFD085B0C0782
EA3B1142C76BB60C5182839420073B29FD3A536D76C9184F8DAC51351CE4B918
F2C930241C04D37D232E80D09266B139740CF648981BB0F888CCE195C9D8BB52
B79035787CA8B1959260478F29078B607534E588FF88BCA0E9315393731C0513
A20ED792C407EB1E82A02531178EEA0914A70226B1DFBBBCF878F2E1CB03B898
2017307AD9002EFA9CDD6E4ADF3ADB7AC40C95992364ECF06FDD900DF3444357
7688FF0EEF8AB66A76B7434F25DA98C8E8D69CFF72F542E184A05028CDE87869
3BDD94B051F41DB734A10BA4315B01C0A5F8733D6AD56E09E971CC0AF4055962
B888451C11E0697E369D59556D5D958735855F126321C22FD0B559CAED62986F
AD3BFC5DA2CD9BD0E1A2BCAF7E14CBAAE87A6C1D3D1A8C897922945E45F7293F
5292130A50C3A629D1AF0B20A4003457F52F7A5598A138CFBEC1E731F39A407B
B89FB6187876F95579EE2F3143E6C673DF6A21DFAFAF77B153C87C7605C7908B
8334BD4FE842D57B04423FD0DB3A43EF5F135322B97803DF839374F073EC8874
5B54FAC04CA1722C47B6D2AF397F0E3B5C98F73F5218E9F1BCC6ED8B5D35E44B
0B9C993BBAF0DF210CC8DD57887CE8299F546BDA49402BFACAFE96F992F5A125
84F13B27B125A3973EE318B7575F5906D543DD9C315242EF5660809B76F5E511
0FCF7A39D3C4866CC3344120AEC80007EF825950D159A1DB1FAD71C69F5C239C
BF00DAD4EB07E2E7C709FDE8294697F5D13FA858BCB6ACF708211E5F4E94348E
7ED962708C0482CF376B89605A7342A29BA90F89BDB43B0B2907E8AD9009C354
A902D36C06F7F08F35D0ED64D9044BE0DB550ED8ADB6CA3602A26352903E994B
BBD172CCE6CD2B606553BB366C5858B36F166A935E2DFDC56C806E85E80D81EC
25AF5765919490EF977DF7C0A95221D1D2AEC5D6C8EF80CAAC2509CEDF01A40C
8D8DE3840DDEF2DD01566D578727A02D442E310AD0A420BA879B2D4BE1850247
77CD0EB495F8898A960DF68C0C0BACD3220A1C15988847BCB5B01B04F5C3A01B
3BD24390D80AB9BA120D8DB54879A0463788B5F261ECCF0412977D9CE180DD75
50442AE3E0F8C1178EFEEB5152EB512127DF56CA233093AAFA54FFA50A3C775B
46790D67CC0E59C4B58CEBEE82D396F2A3B3276D8416EA2DDF44717B694E79B9
E29AA08A9A1D1C8ACB7BB7DDF90F0B10B975B0B84F4BD90D4EC8361D3DF55B5B
F4BE1765CD19CAB0FAD3B555B351E8873A4D7DCCCD5170AA533B314D338E9FCE
0D6301C4C4F6D85252A14F0370B44FF5EF5CBA61D5450DE4907106CCB1E7978E
9C522546537C041FE1C46A9634CEB9717C549F0621404F673D424112ED9EC735
189AE1570BA2AB068CCE168552299361D62A2BC2C0DDD5774E90371976C5FAE1
625D62879E4B5A7F10378A9A32B9E777B75520F5B6993A26C20A2114E2BF2E1C
37EBA8907A9FD2E324E8B75BAFA9673F5BB3CC348AC52F4DB83CDB2DB97B20AA
7D44F776816A160C72924E411366BBEC4965302A8B4AD3F6880ADF3C06F87F30
465B40B6058B1F6DB8AA82C5904BD21709A18502EB54822122BE7AB2C79857B5
23D6606B84E60496AD2D61D9FD8AF7C20249F36BDBDFC5AAAE4AA18B106C43E6
5C93925D9ADFF679C3272383D7526CEE1C178B1C6988F963BB0D75314DB41384
50AE3C9C1B184DF5E4681019A2F1C3406A9722E2A993E726DD72DF4CA18857A3
BD1BD163518B50D27B0574178B30253C166B90C4FB2D295212861C7413F43DF3
697717945EFF169AC1E300B695BE3BCDABFC4D49BD8D88A8BDEEF77BC1686DF9
2D0F1E34070C73F10A8789380DC127C1A518263E1052ADE7F788203C7618A7B8
D8174BD10992024E17F745F2E3EE3C0F379E76451D99AA82119E8EEFA5E68A70
8298C154CA1CBC5A2347AC28E960123A04365D51441EBC1FADD0B0AFCEBECA91
7E174E7CD4A7D383F0FBB132881DDB7B0ECCFFCE5E082CD7FF922805C21ABA0B
E8E9DE7E2CDA94DF2AC0F9AE7A0DBC6620917821E66060393224793BD5B382C2
3B1122731C45591EDF98D4EC454CE33EEA95A09C7B64F45856AAA4F80B0C2D37
0057CF8E64D86252B69A28E33BCB4F4665F07AB827BB2AC6BB81E6C9503149E5
514B919B8C3CF24248688E42635326B87736B642DFD9F2E1156A514F2DBED85F
14FB699BF7EA521607C9807ABD8B5F2A41D9D60E8E244F51B510492714BBF952
A4EF7713EFC7017A63899555D5DB1D59365969610079DF9E96CD97FB8B05BCE2
C9D1D3A775FFB97DCEE58BBB72495C099A124A61440A3CCD272E8A5BC5FEABB4
B5A048A0453914926944A7829ECAA4D460ACA97DB5A712D13027D165D2E2223F
BC3D65E63E37274D9BEB13F82B031CFCE1E57F183186E72DAF3D6C6B41AAF741
196F9D48CABEB786F94DDB34208B7B2DF9FB4B712ECEDE31FBAED7293308DDD5
44E2F50292C9F85DC3438FEE85CDA8342315D3573CDF3704E39C72B235FF44F8
B5B19D1346C28C36C4ACC3E69BC402F60D34A23D8E8ABDBAC8A1DBCC61FE2FA7
5109FA64EEB0E9FACAE8B178F9D45DB2BCDF84069154E1AB489D2068C41F290C
822304AA495EC9EFCED6E35CBAF6014B6B9692EC340436C6C583ADD77FD6FFA5
346A76DD0020488FA5B9E2EEB50FD5BB03377BABD91B813EAD6F518231408E7F
F63EBDC529F3179B282B3BCC7480F7BF0F4244EA5FF817F94AA6939DAEF6820C
C9D47E12AD5EE75470EDB436D61674CB27DD52510E4A58D7238852C882077AF3
D701FA1590C64A7EA8481BEAA0B86DAE9F8F2D85ADC74A66551A9F87C7A08A58
6B816A9F00051C72AF582EA6ACF772681B31845EAC1DDD49DDE7B7DA0D48A6C4
4156CA00259A52996A8EEE8F744417178336FB1970FB42C1036058C3E5A39151
0E023C2AD766528301C63100DD1149E478D55946EBF16B3D79C5031E6A775A08
BD9E0F864D6AEA92E7B4930E35ABA309EEDA1263577D0D75E04A08136828E2B7
2DB6D0685DE073F965646B9163394A2F5F8B75858AD31D2A85239AB22CCE9147
5133C3557DAD8413854C38657EE7731383905078C6EC6BEF4891BE94A0F01254
1840B31CBEFDA44A52384F454CB61660F0F6D8FE7A9D6854D531414D69E0C386
928AEE9A3DB6FAB217AC5A76CF46B275FD59C35289E8AEBE6A0A90C62B59B950
F5F2FC4C4A1E09D4671353EA2D9FA36899B4DD42E746AA8B21015DC1817216D9
A8A396622DB0538CF8225EE073AC0A7A1A889898BDA23F203281BE5E84341961
3C67890C421016B85723184C0121C3164574C66CFFAE3E9A13D5B4CD7A4A50AE
ED28245CFC11F8D373618A52F45B78B2038D31419D090688EF99E3302B40CEB3
EDB35173A691BC811683DCA5A16CD7C1E14F63CBE44EB6FB00A5F0328A6C0B84
537DB579D5E2F1C30B8C79C675AC28519A6D57B0FDDD4B3635284CF2876C2970
59FA4F26F174F433C247D31EB693A2A2EBC9ED4CE3759D25C3A03233142C9330
A1A1FAD6955F891CE793907ED4A1C56DD1E32CEF988CD1F304AFCFBDBD4812A4
09DBAE170541ED9ABB5D71CF7A8ECA539C27F25A06261C275E2754904B82A2A0
CA8F9A3B5505C313727A8EDB384AE4AF409AD63DAAF36336FF12736B6DF4916D
9192C5892EB1DB93D4112A6D2A96ECCBF8F8A377D8309CDB706AF080C885AA59
301ADEBE50726203318961C2359A5B82A41FA4B443C4E738DA874200B971D665
7EB7A32C49F0663D0B94207EE1252E941572E5792A3CF4E51A22310C7BBDA006
F657613561CF8912950413A7F3C0CE3589A13F6DBEAFAFC99B4FF75C9468F719
2480959A7E81EC975A86B8950C5BBC57DE78ED93E31B94D8C79B0A8465B0057E
864511227E18D425984961A3E19BE891AB08AC3BC4D4DC93B23C1FF6C73E4328
D3D12580F0B935193D5092E2695EA58DD5D2720041CD675F338C6E0566019547
374B2B29F844A14BE14EEF0C61C1ED69A8C052AFC2202589D8DC34F64BCA84CE
6A3A965E595CFAA3E932804AB61FEF7AEB23FD3E6E4CCBD5827C917134DB19FD
4317064DF994E5237328D0120F15B7F26D47305D51EAFCB30AC67220F1C5BF01
7E11E46B731D4E873E49965782376F01682586AFC77F70B7E5E3982855297525
B538746D31588F1B51AE3B1019868132C789829A67F3ED9EE1D3B4A47EEBCB6C
4CF0AB7FF016FC7C235B75F5E907CC555B118C51B175AF813CD3919FC0C2C56F
B6843A1918F44AEC9671132DC640487E7E0B64FAD17FE5F4CEFF352E851FCC79
C32228EB7E87597E497865851750BFF6A61FA3801955B327FFD8788F74C7328A
FEEC6867EE3AE987ACD547568051479277DBD86FFF47B41C510A1954CAD021EC
CD529AB4C6242C67146EC82FC7005A3D8D5D6EC76D969FCC1B44A3DDBDFABF9F
C520A1A66497A0B5B5C997DF742A415D00638D12432206B9FAC7F3075CA07EDA
97E7F37674C59697A210FB5F43BAEFD7FA149A7A435A1D2E5127E1E3BE8A7F69
262B7A624FDCFE170D0B532010E1D7DF9C25111234862DDBFDE15995AA84D0BB
ABA6EA7D97D11D0EEA4956F5D287574A88B8E08712D2C741B1F381DC155117F3
816D311CA89BE960398A641ECC07BA8B2FFB4845B160FF0F01DB58B780E75F7B
EAC939D78296071066702E73F4A31CC8541A55D36A042AFB9ADCA348A056A5BD
088284AEF162BB2CE95EE193BADA615172B7B4EE1B2CD3F97FAB671EA2CD03AF
FC7DCADF7E0F420B776B90518D90A2781DFB04339C512A0A605A25766721CAC0
9ED03FD3A726194779C4C13F36F2A0B60F8228958701FB438BC7C61D9A27654A
7C2668EE5E123BEBBDB42A7FF00ECE678EA65CFCBA98C715219194E12F62C351
FED2497364930071A852A8308056774D53F0854E44955D4615346E4F786BC406
06BA1E9D0A35B0B8EB1F74EF96BF5F131D0727D7CFEE86ADDFA1905A6E402E62
405745B51372ADA5B0DA79DBD85399831014C2FF8A833E90384A039836C1E87F
E434E537A41B5CCBF945ACAFCBE1E5A7E11DEC252BF95182273F45B782E0A67C
561683FC58248A488BD98B8A441B3D6CEA4011EF2C4BF8844F607A353B902B2C
B9F3C94EAC18A52EE99B413AD9AF38CDF9D7EE9253C6EFE87DFE9BFDE9D0F7F4
FAD54F19826F643A4E4A3136430B92E1366D7A20F17CDD27414436B4A67848DE
6593D3EB0FF52C95293A0621CCD60B9407C3D09FFCAD5BBC36F86E5561048010
E0ACD3D09613051CAB3A3B3C2D5F91CCD086F541C247B187108D4B625B0D5C2E
1179CECB606323DD73847EBF19935484A70B63689226DAEA8BE20B0A76860A7C
8B4A8766DD2B39E7C0E63CE1082ED0CE6E6CAB25682006715AE13E12D5563132
B344C0F1ACD7A8411A450D9C48289DC7F1DA278FE623F0C934B44315962B2EC5
B19762E6395F2E00FFDCA2F8FF066F9607258CBB9F6F394C77930BFC8172421C
EB906F2116DE7E31EE2CE1744EF4FD12B6E830B93192D3A8BEADA08073F8CF37
906C7FFD75AA4EA4889FEC64D0519454297720F62A1527FFF7AB37558BFDBC07
1985D21D6955B0F8DDAC8B2020C7797CBBA0B4ACA51196C14CA943EA75D7CD29
88345BCA78F87907525917E2ECCDB025C85C56995C7307B0B5471620D1DD1283
6C9F7D03157BAA6ACD2916E7FF5FDE070A32C1590B6402949DBC272E7178B147
7B93807D36B80623E70853BE70AE992D08FD966A1D2420A310EB4158431646F4
5EA63BA74E293218FC2EDA193D1CA8CBEFE5B719EDFE53097E9699F639964315
676726B0B387D7DBFB53A03E46FD397FBF324BE524CB5AD18974C288F493E82A
D7E02BDC047E2D7AE2B5E4F6DBFF16DBB19B18AA00C3425A30F6070F30768C7E
147518CEF1316F6174C55783CD5CBB6010B709A0877FABECCBE6EE1D8C1FFB46
7D342226AAA07C0CAAA57932CC720619900A9505373CA21313254F98CB6FB476
5484F6D1958975E9676AF263DDB01536E048B61534B4E97AE6285138EA3372E6
2D4148C9B6459572F01DBB9652BD60C9AC2DD6B8C4BB6EFA642D051F2EEA4D9A
28E370A46276E04BAF8EBC41C59DE1C1F61D0EC0E792589DC8B9172A9878D3C6
C740E3072B196ED8DE3DD4F7102BF07E604D4D5CA6B0DB640C83188B47FC6A68
8D56222A1F39337E2F578517DF9055160F5A0D15088873A96F5DF6C847A2CB30
BE5BFDB18F1ED3AFA52571C0EEE77039D7085144E4A1F0BD743D125892C50C29
91DE2328B6D4C23AC550E115901D0F63CC1E3442E0FAC45D6AA9E164DBA9F045
8FE35C64E1BE0CB0FEB14EF808F0438B024216258F8AF3FB8660A103AC0B3558
6B779EFBF8AE7F5148751D58B46DE5F1C7DD4C73DB27F19D50CFF1C8E6F183F3
D4E32C4C8B582CC726DF72B791524D2584CE3ACFBB4AB6123376025328CF4036
A09BE909064BC27A2498921DF91089E4CDA93CC166B130981FF7BE952892A81E
DE8CCC3448EB8FB6A1331E8F32F0EA814A9F94F1B7E3074CE9C668D2DFA0DA36
D051A2A840303F34F4B79E0E94A108416A97FEA24456666C28476F3FE3CEAD85
60F2C1334B6250AEBDE55319C8D04108C27F5643F7FF47664BDCCB09E7687FB6
511D3A1E07BF9B44B2613ECAFE2E1CB8F664DEC138DE80CF4C66E0F7758CADD8
FE51885E110D0CB32133D1DC202ED7169E0C95C1E8A9383A48A90D85AA698658
F9C61DB3E045F30E87F7F90966F261E819AB9EAD3004B12D4170D4FA24B8F383
B500EB44022895282A7015B1320E2C9B2F8959341356BFB3368DB2A746A4C475
D17A846E44D69FF3C223DDBF727FD7A09981059409043712784A09430B4A66B6
521CAB9CC02EDF023AE1985063D8E4B2D82303D4323FC660F6C2F0803318756A
5683F8193B5C6D6F161C81A7C52C69ED71BD85AC96EFC1C9D15EBFF664C78852
C86C288098930086C67655F01E66CEDCB5199C2AFD5910112F446CD4445A9184
08C3AF0AF21E042D76F00725EAF87EF6C912F379ACD783EA854BC55424F201D9
072CF2F7DC2CE81B0D36051C9C041BC24E2C8E9220203AC64B2F69EBEDF82270
F61242EDC29AA1844A7F54B956C3ECBA3C55E3581689277A4116DD72AE1A2A11
079C218FC405534BAD540273E282EE2B1418697AE4E870DF79DEF59BBCD5B8BC
1458792A20E939B41AF6371CE3DF0C735AE902F3E489F50432A73E38D6BD01F4
DC41F1B4232C88ACA09D5F52370ECCE915B7A5D1E206D2B1B1E85A44045DF9ED
0F05C1F90646B8BE87431FE72299956CCED9EE91DE932ECDF7683E0C543D7732
58EB93A4C4918FFF2AE01197E8BE26883665C31B5361DD20F1410BCF82E36881
6D02F095B7404EDEC4E525E36EEB2B8CF0AB144777FE62C02FE728F8E227B71F
DFFF73B8521CDDF4137D902D3A241BC57B1E921E6348D9A6E88627429961B14F
474E9D6CC7C851B04CEB370C691EAA2218F5C378AC12BE8030FCC10EFE0F278D
A1C5FA5014BE81FA0CDEA19CCD9A98957D22F451D20C3694BB31B4ACFDB1F6D7
00CF54E442BA21EC99080D8277831AACA164B1AF7A2E8AFD5606950F934D9408
F437DAC6CA04E4CD9B4496694FF87406D84DDF502673F3050225C627AEE240ED
1F1144A0F6AE5E4AE5C3C65B3D47DF9E2593EF83C2B309E471F72C1578301C98
2A1CBB20CBF7CB94B197F233EBEC20B351B546731E86D7C4AE0A0C259E96AFB5
74E02030C1CED85B12C70521693A739129776840ED154D3F5CCF8E3A309D5E65
9DF66BDC1FF3B3BBDCFACB1509EE18CF81522331A842B58FB764EECAE4C2D2E4
EF82F2CA8AC86E4AADC2B70B842DD26569B60729963F1569114DF898D02FEDFF
1FDE6ADA096E98EA96C51FD6E26DC00F45F36890C7351EB37F2893C0C314390B
5886F9E4AE99FE17D3A00E106A67A7A1BDA5C9983672C787461FFC94C69C6201
2E634FE101B9C100ED53199B41A9BC50E4EF8156CBBC127C0DAD2795F4AA2685
B95981C72EF104E846A1843E8FF99C4A231206496277968D41F2A2613EDBFD4B
274484AF1313CB53E8ADE8D54B3A9E4BDD1660F0BE85BD8EF9B3F5C0852A4DA2
2ADED745E23BEEF10DE87E0EA621653BB8D9F748E7E3128DB7174DD656001541
FF8F568064EFCE241CD38EBFE0E47DFF870062F84AC8C31CAE303133907C1B3E
71B669CBFADDC4BB1B159241B9A721B1888A27DE19F324B7C3375C6BCF806FC2
A1E404EFCA1524FB5E9F4EC92431567EB9E9DB964303EDB1F5B0A378EBB0B95B
052B33DE665579324C95149230C1CEFA3B92842D2A6E10F2E3E1D7660898B02E
C4801DE7794F0309EF09260265D22CCA9DEBCE56FA0A6DDE8C66DBB9A7F1637B
20DC6D91313186C7285120753AEDA6F9E49334282B4D6088872740300863FD8E
467C6B624CA7D39D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Bold
%!PS-AdobeFont-1.0: URWPalladioL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-152 -301 1000 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB42B05EEB99F8B643CE3
F4B6449ED5A733594F70CCCD7BDB073E630C93A502476CEBA5741BEEE5938FCE
3E77996A2C56EBAE52B2701DEBC95E363E995ACEEDFD1CF8EDC72768951885B9
84F82225B3BB8E9522E784197B8AF13D70B2CD113F7501CD9333EB9A28CD9D56
824E9A3A689741D4577777676015723D17033D2815122B32062451E15DD271BA
6831FBB953F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D4C56B8F52
BCADC9DC83D5C7C45F5C6E60DF9F9471D42B1D6F45EF98EBE41997BEF7D56981
8F9AE898AFA16089A91654ADB0AE2631539262C43BC5206D6CB73867B19EDFF9
024F9C3C7D790946F34742A688BFD183A1307649A36F782DAEAA2D8E581C911C
B42485441FCE5FFBF911F1D9988FC5C601D09514633B415378648CA65F2D6F40
F7CC23901787522154CC33941615849C4E5F2600BE11CE10B78AE007EC0E5137
4C66EF207977C2C2CE5FD8E70A74DA9968C71790516F1489FB5A2585DF9F5E06
9552F391999992E23975398FA0F539A299EF090B9CA16E940104614A4FA8C6D3
495975F6ADCA90522557B3F02FACDAB68EBFFBB8579876F09895D723E482DDF4
FDAE645CD275F3A8DE44AAD1D4C2987B6CD35FBB18312851D858E2F382FC606E
41B7B9393EA57A7FB9903CE835BF1F8E67C15EC8AF980D14FAB1A56EF1A62E14
5433A36160111440DE43D4C8F28013504ABFA5BE40DFA52D34AF251629A70368
73B22EC87849070CC52FE3B74D259E603996AAF50D77304A8B6631C652E482D4
C36A5EA242B3F6A979331BB593EDF29F2D9DC6B35BB39A5876E5378E71CF09BD
151E4B759D53762BB109DE5D452919DE87197C14A816E6970C6476C8A4F1BE28
E6FBCDD677D4379E9D96A978EDA97A0F256534A641017C46F0637A6886CF10E1
EBD75689D3CAD47F1ED6096F825036BFE59A50A550F0FCC978EFE560113A6231
60AE7DFF1BEB6846A97F44BA6196DFF0E9AAAB0F3F34EA25A98ABC50DE2C1812
47CD8A7E2F2BFB159544B845133FCD3B9F46D1C48462A806E9E614D5EB37B65F
BDE52075686731382196CAC3AE3161EBF89944F88A19A5CDCCA280C5A47CEDDE
B826B08AC1581B76BE95036D3797DF9D68406C79A4B51ADF64776AE9BCAA6D51
1362E7A00FDF2C9A6D40F64DDA4B706FAB728B6F6FA9302B4455661480719E97
CFB7A10536081E4E417984862DAD762591F1E352EB919871CFB4FF8536EAFFE3
51E99FBFE366A8105105F3ABF883222A8596B5C71A798B4C25D89E1A97DF22AE
7F7C5F36F1025EB753B8EEFB121487E91658D1692E96B6A021CEA623CCF6C9BC
4ACF593CA80F3ED850D167CB091D6F95BE42F08C85CA35DA36AB230E3D91EDAF
A2B77B58F4D04FF628190034DCFE58B45A71579F9701691C2A5A57BC5C6B1992
738F39E279ADDF7FC21D76436C5E22167202C94B089B617755699EE01A4C7B87
E4F5D46FB80565D7EB65EFF9467A98BB2A1B06CD5A8AE30297EAD23237F1A1C5
F538FB22CAB1E57CBB9EF520D4E82FADAC6C3829A77B21282347CDE770EF4CDB
A6BB2FBF3648C5F5A0B3BE75E98F6E719AE4A222E708C468F8B757E3E4224BF1
5C2546FC3CD2F4C08EE304C75F8C275BA31E999ECE027C3F34F3A7994822DC58
7BAD51CF47D76895919973DF3F8DA82E7835A49860EAFCC0E659A9082991DC31
DF0B088BE04EDAD1872737624823085304CA2A9E9480BE92186290FC29C3C7B4
C27598C98A3DF3EB0CD389A52BEE29FC22398BB244AA98E0534CD3FD1A44C8A7
4DD5CF9B41D608FA42669681F72A3C3B7CEDF181D84B0776AAA08091644905B7
43C26A74C90C77B605EBAABF79818A68219E858B6E4B63F8E9BA65BF43438EF9
F52AF893BBDA215450E6174C5C555DAD5EEEB9110AE468D1CC587A732FFAE035
6382226C92B9537DF8C4F37383902B4E1665B01234AC83DF6D4E53F991531228
15AEF3FF77045FCD774A4F81A5577BD4B255CD6114AA6A305C8C2635D44EED34
55C90F1D36E21D52A210FECA5F50626F2156ABEC6BC7453597A1F20DDDC346E1
C4E776557BADF9158C88A253D74774970B11342D30A798FFA9B26E48E4728D19
5114A9B35634AC999453690C2945D12A5044CB0AE12FB168192AEE4AF696EDE5
4CDD8A7B08A1A0E70E5CE0FB43E820AACF407DB268F2760F36F91A050899D71B
F8873C2203C7003FE088725F37CD5EE2122D79E9E395F5CAB8B4637839E43022
2CC6CC2E73A8B7B88E1A128C703B117F616F6E9F716F0319307A660C06E76820
33B4376512D85F65AD30E430DCA35434BF21A4362A89E46F7DC96AAD0FDCD2B6
0FF9E8E2D038E6DDD5BEE6EA025BC7ED8AB2AD965E8A5A3ECEEB801B73F312A8
24384B68C1E63595042444FA75A02D07082A94D3B28BE10AE301CC183BA579E4
45175C7443E08C57B73429BB93964F504924FE9C00A60C733E43A02B47AFE712
90BB2D5AB03FCAF6FC56C26256B9B2FE8226C32B7662157E6D94CC34A4E8E3C9
2492497C65597085592B8B358D93E8BB74CB357380F47D21E1E8F4754E16647A
BD41B7870689AFA703C14C6CEC9C660F929FB67086BB7302290BD3B395000680
6571B9CD0D82FE7969C2356F9388609ACF2038E79BEBA97AE481ADCA68963746
22F1AFAE92E524E801943EAB41D345CBE471FFB288192C67913019CCB8D949E2
DE5E95217D9C89F8A76E6568C4CBCBCFF85CA680A7F1C5C5F2E5ECBE4D2F5511
9A0FC4A9CD662111AF6D1E46DBAEDAB0AEFFF07735D75C5FE9EE3134E9987FAE
BC8E47930AF89858EDE20D191FBC1B302043F06DD5C6C0B583AD1B76D458E958
3EACC692913D9C2B7E21DA0ADDCC8C72FEB0DD3D0308B396C6794D4108C4B009
0F25273486FC05C819423D837ECC696F1441068E565CD2EFE54417BC8C30E340
5ED62406FC0725BD88C5C0BA4822EC87DD6E2230044D201B03D979E13EC12C37
00562574F26A24E42EB7202E6565A0071252884B872D3A300F52896E507972E9
D2B907C6E8ECE6CCAC7684B9DE946532C896F4D548B6017EE32386CC7D782C4E
605642559C5D083BBA0ED606E1C404942AF2DB61C33ADE345C6AB919AD4C51ED
0C8D95A7A03D8ACAF3911F47390051A3A2055CD35D520B4061E6E8A158E92E8E
97722C3457AAFDABB03EDE901C372B3188E10E4599E767C15F2DCF09C7395917
DB3DB41CCBDF5DA816E2650FE1A8E7449093FDB99959E6E37BA455D5FA7F1B06
AC07D37AD0CE47D8A249F665B33CA0CEAA29B3472D3EDDF379166825D86D133D
B1E1BE7ED6FB2E9536E75E87C380B5033672AFF41409DC976169C2D18282098E
151B760C9CE324FF020B8AD5B274BEB892DD3EBEEB9BDAA6679FA80338D1D9C6
529AA171C31E8970A2703173036CE5374FBF3968519BAEFDD633A0E366529E01
74005C85080B2776B80280051611EE2741AA7E7136D4C8818B84C955D42EF905
37D9529079DF418C1143561158DBD1B88509896A745587FF34076398D5E137B6
E173391BC7FDC4C3EA48A011ED335CAEFD8C3B6AD1242A80146250DD77B44844
933E182CA7E70AFF5B14B02B75CBD0738E35DAD8E609265984BBDD588CDD10DE
AA79E7BAA7E7FFA6685B01B775FECE0C07E55FE09506EBAF30B9DDD8C16DBB69
1FDB28335BBB3DEFDB921C86FBEEB0F238F7A384087659245BD5AA1A57DC0E95
6ADC19E19CA5DF2F8CDE6EE8CCDC7BC2A8FBEAC4A8017A6E7BDE6BE19ECA6336
09A0F921F59D19BDDEEF94B13807520C8B4F0FC3092ED33B200AE21D0404DCF3
2BCB28A7373F882027946277E1C656004E34D740AB8B3F64A4AEE64F7F6BCD59
CE994AD4BD0065D122E44FFE52EEFF539E3EF538DB8ADEED01318BC9A9C8A96B
61DC19759A70E79168A4521EEE8E5518B94CAC169F8DD6F8727B7F021BCE3F36
7A12556306C5CA204B245758ACE06C4D84484DAF1EF7B066D04982A8660EB5C5
7B8373304A6430A70EC988EBAD0ABC1DCFBED577BEC9CAF146109C540FB4AEBC
EADF0E4CAFAA296A2E0ECCF2A36B5EEC6CDEDDD20883EF5F271247E624EA31F2
9AA46E25081674519DB7975CBC1587C49FE6F336680D6B3CCDD960C4B6C9016B
9D08A9834E95F8B2FD03244B8025004C7BB80C559B33861C324D239EC488F2A0
BFD5C81EC333940BD3AD8C75262EF6C5B60BD81D2770945D3D6A8F3157D3E119
9474C14257E8E029B387278769BB6AD6381713A93E5F02E55EF58E729E06BA41
5230C05A177C8E65CC1AE5190F1A6FB4565049E8821D464BC817B16A1777CCA3
D56A827CA6E2FB8EBBA30BA2F91BBDC31E48ADB3D9C7183B8EC192360878D62C
F471242E05D1CD18F7FE5FA60F8F48E2604F7775BCC1B2CAB6E839907C48BB13
E5227FDA302AC2C6E6E9E4FD19D4727A7BADDD084CBD56E873024034AE2A2783
A9B1A3C643DA48BDD87DC466D2E8CA4596D6E4CAABF844D9B3E036DC6EF89874
5860CC48E55E625906298C0AA470662BCCA90716C0FF768A9C7C69C1DCB4086F
1985969B4128A52251DB3EBDFA8F59FFCA5E7FC82E2753CEB9D39AB195BE5776
EB8D864CE0BC36AE063F87729AAE53C60DE5EE3A1E09CE2A3246B9B5EA106E3D
1DC1E4B7DBF60FD0870068140DB45F90DE9249C5AED405B49F7CF1BC4BABE5DA
495EF9EF7BC53AA53ACA9861E4B27E5D940928D79AE432E5622486EC25852DA2
5B1EDF1771E1D1B66B2150EB9A30D98E6869F882BDCD3130014B13C38A37BC79
0AC0AB34C2E73B9E1B6A90FB1A389A34232251E83D7D485FA928684BE45192CF
9283717A4393905C7710A0DFC6B4FE349CE4FF11CD3491C99DD2D487D0336DF8
2AC4B4C79DF08138CAD275CD5F2C6B2DF76BCD1E0D8FA70335A48DC7A7ED3D99
BC7625F68569BFB3F8B9C2426F811FD8346E0029234B166287804CBC66A788D2
098D50190E6366E664E05A91C011A21CBF37AFE44F3CAC59765320D00FB36FDB
0FBE006653DDB67C4D063AF3331CDC4E7A4C7AD163CC146D765B3E0A5F6F7578
CBC0E215D30F6D2A5FE319B9EB7ED73121DA901D3C398AD9865C79D676D6B17F
0AEEA9D3DB1E14CB94BEDB7125CA79A3D2FD95FC742E8AED967AF2257AAC6154
F09CAA40C5A5CC99CAD18C00BEA3F3A8B7C72026D04C446A9710911F8CDF2951
8D982BA31125A314FD3FAA59F3E64FCF63583C747AF0BCB31F8B2981C35F8008
3C996A0752694BE30EF04585B02E61A8FC6B2176FCEC5A15BAACB61EF1DC06D6
7B176B51C394E8BF01D9669DD6CB1D746CA125FBE2F97C2B2459661177DE1569
44F5B7DA6D2659A6187D0724DC3A843193FB23721F1DF85CEB8953B0333D1601
9A6A97A916AAEF38ED3629CAE08C036AD0BBC058E016EF8CF771614B3903BD41
3214F653B63699FA93215B05DDE7D979E695F9312DF997708E3789311E2D0760
593A88B9E39BD67137CE03B009C6EB0292B3D95EB0CF5A282D1E54D10614EB7C
8E165F7AF47B122C187429B175E4971745ABF4461BA2D81DD13E01433F2F6A4E
803C329EB885CF0BD48D1C437FDF99B8FDE3B2331480D2D722850ECF459A7BE6
4F6B1063792B16720DAEAC448C0210E884C2AC5D2C0D4BC6325B8C9592AC4395
15BC74CDBE6EFC6692322991CC5D84F58F84CF3DB923D549EA429A99911A9AF7
14E4BFE0D7A135D13557165B8833D23217EB1AC0CE80B5BA8B6344D571393766
4BE1135AD03C974D630057AF95A5A6372D50D1D2252DB16A1F22AF64A264842C
84647103A1DC29DC47C07957B0D0818DE9AF292E3EA778164E1515AD76A26BC5
B7A37153994658FA13B688CBBCB3C24DA8AB4C8D12F2567AA65C2BDB1B2FE391
4B782C94D57265B1D14EA3BAB8992963570CB758BAE3A349A079D18E171F04F6
E164C2CA9F56BC5D4E3E633D60C022AF7C60C6CD394D7C4BC204610D3A925410
54CB7893D839B8729EBEF88073E20168E2E404C35FD2B0E96BA465DAC7EC07F7
31E0BB8C7C8ED352E0A1E6D531A6B88161FEC445841CABA1D2A59B405B86983B
4AE78580D8518F86D5368897BB038CF07FC21678FCB708210E615B56BCDDEB8E
688933804EFBC6E426304DB6D40010E62BF91E5F195DC0623C166172A1F73B76
5307B7093D9CE3EB8C164A42676C4C753AFBE1C00F0F99B0CC5EA988A2944C7F
C65D53B5A106F63E9DA2F7DBCB7A9C897B37857F7D517CC14BEE324383EF0FD6
48D0A9794333EE2324C23E9F051F47C7556B1208BA42EB1662963564B1A7B40E
5DF8F48C433C5CA5EEA8F6F8AA6FA28A2B5FB9653BD398287E439A0E82CAE9ED
6C07D533D00EB4386870643CA83B5ABAE16CAFCB214AD810A3E22CBBCDCC9538
BB8AA51657E08991EE25B7E152E1BAD8C1A223DBDCC2C11E8644590A27DE6E68
2CC210D4205272A9AC765A0BBD8CEA4AD8DA1B8847F4D07774293F14F28ADE9D
FE77CD3E7AFE2BCBBF5586E7311A006376660DC7C687555DF9C55AD867DA98A0
D072ACDB59C9885E7F6A0CAD420BDD672FFB15D6322EBDE0D381539802981F41
595F0D10AB1F08D85B1BA361CFAB29CC3895E121232EF9ED5AC30A07BB84E8D7
7A814A58E00B4B28F054FDF4590EF2D8990B537F9884A1B726C74BAE3E78D2BF
0F0F1E39055E8698CD779719B97F51612958B389F643AB75F9E09EF347911BB3
4107E71F9B0B193D78DBB6BED93241AE2E61B9BCD8880067802BE8A36062F026
E25F3508C48A7789A74B0DD607D1396771136E67A0ECF7DD8FFAF3F96D0DAF9C
4EDDA77E28847BC7607CEA4A8010D622CA954925427C3FB36D212F5A99A6472D
75EB1835210334615B7B15EB7F0235E9B65057E34981D462790C85EDBF5C28DD
E5EDF84A7BB9B7F7C4C7B25DF1E51F1B5FD51CF5DF313E96D69BF28F66D1FA69
B3036CF0C1FAFFB86C4F8E47524D6657F8D557807DB32627EEFA4DA595DD278C
4CF25698A946177D20524096A5A08EFECFA40C23F0EC522D5E0889C744596ADA
CDC73C8414B6AFC58CC56C0D60C89ABA125AC3101A421D7DF4561E59920F7080
84001A233C534F00DF5D6A6B3071218A7309D4A97CC9110DF1CCC32E4F161AF0
FA5FC8F3399F07B6CB89D586FC855C634D9ACEF68ECA006853995A7730F7956E
2C21171E453DD546ED7361FD8C2D97A8D77C30FB52A523A6BDBB2AE7E4978701
99090BBA334297879CCA879BEC6B48A9C0EF971923EC9A99D86612C4B9854592
3881D01B3984B6600869A73D971C8AD739BCEB4026CD6DD73458D9BD552DE9B8
B0AB69A51EB27FD1846A78A3715D84EE43CF2A672374EA0E7FD4CAC2D686F353
BB7DEFF79992E1395A3E5E0589989EB091ACD57C316165FE75F9BDC7729EE71A
092C34B4A77E7A80DDF98A2C8329AE79B3A19A68875E2A04777B87514FBA65D9
2BC23CC254DFE08464D6B34439327ACE113967FC8BC90505E96D4B33CEC14542
127175CFB75E375C533796241520CA551766D4EB58906834DEDC06F97B6828CB
264C84403E378898E3DA0878B284179E82B79A42A7D0BC5812AA5072BE796574
3DF0BC090FF99803F98F41A50DB2CD8A2335B62CA1D8384D4869BD9004CBECE7
F6E7DB9CE98E2B1DD10F21A0717E5E69694C514BF8D267775F61423DD2C022E5
141779DD5793EF2D2F1DA1B6DA819052B7E802445AA7F372F527344AB7B4970C
E00751D1FF198F9BE2D660F139C70DEF78DD68B5A21E570C8B0B4EAF0AC1C993
B6CEB761AC8A4993D34A1E76726336F6117AD26CDC5AE2850EF10EE452B49AAE
FB2F85ED64E8BE70E4B79739F2FB995A4687CA6C3859C1866A4E7958F1AC6564
A3371420EA9EABD2A144F20F58EB4D6570F0B344C69264CCFC2E9F45921E62AE
B13D93E844218A3E30692ECDFE919299665A010019488FA5E8BDA6B09A513C81
D37E3D54588330C297834EE3AF5505DB8C33042357FC3E08A242B2514C24CD74
D2A6056E9B89886CC7C9CDC0A0A0BA8A818FBE3E91B0105BB86E0EB1BE0C2F48
D33AE8B2BDCC9705D1EC8848293ECD9599CAADB5A05467997DFA2EEA9B7EE86F
7FF6398C06F8F578B49B1936B886A9483867A5E3CB8A961CEB372CDE1EA85205
20F2BD172958717963AFA5FCC1C753E473E21EB8BE09D16D3C3222A6031E6891
0DA373B32837B34FFDC5B57D7ABB18AAC41C860B70833B92CB7228AB2C8F68D0
3B664C3E72303A29536DCB6D816B534777E34E68624A6EF114E19FF5DA64798C
A2101B121B248C6E80E617710077804F08F6FFBABBBC55975874975D1CD5E70D
041A3A1CBA0E5ED8C8CB4191E9504106F99A2D7D706C511E64D4A797F3331938
7B8B4D40590C5B5ECAACCBC15BEEFB9A6CCAF1710D4954CC69CABCD08E21D3F8
83F49989BFC5EA7366B223DE3E390F630394BB49AAF58CEA34969A78EBD9A762
7855BF1EC0E25BAE39A78E29120E4FD48FA46A3971C295EACA3E7EA4F5ED92E7
8990A082ADB3A32F059609ADCA2CA74B5DAFA70C389BA8798B3CB383E4249E04
0119A24B3FBD5192D368BA8569A2217A1444DD5670EA83CC2A1CC2C5D6ADB354
B0D2F8C6C5D809F919A8D74A918574CC044347E34EA72ABEF541F9588C5051B2
7FE38273AF004D09264B9B3F335495635BDFF798B08C16568BA48CABE3508F62
EE685C1615E63034CBD210424B72BE4DCFF294E01915AB06697DD1EB56F2BEC8
DA741392428462C5D16591F231AA8459A4741EDCA511240C9ED5425CF05D9898
71CCE60042E36B8D81E7497D6920DD05D66A745855AE4E6168C756A5FBF94D80
30B571D1DE58FC6F53A4E6B3A9ADB450FF5AB067EBA0A500584FEE644AE96C57
18E81283AB8968C6E5F85E045FE75052ED3131BE2CAC68DF230C9BD02DD2DF54
E0545D2F1A5EF64D4525661BC276CBA3B349EA3AE533ECC0B1DCCC7C4BFA192D
53B8D0E815523981D7EC9C79643AA8086AA84F72B285E68B3F6BF6F8725D2F8C
17D123C4EB035990D8CDB6403B2127490A1255A264AAE179D39920F9EA73D2E1
73A7EC21A236348E05CDD3E7B00DE8E7AF6CE2D792AA4D0E62FDCC1BC4B675BB
C764940D9CE654ACE4FD10FE5EF5ECA1833D20CF2071042B8FAB397AD4949CD1
8E139ECE3C73DDC06D912FE4D85BBC15DF0448A6610E1F7FAB897E1D4B3B7521
2873FC8BCFDF1D312FC0FC7059F1D06A76C53D2F372029AE355583D824B2BB00
511639CD5D7D69509DCD6128A9CCA7A7AB0990A549663DC3BB116CFAF9D35EB4
A11773C61AF149B2F9FF4CC93884A85EE064DA4752EABA882FF1643C39D66922
A884A2AA0F340B8C656FABABF84F0D07D9A407218E5F66B38C3B1D6C951EE7F4
FE093F0021C123F051C2B0553BD61DA36D06397A1CB57FCBAAB01F70AD759643
52EDC8F09A260BFCE7C040D10575084BC081821FB759B418F5DB8347355868BD
41CD7DE845453909F4BEAC191C1DAD8711DE64E2EB506890AA3CBF50D220ACEF
6D01A32D68E043BAFA2CCBCA3E7597AE5362691A1CCB16C7B146EA5831823A51
E983E3D9DAFB260DCDF73471088B84D140E67987B33418E42C675594F0A47310
2FB885CBF54F1DB1817431CDEBC96FC5685A9FD156E213BEB565C6BBFAD21887
F481A0F146C6ED9FADDEAF2F4478AC6A1B56B783D349F243BC217FAA9D3D4780
1F7A6CFE211D8D38B33DE772D9EFDA4C340958D49A97AFDF1EE130172CF57A22
9C1E7A1C817A3DB4760BF1B5E5B6683FC8623A1EFD59FE163070FB90E52AF4DE
E22B6590F99095A6DE9D0A379816840E7834BAA4DECA19DE666B09C61331980C
B30D9A9282E700408DFB276116F9F33FDC6470DE2206FF5348A089622F71984B
99B7A23E2081105D918D4A961632CC43EA795454EF3821A439B7B8BCEC60F34C
630108A5383D9C15CDECBC2FD100BA294758100BD7878CDF20151C3223852067
DB4A70DAC8313F4BA671B726BC1CCDDB66854057DF939F91B8C667205EE1EE1F
A0DE41800CD34E96C571704AFEC3CCDB0DAB6C37BDBD468BBE1C85408FA4D85B
59FCF5F60647C3BAA80761E6D04B760635771EFF726D4CF0A6C0D51AB9437970
23065C805B19DBEBE4C9A81AC1A268087727DA51CFF0E36D2F6F445CB662BD8B
CC4CDFC6B718C3F9677F1EDFFB70E37AA501AED0CFE8C70A8FF380BF3AFC986C
34C0835DADED89F63ECE3B50F0179B013118589666CB0D3A4992CBDC61180C93
FEE76C01F510027D38025DB18CAD40A674F5ACAEAF4FD173319997C399F4D75D
AE7F7A5331C598CC8280361E721BAB79F5C6C81329015CD4140A218CE0906D0E
B0525FE1A4F8027384CA2C2651BA0E197271D88BCFF3565F70BFFB84C7D79409
DAAC2ABC213F81757F4D1B10BF5405285A313C490543470316617538D36F2238
DA79A45A139AC2C2C6486DA5E6C2655E926367CDFB4E62B051A6AAFCAD4F6EA7
6B85DE815DCD78D9937F6077D95716E5AC872E7F295DB44DF316EEB080EBA400
CF8B83ECE8522848E61AC26080F745228EAC9B8D04118D982D76718A92581353
634E727C2089B505B5F326E80D3935D5464B37C5C1538E75C1B74A79C57FC780
A19302488CCCE9D22150DFE31081117E23A8FE474C1A99321FB6498F58D80E02
81092623455E157903DEDFA917D6E87D01E0EC2BF1AB517C268EAD6F7F7537B4
CCA0C4D81C80471B38C979E86E8A19030DD8508F0F3D6E279D73180D6B0E7194
057CDAD9DEAF54725556F98333C12D3D5C40A3DEE4B7CDA1CC57C26B89604A6F
52DDD0846E626AC0F3930F403E1BA05C45AF10AA2B46C06038AD16D1C9D27262
C1846072FD8E1E3079097BB305AD05E007D43A7A0870C9094C25E0B3EBA3C735
422400510C9549AB0CDF676B49FD2D9DAAF0AFF6DAF9A13ABC6B18C3A8424117
85C1B3CB5138E89F8214D6E64143C77D77E1663110DFE711E9880BF1ADCAA614
55CCF8E3E54C3BB82685423DFBBF5EB44B67B0DCD4F97C6E3642425B0B9482A0
FF7F3F0A61A0FDF36E77C3D379CF0215B6DA1AFAC33145DCA87EAAB93C2D4E3C
1E52AEC909FDD3BCEA9D8C8D14C20005B39C19BC5F3362DF19FF27514A43947F
00BE35395BD8CB1E8273A55216313CB926B3E294194EC63B0F0AD5ED06534543
62F6BDE1A2DB2EB95AEC515B70554120D4BC875CE3BBD6B3B90E508DEC7D38EA
D3DC879377A13C5D374A3455B44B9B4C736A67A69959FCFE317E1E7AD8009AE3
1DB263AB0AC36D12DFDAAC7E96F9DD9890336B1F08A750A0B144F1A9130F5C61
D63BB190C7B471B9BC83BEDE3A63A8D12C4AF121325775A64D3EC3F4B94F8961
2BCBA28692EC77EA0ABD4EEC7474D863672CEBA5422A251600C16DE40663C750
2126670174981D7CC8D2FFFDA9AA25536A09DE3DAFDCFC56BF7AAAF0CAC50861
F5DD700980D70E34B1B3929EA15A3E1087527165D6D461717877D90FC9109D98
A8D4937DF8B2923C3A3B4ABEDEB04079726CA43F52FA821387770CB343E4843F
CF5CDFD716F8EF19C9C92E6B0B2D79367DE777E8CDC7195B07887E4CE3A0A428
5A9162FE9E840BD26D7E4B56F2A179B8E0CCB75039D334A798628709641036AF
63FB4D13DE45AE7CC3674F637F0515B9ED0D51E68B268962035005C92AA7C03A
7F8FCF84403DB837A6E6EB5B52549B010FB206FC42AD1B381D8B58449D0C7014
7753E076B747CA459D5F7BC28526FF823955C3AEC0E3F2E51005E5A7B771CDAF
5581DA20FC4DBD5F2BEF6CEE8E8E5C48FBC0CA808F7021E35CCC05AF41494D02
C675A1730F98F06F7A65EB2A5573F2AA33CED2A03A77A19BC5362820EFE44AF3
17332B34A33040D66B3D767151D41FA380370511E82EB031F9CA996B64517286
A221C7211F5F52F03ABDD787121F8F3B338DEB79F8E10D7441766532DB9F8E09
090E8ECB71ACDB08D4E9BFFF38C1544B2DCB2F493C5986F02E496E8B60B1F873
35C65B8DFD10030C5BFD9F685933B1B6CA8B3E3E86907B2A3B1B0E46F5501292
26329E0436DA0F22959B6EE1A1B6E08B071117DCD790059D8B547ECADF161F2B
FFA231EDED0DA7143DD3DD4956D23F6931E595C1B588A74EEBAD21D5F92139BD
7CF57C5B919A63AC5B9C8A3DE67540F6248B29E6BBC9A6D8D688E4E9C42A61F7
CAA4E1395916E32D0C5B081EC1BF2FA25886A96280ED72B339C7E00B782526A3
C7DC112B448F22CDF29D0C8B40B6195BA08BC703E64ABE33BFD8E6964AF489E2
78F5BCC1C95980E22604AE5F97CE68CF87DAFB47B5418E4092BE9F0DA85378E7
4F5D585C6C5FB6DAC3811EDB9B3CDE38DB474C2D2110BF199A9527D50E200D5C
3080C3F839C9292D8CA28B507641AACE2C46E915233806F30D13DC8B1A60616C
B434CDE7436FBE5D62DDC21F48C2302AD7DDC579F682066F685F9C0A123D10C8
0D416543DF2435BBD4C1D7EF7BBDAA841F389C6BDE80A2E3A689085A034CBA00
791EE592FB4DAB538C280A8FBF85DB55C3ECC1B8B7230CE67686A55FE9B3144E
CFFADF39DF8853FCBC487EFBC6900C49CC03F4B769A9086E993E91A2E23D6B62
2779FC97D1C263411D2BB7F9B29CFA91BB4E32ECF1455DBC3E902F2AC3ED51A3
B369367663F57F4B04B03D4460F5B8EAF3E626D7B094035B99D34BF59B4564DA
6C51C3F01A4B69B445B57A6554BD7371631F0B5815DC0751A926103E662A0348
E70A97A4632DB599AC1C55B507A6B130EE52B355A1550F8ACC4BE3D01EB49B8B
B78F81FE42DB1827F994E9EFF86E090C506501BF106AC063E2B8EEA19EC3ADE5
245DD627628FF3A7791FA63FE456F6ECE4D25E13A1FE5E1284DF66C11ACB0B1F
0D8CD5BB65171F3AF111E2722605554A462719F67A9A7E118BA9C5900EE7B1E8
CE89A55C0BEFB530C12C668F184A66D911FDA9633767CC89A787F82D8BDC159C
27B180CC4F6E2E9E73D5148A0EA43D89ACD8EDEAA89A61D9CF3306707631F5C6
139DE66EA86054E2297F55DE45E3E872BD8F6DAD70F1143917DB990826700ED9
9EACFF7502F7987D3B29988CF128FC9E8B6F106E667F9DE5E1188816793A51CC
50822E4CEB67F151D79577021BFEAA513A347CA8EDC2BDF77757F0FC270E2BB4
A8AA530ADFDEADE682740A19926161A8A960546C2563A5D7009A02242F0363BD
8FA31BC40BBD0A1001DC232017407067F8E9D019B06C0B9C260ED0FD35F425F0
F8F0992FF91099C74E1A0AB0B383FF58BD0E3ACAC93C4FFBEBC6007D613F23E8
10E77FD9351BD58EC7B28C4DFBB75F82EA4D797568761CBA38746AADD16EDF3B
B714C5A037F58DF43A39DF4F49413176CD8F4D562CE367D96B03C03249416A58
616A182C804473D40CE908BE2CE1A957CD64DE3D22F67FCCE2BC52AB1C281ABC
27FAC2F19A09632422ABDF7DC3B76EEE50CBD3D6FA14CD280E2C9F9886E5454E
F6A31C62F8E6BD5DA6BF950C292C152AEF511F6307DBE2BE741D163595A84B6F
23B664CAEF8469FAE3A1762FC4FE3F9C36A543B2705116545B7D7422E3F8EF38
A0E0699F7370A2B7553909CF5CEA8FA701EBA7326300222F21BD061D32185E5F
FFDB790D828EAA5BAB83100649CCF52E2847CF547F29AFA8DCAA347F9EFFED7C
736E945F84D0182CFA88C982E18D4AF8C445915895070514EE95B6967A7147CE
5236EB13B7F16BFB53BDD975A190135FF20F66C2058EDEFFC19252B241558E2B
2380848306F12AAD4CA68EF86EFF285C86F9B88B19890571C6082790580E0E93
1D82FC1EE6868FE35338FE4EA9A069385334BF2924E6E222090CAC841F7506A5
C24F8B56D81F90B58119D8E3625FABAABBF1EE9823EC8A81779ACE571A6E4128
39A1E6CBEE94EB185FA9D6EFD6B7F816D9E1CC0D5D480C58AE9BA49D611C5322
93CED0F7F78477AB5B1C5A25C907BB7A9C4B9BCD593D8D88007C97B7406EAA73
E79883897651E1D536A224FEF55B06A6036ADD54CDC87F9D25876644DF32F378
698BB17CB6118EFDFA622B219121677E28A7FA08E3593788833381F20F7E9082
A6CE823431E43B9E61E929DBB55842D44C4D6C7FC55BD529D9E7C7EBD59BCD03
58A83970B2B20819C87E06075DC32A70F10CBCAF17C5E6912DCFF9FF07EBE821
AAFF09597BDEA4E71E7211F591045D26A526ED690F92B91C0B62C295EB952368
7B5B059D8D3F20870038B6EA3C5E41A3E6E6EAE70E6337A1AF601CCCF53F7D92
2007B1DE3B1371305AB9DE7C00844CDB963B1104272310678F74491DA1572344
FA5E4554B39B8C52DE63A06B1B761F68EE313DAC963DE59CEC824FD7D591A617
EC7403730DC7FDC3F6298C4728CAF93C46F772B5E5698FC7DBAF51DC2CBFCE07
81919E04C2E3018A3DC0501293A5FA8796AC1ED4DCAA4A65894D94EFD60548FC
8B0996B192D9CEEE79A7012A045FF72E024A4CB57B5D5B537BD2FF89086BD0C4
CAE557ED6633FDF5CE357640B13B0C57532648A5E341E6E376A63E8A5C95A891
72B1A13A4823E645378959E3A4959132D9C29F46AC7A467CB73043A75E693DFA
A0BF9F9BA10DED055A723F7AB9BB690B3F1F8D5D92B0125D3D3408D17A983452
C23D5090E748679849A829F4171A1515A6C5DB91B4AA0E7AD5C3C5D5B1BAABA3
54F932E78031D291D5F694755DF836C1C62F7C09A0AB81C8E8D447D5FF7EA0C8
7617EA14910656948887FC431311F9A5F0D5B1E3F86ADDED7B01A3527310A240
4904836E5C8BDAEF59F579B58C1505A4B333324F63A51207ACEA7DE13ADF4639
3E062995A9F4213D30B583E220F80BA5571A6E412839A1E6CC9171F0AADD4B7D
DA455CAE9D1D5A9CC3891A934D8ED970540D9AA3C82AE44C3A37CF0E60BE9263
15049E5BE5D59298D807D2ACA57AB52253DD323B75170FB57B1ED4EBA92BBC79
252FA79EAFE5533AA647964242105DE1C5D65EF13EF95252B3DACC2D14B70D0A
E365DDE57671A6D9438D8833C57BF883777AD13006E047CD47201EC97126096C
EF9C47AFF828B76C03596844DA7FC8EDD79922578A8ACD22D3FD264A4270C723
2CA1219DB4FDFE3F438FF0E862A45EB9A3F53F28B42945DA4A945590FD1EB05B
6304D481BA8847E0D917E62C98DFB04AF568556CB1E5EF775D62175B648AC5E6
91F48CD8E7610ED7C555E1E3B9946CA816F6272CB6C1C7673BBC6C99D80E14D8
E02C1DBF4011CA5A9D270098D1E5D877CE10AEC917612B2A95F8FF87E07BAC02
D6E4C5F5682DD3F25D5A9F6202D4150CC1CDD9E14A6050C3BA3138EFF6501C12
A8CC30FEE51EF298B5F603576B9F490E98E518680AAD2CD4F318835133B84442
58F47091FBEAF29C8ADFAAC064AA1A5B3C77A78D3AA68BDEA1059F65D9589F8B
0E56FF48A8483FE40EAB38D9D043DBB3B344EF3D5D6E29CA140190F9F98E7D51
AF17B9562670E3E4C6DC5F5C8FBA28468DFBE8C160773F64A633DF53752834D3
CD5D8B4BAAC676E012A737EFA5348F305251F7D56B1D427FBDD036FC72D092A7
6AC74C34163D2CABF2778C1F3D32A58D3C67AD8724522F1C611FA78373A5746B
9A2EC9B274995A3F17430C320B0804DE5CDDCAD9D5522CEE519304A64B35D1E9
C767EEE8809D8BE8BA6121EC767B49C13A6A7350C050921857BA08CF77455226
7155E959532710FAA1EA6A15727C7EB2869F15572448D42014DF2B231A1DEB09
1A84E06870234B7533B09E38F618CF6F662817B4CC5B8EC9B0576FB7EABC7BAE
61A45EED379D23BED8DCA6132D76C53B78A28BC434AF4C900709EDFCC22B9C02
C7B4DC651BC88CB2EE8097A410A3476404B0285C7AC913CEC83CF9F300831FD2
5A9A7CC8B88F804FE10153467FC0AFC951B645E30ECCABC655E01DC80DC3D3C5
CD3B5E0513A540D0C7575D56000265B67F8CCA723339562A07092ADCA96F8530
77AEF7EFBFC36B93B38E71825486F2C563C52C7A22BF7AF3BC490D23DB382290
691DBA3D105FFA49D59C844204CC485B2C640191CF5121199EB486424448B45E
DB617EDB931969D2A73663FB7D0F9B72B0B0187B4752AEAC66FB3667FE422DA7
1EA53D617553D5C57CB1722553E997ABE85A3381933E118955D3C26BDF7A0FF8
FFA29F8046C929210BD139482E66800B98949BD58AC4700364A93844E9033256
87F7BA1E216D1A74EF9C325E5820D3C9EF826C2CABEE25C8A484DAD8F20A8970
3DE9CA97EF19DA6FE918E7082B313E2FA52F65CB925BDA5C98E98C7BA5E25EE1
52FE78F979902CD32D6AEC688F02A7365B66797DE1EA0229C050651C251B9EB5
A26DEF9EFA45B44CC4377562BCFF86E3E73F801263DB7DC7EBCDD9B3D84D1CD5
BE08DB07BABF8EB65D68EB74D57CA505622F3B0040726B1EC0FD1F3B7A1F3654
67D56D210B185F12F8DC154E4B79B164F84E2DBCC1F6C1B64632B2FDBEC9FE7C
7B0BD419C0E0C0CCD5FEEB9AD584935A58676976DDD2B6E118FD1D4591FEC4CA
EFC15D5D7BA5444EB942582DB27E6C1A55897C1086DF0C8DB362171EE6945F7B
3B383BD93111D7101547CF37FA0EA881B42CA3AFCA0088BB227E90541B17B240
72141881665D08232C5A14A7EF671899B0597C5B525314B1B8DC1405B3239085
2C344490E066B665ED555EA56B1ACCA7A8676A83FA6E292AF88700BB5CA1AFBF
68ABB33945A53672682FB076EB33CCDF1DC4CD54AFA89C995D18230A52C157FE
A9755B9041B9E544BFA0B7C08B9CB270E509099C596D9273EA460A3B6552050C
909E92539E638B4100D43F883E1C794B9DBD5029A4BC2E86F77D4A52EB080D54
96A83F008B19367C8BF237FE4B56D74AD399FE9D6D0B86B7003A2ABBB0CF8CEF
D1AA715ED5ACCF11C80FC0F374E959A74DACA2371F7B9025B5E9020C63AE9403
E69DFE8680698250F9CB0B115A45D1EE20738DE07BF2CBEA7FBC52151E75D696
8816E9072BCDD88368041CD9A920CD19886D6B2B429C69BD9A324D913E6A0525
3610B4C1EB61B6ADD8A6EEACEACA48263C0262300F16088764D0FBA6926B3CBA
882829959C9B4DAAC8A5BF3E05E34DE40CA699AE6A5D81BD0FDF6E2FC27FA248
02A6AC2FD9C8609505F15A0C894D23C5CCB354F446F8356105E4852ABC36267A
CE6B238858BBE992E60D9BD6944086D08E90341B411382009C3CA80D3725CC4A
7A93A7565E6592FADEDED7810796E92F1FFB71DE07EAF3DAC5378DD054BE6C72
14A3D91D890F9CE2CB40BAE4CC2325DD56CB75233040296C32814D2AE0F20FD5
FF5A367B0D4517D9213B49DA89E993A32239D67A2A099E4752F05A3865272003
EB0860FA3105CBBD9912DEC367565D8AA43CC944AD613227EAAD5A9ED1DDC52F
128651573D4940FE1B09F46F1AB5AEFFF794E9A435C7AA6C97D09D057E4A50D0
1F71DD8C4A8BE8AD567633EDB1F4C366FEECC4B4A683A3C0B2BA22200D4F35B0
5A5E3BF3E5BEA2A47E20483EC3B52FA65F136D9C25133D54CE75EE77C8F1B517
D99E52F154586028E1098AF3F3CE657E7C80304BF115CB83ADE89C68817AE029
3DD77FFECE49E1F573FA4F8ECBF9A6767064EA4E5F4627B1E9497009204C421E
E4D8CBE3692F07A7EF4BF8BE5832107BBECC4E11F40996A33B66962F3F444C41
2ADA17688321E2DFDEBD5618FDE6ED9138A53B0AB4CB82CB2EE937136DC9C328
3E4DE74620DFE32A6C0637F77E8B89DA35B38F87479A2F8EEBEDF6FE2F044E69
7EC30F89437490FF6D3DFA4FD955E34E505C31FB66272D00BD1BA643A2B91222
EC8D75EDA8B8C623DDDF7996146F233FD3440674BD42D43FDC916D2E8BC5295B
2CE342629C45B35DBC318936B7B81520E4E759F54995C855AD05E0FDF05B992C
C4FA36EEE388DD7DDC59035DDD2D5EEEA32F7B0AD42CFF863F0CCA8A4571EF0D
AA5678E1F01BF25512F1EA315952657126195A83D737481C3F50597967957F9F
6FBE677FC32F23258642DF5FE43926C0127432184552167F9D995398003A0C5C
E408096BD74AF296CBD77D38E9BEE833DF12631B2461697A8B28BCA54A129508
0270F03F3810351A987CC123D7CBC6A2AAFDEF69651092B86E86295AC740800B
8D39490A88979A0D9076C6D2BB7881F28683BA8A745A5453830946C04876283C
AA5163960EF27EC723BA359BCC3E8270D6A7E2F1C54641CC18304C26D32A83C1
AA11A3BADCBC3865C57F7035C27D6A0B024935D20D2B9695718D5FBC82B3C880
42A631AA6041B74CCCFB70B688EDADCDBBF33263BED1169004C926545ED17D8A
67F4BA638D2BEC21C2B92E21FF1851A68A09B3497B75A693EEC0488036683265
A17119BDC3B565B28B9572C8BA31C90EDC3DEA1CF82332AFECFE5ED1D1FBCC72
F8B6F551FC72696B17A948E7328327A2A85C59485E27FC13792BF8E040A2CF42
C51C1F58437955C56AF0206441B2F24DF95F85BC040258DB2ECB30BC75B3EADC
82992123F8ECB3E20F48AB883A446B23743372D5693D51490D156C3435E4EB51
7C93DADB48C81E1D369F4AE47EBDFA938518614AB1F025B065377A5862B4D881
D1B008BAEAF7672BD6B6906518451F2FB72569B6A34739F5F8BC0C65DB089786
5DEA290DC4B555A18EEA26D4F5FF8F031B30456CF5CD8738910D0CAB19671CBF
92E6F73BD3751695068E3360DDB0D3370D8FE10C7247FB292903411A945E23CA
82998E9950D407F9B864AC8DDA6F407701B43D1325A4906C38AE4DEDCFA7F092
9134BB25094D9D757E6B182B6A8BCAF77E1AAC3A318C429837B851B48E6F7C0C
4E5E14712A6DC88C97E5A78CA6296F92E80C567A3F3A9F49A9F7C4E38F71FFDF
CF192612A4C3E8EDED5DEFFA978F8299FEDC664150D66CCEDA094BC955D1124C
D1BBB83506C384CFA586979AB4F05CDF2CACB2EEA5DA0674E5A7A87C1E953DFF
867209EB1458E616BB6C984DF6FC4A43288B69A9E790AC3054F62CC0B756A760
3DDF9A92A57DC7497D5E40CCA9F86B68DB45CA760322A3CEB361F339CAE89B0F
C722588E0EA6D177CF19F4779FEC1544BF5FFA32566D85395F59324D1B58D2FE
F8C5D2CBFBD19400E99E7C456458A8AAD3D5A9753BFEF21783D88F766B9376DD
EFB293816023EA938160EE2A350CBE9986AD90C92709123BCF71F157EBB9180D
4461308E6C2D9EDFDDE78EE37F759D55A178BEEAA67D881CEEF8206A680356E9
7C05837E559915E5C7DC59330449BF70537D762DB84AD81CAC597C9BD8BFA5E4
8842852DD25742B7352F64006F81F8C6F87B73202D14FCC699766667FB9CA613
6019B3FCD80046B04B7E6C4B7BB53658B5E297BA31581D2AE1AEF1EAAACE15F0
A92EC8C47C9F2FAC076DF733DA587F971C86B6ED1C70DC1D5B0D0F54298C4316
78AF2B02C7DA4FC76A3C6422E68868A02A1E6A7A565D5C4C255B868A29B6E293
CCC1D582CD2C4C9EE4DACA3BE6F5E0E5C61FBC75092CCD4770DAA9CF946DBAAB
DF7D4DCDF87D3527876DB0F7F017EC1033AA548FC3A3E6E9DEAD98556D9D1D7E
8A761D7E8C848608C7643BC47AB3CECB26C67D8D7E1D999EFFFB888528A49136
2EBBF501036182E3F4C155E4F9F1581C4633B9301149E0D7E35E2EDD184A0643
CF739769012232CF526CCD43D8DF587DDF5430AE83DEFCBAA675CB08C9F59C93
2702715A90754E90905D45A96C2581D872600781D3239365CE34DD3F46B814D0
D51A54B8FE68DBAAE384D32B4EBA54E7E49BBD9BD0EA618E285101A2375A2734
08A61240D32D738C584844BB3284C11FA22E8C57E842646EA68BF36CB1B45155
41CCF417479562F4A796EB382911E9FB26DC7D7B9AFC3EBCAF67997AA2D41BFD
BC2D09D6DDA20195DD12BAC2BB8F6C6C2A2F28A2CC54B4C09D269BD9DDBAFF78
B1F1B36BD150D90DC60FBC3B91A07CBF82A17E66C20B152F1A0C39C7C1B06D93
6B5FDF92368C6A8A4B492A73C707A4CF2F96353C058CBB24DEB3767F4BFAFAF1
55ABD54C2D43DF77FE350F92149AE82E23F8F2BD4F7E820AA28D84901A22C384
32353431A128CF9696C7BB8C62CD21D9AB7EDB9E66A05D96B5CF117F7CF90A0E
8EC04159A882AE29AABE6F992B398FDE444FE5F988E8AD83DF4DD2F705FA8558
EA7E772FB86755587787B0556D7F9C948AF9E2F9A565D485EF39FF4AD36AA884
CAF36321342D19783F725C89BDB7874393FE75FE63F45A8EBA60A69A502A423E
2072302900DC8DED9DE12A8AD19A835A68FF8B48D0C7FDBA749D6C240B5B1BEC
575E4D221F54D10A1AEBD68B555F3A3E6DB94D42D24723BEB56C23F0AD7148A5
21C6CB6250F1843D26363821B15646DD2FDEA52360707EB1B514EA99269A8BAC
CE4564254B837CC31EEF51F05F48E87054CE92EDAD9DC06C10D7C8A7E5ECCE92
11EC8C02A44713B1E5B069AE4AA545A4544429B13C4AECE93613DEC5A609C119
C2442C41D1D50540A9317C0F8D2AAD9A87528962F7D8E7E23CF83E6F5C4CFABD
AA9C6E11FA759CC11F979EFCB16C1CE235A79EBAC92524672E346099C7E8EA15
597D30032E4FD3778D667BFE80D0ABABA40ECC30C7895211F4FA50FCFDB05082
5357B462551892BAA72CD6EF99B5036BCCE37CD4750DF0E81149BDAF94A473DF
1E9F6EFECBBE355FA9C4236BE5D70533B7B38490AB139E3F3375F53F3CD57B8C
8FC175DC6FD9A0699FB4189638335D5E254784940E69419E1B8ED46BBD73F9A5
9AF610D41820F0FE3A5819C2C2FE5F1A14E933BCA64ACE7E475FC5C5C2562B3C
4D153FE3C1C941DE54C16AD40D33DFDB994F8287839C28D8855C2B1DA93EA223
CC0D8452EC4E3551BE986AA1F85081AFD95FC033E98A9A65B043E68928452784
27EFB1532A67DF1BA1E7C5A102A40B3CDFBB3D58AA6D82CADCF4EDED88D778E3
663C42F282461DF29B23AF194E2DB41A666F4ED541CC62CB92B9E28BDC6E0E6F
6E950CD0D5291F03932E92CE53994F83D3E3710725F020265DB18EBF5D18D69A
2CA36D2AE57DEBE396116230FED9CD1094281FA85B11C11DA97F90824B2A8FAA
2156FC985835323E85D72C6A4F070C033EB738F0E4AA9EF93D439036B5AFC289
E5D4066474ADAFA6963FDEB84CFD8B619BE709978709520AC58CDA6EF2625A72
CC552BB8478AF8E0066753C1CBB554061B3418432D4EF19F79E7B73E1582F94D
9C989FA751B9671C5AB76B06771F181991A86E9400D33B7C2D09D76FA420EFF0
437F717D07E30985B468D60E84FE4AC2EC365E860A5F6E2D051C22C56D5A6686
8EA23FCAC823E221875BCD4E9B39E6F8C2BC727ED9A42949C0DBBB26788DC436
3CE682E91225A562F1C13427DD937AC768F5479D3528630324C82EF0B419FCC3
C8AA661DE6BA9F9901B39FD24B2082E5DFAD898D908EE3BA630400CBC2C0C490
88F20A25E611D7910939CC45B62042A9A8A9AFBBA3E083D3E695B548CDB5EE52
C5166E847A1FFEE0B664D0E907BFBC939ADFBC248D0D67563B3277774C0790A2
4DFAB9AD270720D02B3746A1E31D2853E4A7EC23532191D675F5CA4CCB7E5B34
0193A31A533D953ED7D7C8AD1AFF5E46966D63424B8C6C88C0F0C3E5789F3832
75F46B0E179433687F46F72F65CAF1D8BBB69C3501679D907A07197288F4BB23
5299F7F1C9E70F9CEE7654A12488BF0CDE7D5A4213076554ECC8736364561013
E1FAD3E05DE0A260E6671642F2B5E5BE6C57DB90A034939868119F3249DBF9B1
0D16A5F3B2B7D655142B2603DEE63898D52B253CB6FBB2AAF1BFF8FB5844212A
1EDE1DBF1598A56FC51B90360A1854F3C25609A52A419B54B48CCE3B5263A714
8C5E1CA41C3E209036C784060893AF771999717A3431FB18C67785E257413912
A67ECEBD515BB4978AD4CE52DB39E04094F00E6834A03E9539F056FB09297D1A
F70636DE459471333AEAAFEADA529500E1F4BFB24F5FED5633447C65CA657583
D3B1FD25DC155EFE6FE0C7FB7E30EC288DFF6EAF82AA8BFFDF517B4ABFC2EE19
2A502B26EB53B0D50FE6FEDBBB89FE798B0A5928F76499AA88DB97796B12A4CC
63DD69D7650E2199261D4F526DBB44BCEE60EF9A381165D5E867357FFA54A86F
61328F1D29CF9549218BE3881402F201B5250E99897E5350181DDAE21608CA5A
AE9D301962BB5287103CEC71AF880793387A76A560E01D89C840C1C1A00654C5
6213A6FB8E9C7B517F8C75B9189839BC3C1DBDD1BF323E35FEC0F3546A651EC2
3E396984CBDAD4CBCC1AF1A7EF07901B5DB07B8E91439133BD8C10C591337692
DA3F04D03849FF69BBCD7646A12F8270E23868F06C6F892F19FC2B7A7182DAD1
6FE78524CA48054782A649971E025643E37E456F9B881CEDC3722AF4BA064941
8A0DBDB9531BF4208A43B545105F27752EFAFAA1B8EAA3373F1A1EF99A33E280
2C0C568AC3CB8FC5AD8C364DED7D361501280537945AF9C01087327C4EB50375
7316A45A011150F73274D72C9FB61DF69F7F8B403A16143AAA63ECD951C3518B
FD11140F00F1052393FF9A9E91D4516D5662258238A91B6F80953E093CBC3675
59D715ED057F2303DE2A995B47B00F18D20D3328F4AF5C284082FB004CDFAA7A
CA2F9EF266E66E84D02FF250B3E445E72718F3A2190967ABE6230B599DF5F560
D427405D48BABBE287E036469627154EDD43457A7D7E029C9F41359CB9A2BF93
9349EAB11FFB8EEC8B5695C90D88A535ABEC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (Final_Report.dvi)
@start /Fa 139[19 33 22 1[37 37 37 56 7[37 37 2[37 12[41
7[37 6[44 1[48 44 44 14[37 37 49[{ TeXBase1Encoding ReEncodeFont }18
66.6667 /NimbusSanL-Regu rf /Fb 198[37 37 37 37 37 37
37 37 37 37 48[{ TeXBase1Encoding ReEncodeFont }10 74.9999
/URWPalladioL-Roma rf /Fc 136[66 1[44 31 35 31 1[44 44
44 66 26 44 1[26 44 40 26 35 44 35 43 44 12[48 37[20
46[{ TeXBase1Encoding ReEncodeFont }22 79.1666 /URWPalladioL-BoldItal
rf /Fd 134[40 40 57 40 44 22 40 26 44 44 44 44 66 18
40 1[18 44 44 22 44 44 40 44 44 8[53 1[53 57 48 53 57
1[53 62 57 66 44 2[22 57 62 48 53 57 57 53 53 6[22 44
44 44 44 44 44 44 44 44 44 22 22 26 22 2[26 26 36[40
40 2[{ TeXBase1Encoding ReEncodeFont }63 79.1666 /NimbusSanL-ReguItal
rf /Fe 134[44 44 62 44 48 26 44 31 48 48 48 48 70 22
2[22 48 48 26 44 48 44 48 44 9[75 53 57 48 53 57 1[53
62 2[48 2[22 1[62 48 1[57 57 1[57 7[44 44 44 44 44 44
44 44 44 44 1[22 43[48 2[{ TeXBase1Encoding ReEncodeFont }50
79.1666 /NimbusSanL-Bold rf /Ff 104[79 40 1[40 40 24[40
44 41 66 45 48 26 34 31 44 48 43 46 70 23 44 19 23 46
44 26 38 48 35 44 40 3[26 1[26 53 53 53 79 57 62 49 42
53 1[48 62 66 75 48 57 26 27 66 60 44 48 61 56 48 62
1[35 1[48 1[20 20 40 40 40 40 40 40 40 40 40 40 48 20
26 20 48 1[26 26 22 1[66 33[48 48 2[{ TeXBase1Encoding ReEncodeFont }82
79.1666 /URWPalladioL-Roma rf /Fg 136[66 44 48 26 35
31 48 48 44 48 70 26 1[26 26 48 44 1[40 48 35 1[40 9[79
2[53 48 57 1[48 6[31 2[44 1[66 15[40 40 40 40 49[{
 TeXBase1Encoding ReEncodeFont }32 79.1666 /URWPalladioL-Bold
rf /Fh 171[56 1[66 1[61 6[25 4[66 66 14[51 51 51 51 49[{
 TeXBase1Encoding ReEncodeFont }10 91.6666 /NimbusSanL-Bold
rf /Fi 168[69 49 53 45 49 53 57 1[57 53 61 2[41 20 53
57 1[49 53 53 67[{ TeXBase1Encoding ReEncodeFont }17
73.3333 /NimbusSanL-Bold rf /Fj 198[32 32 32 32 32 32
32 32 32 32 48[{ TeXBase1Encoding ReEncodeFont }10 58.3333
/NimbusSanL-Regu rf /Fk 139[22 37 26 14[37 41 37 31[48
65[{ TeXBase1Encoding ReEncodeFont }7 66.6667 /NimbusSanL-Bold
rf /Fl 172[61 5[110 71 1[39 39 1[89 3[83 67[{
 TeXBase1Encoding ReEncodeFont }7 116.667 /URWPalladioL-Roma
rf /Fm 166[62 3[73 57 49 62 2[73 78 88 1[68 1[31 78 71
1[57 72 66 57 73 65[{ TeXBase1Encoding ReEncodeFont }17
93.3332 /URWPalladioL-Roma rf /Fn 172[105 7[145 3[153
111 1[155 142 12[100 100 53[{ TeXBase1Encoding ReEncodeFont }8
200 /URWPalladioL-Roma rf /Fo 170[124 2[107 1[97 126
133 1[98 2[54 1[122 2[124 1[98 124 65[{ TeXBase1Encoding ReEncodeFont }
11 160 /URWPalladioL-Roma rf /Fp 172[122 7[156 1[78 4[167
144 1[156 65[{ TeXBase1Encoding ReEncodeFont }6 200 /URWPalladioL-Bold
rf /Fq 171[107 1[116 4[160 7[98 3[124 65[{
 TeXBase1Encoding ReEncodeFont }5 160 /URWPalladioL-Bold
rf /Fr 175[60 5[33 17[50 5[50 50 50 3[25 44[{
 TeXBase1Encoding ReEncodeFont }7 100 /URWPalladioL-Roma
rf /Fs 166[53 3[62 2[53 1[48 63 66 7[44 49 62 1[49 62
65[{ TeXBase1Encoding ReEncodeFont }11 79.9999 /URWPalladioL-Roma
rf /Ft 172[87 111 1[101 9[93 2[118 67[{ TeXBase1Encoding ReEncodeFont }
5 166.667 /URWPalladioL-Roma rf /Fu 171[82 70 89 1[81
105 111 1[81 2[45 1[102 1[81 3[104 65[{ TeXBase1Encoding ReEncodeFont }
11 133.333 /URWPalladioL-Roma rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-150 705 a @beginspecial 0 @llx 0 @lly 345 @urx 435 @ury
1133 @rhi @setspecial
%%BeginDocument: coe_v_spot1.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: coe_v_spot.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Heather Miller
%%CreationDate: 6/19/12
%%BoundingBox: 0 0 345 435
%%HiResBoundingBox: 0 0 344.3750 434.2715
%%CropBox: 0 0 344.3750 434.2715
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 104 128 8
%%BeginData: 19340 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0CFFCFC3C2FD04BBBAC1C1C9CAFD16FFCAC2C2BBC1BBC1C1C2C3
%FD3AFFC9C298BB98BB98BB98BB98BB98BB99C9FD12FFC2C198BB92BB98BB
%98BB98BB98C2C9FD0AFFCFCACACACFCACACACFCACACAFD07FFCACFCACACA
%CFCACACACFCAFD0EFFC1BBBBBBBABBBBBBBABBBBBBBABBBBBB98C2CAFD0E
%FFC9BBBB98BBBBBBBABBBBBBBABBBBBB98BBC2FD09FFFD04BBBABBBBBBBA
%BBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD0BFFCA98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92BBC9FD09FFCFFFCAC192BB98BB98BB98BB98BB
%98BB98BB98BB98BB98C9FD07FFC192BB98BB92BB98BB92BBC2FD07FF99BB
%92BB98BB92BB98BB92C2FD0AFFCFBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC1BBBBC9FD09FFCFC1BABBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC9FD06FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBB
%BABBC2FD09FFCA98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BBC9FD07FFCAC198BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%C9FD05FFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92
%C8FD09FFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBC1
%CFFD06FFC298BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBA
%FD05FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2
%FD08FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB92
%C2FD05FFCA92BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB9FFD04FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB
%92C2FD07FFCFC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBBFD05FFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBA
%C1BBBBBABBCAFFFFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBBBAC1BB
%BBBAC1BBBBC2FD07FFC992BB98BB98BB98BB98BB98BB98C2BBBB92BB98BB
%98BB98BB98BB98BBC2FFFFFFC9BB98BB98BB98BB98BB98BB92BBBBC198BB
%98BB98BB98BB98BB98BB92C2FFFFFFC298BB98BB98BB98BB98BBC2FD07FF
%99BB98BB98BB98BB98BB98C2FD07FFC2BBBABBBBBBBABBBBBBBABBC1CFFF
%FFFFC298BBBBBBBABBBBBBBABBBBC2FFFFFFC998BBBBBBBABBBBBBBABBBB
%C1C9FFFFFFC2BBBBBBBABBBBBBBAFD04BBFFFFFFFD04BBBABBBBBBBABBBB
%C9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCAC198BB98BB98BB98BB98
%BB99FD06FFC292BB98BB98BB98BB98BB98CFFFFF99BB98BB98BB98BB98BB
%92BBCAFD05FF9FBB98BB98BB98BB98BB98BBC9FFFFC192BB98BB98BB98BB
%98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BB
%BBBACAFD06FFCABBBBBBBAC1BBBBBAC1BBBBCAFFFFC1BAC1BBBBBAC1BBBB
%BABBC2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFFFFFD04BBBAC1BBBBBABBBB
%C9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB98BB98
%BBCAFD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB98BB98
%CAFD07FFC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBC2
%FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBB
%CFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBABBBBBBC9
%FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB98C9FD07
%FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD
%07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB98C9FD07
%FFC192BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBA0FD07FF
%99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FF
%C1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD07FFFD
%04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBB
%BAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCAFD07FF99BB
%98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD07FFC192BB
%98BB98BB98BB98BBC3FFFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB
%98BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BB
%BBBABBBBBBBABBBBBBC9FFCFC198BBBBBBBABBBBBBBABBC9FD07FFBBBBBA
%BBBBBBBABBBBBB98C9FFFFFD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBB
%BABBBBBBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB
%98BB98BB98BB98C9FFFF99BB98BB98BB98BB98BB92C9FD07FFC198BB98BB
%98BB98BB98BBA0FFFFC192BB98BB98BB98BB98BBC2FD07FF99BB98BB98BB
%98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD06FFCFC1BBBBBAC1
%BBBBBAC1BBBBC9FFFFC1BAC1BBBBBAC1BBBBBABBC9FD07FFBBBBBABBBBBB
%BABBBBBBBAC9FFFFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BB
%BBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98
%BB98BB98CAFFFFBBBB98BB98BB98BB98BB92C2FD07FFC2BBC199C1BBC199
%C1BBBBC9FFFFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98
%BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBB
%BBBABBC9FFFFC2BBBBBABBBBBBBAFD04BBFD15FFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFFA0BB98BB98BB98BB98BB
%98BBA0FD14FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98
%BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBB
%BABBC9FFFFCFBBBBBAC1BBBBBAC1BBBBBAC1CAFD13FFC1BBBAC1BBBBBAC1
%BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB
%98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFFFFC198BB98BB98BB
%98BB98BB92C1CFFD12FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FFFFFFC2BBBBBBBABBBBBBBABBBBBB98C2FD12FFFD
%04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB
%98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFFFFCF
%98BB98BB98BB98BB98BB98BB92C2FD11FFC192BB98BB98BB98BB98BBC2FD
%07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD
%06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD04FFC9BBBBBAC1BBBBBAC1BBBBBA
%BBBBC9FD10FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD05FFC198BB98BB98BB98BB98BB98BB98C9FD0FFFC192BB98BB98
%BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBA
%BBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD05FFCABBBBBBBA
%BBBBBBBABBBBBBBABBBBCFFD0EFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD06FFA7BB98BB98BB98BB98BB98BB98BB99
%FD0EFFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD07FFC9BBBAC1BBBBBAC1BBBBBAC1BBBBBBFD0DFFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD08FFC2BB98BB98BB98BB
%98BB98BB98BBA0FD0CFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD09FFC1BBBABBBBBBBABBBBBBBABBBBBBC2FD0BFF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD0AFF
%99BB98BB98BB98BB98BB98BB98BBA1FD0AFFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD0BFFFD04BBBAC1BBBBBAC1BBBB
%BAC1CAFD09FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD0BFFCA98BB98BB98BB98BB98BB98BB92C1CAFD08FFC192BB98BB
%98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBB
%BABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD0CFFC998BBBB
%BBBABBBBBBBABBBBBB98C2FD08FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD0DFFC292BB98BB98BB98BB98BB98BB92C2
%FD07FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD0EFFC2BBBBBAC1BBBBBAC1BBBBBABBBBC9FD06FFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD0FFFC198BB98BB98BB98
%BB98BB98BB98C9FD05FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD0FFFCAC1BBBBBABBBBBBBABBBBBBBABBBBFD05FF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD10FF
%C9BB98BB98BB98BB98BB98BB98BBC2FD04FFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD11FFC9BBBAC1BBBBBAC1BBBBBA
%C1BBC1FD04FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD12FFC2BB98BB98BB98BB98BB98BB98C9FFFFFFC192BB98BB98BB
%98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABB
%BBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD13FFC2BBBABBBBBB
%BABBBBBBBABBC2FFFFFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABB
%BBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF99BB98BB
%98BB98BB98BB92CAFD14FF98BB98BB98BB98BB98BB92C1FFFFFFC192BB98
%BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BB
%BAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFFFC2C1C2C1C2
%C1C2C1C2C1C2C9FD06FFC9BAC1BBBBBAC1BBBBBABBBBFFFFFFC1BBBAC1BB
%BBBAC1BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98
%BB98BB98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFF98BB98BB92
%BB98BB92BB92C9FD06FFC9BB98BB98BB98BB98BB98BBC9FFFFC298BB98BB
%98BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB98C2FD06FFCFBBBBBABB
%BBBBBABBBBBBBACFFD06FFCFC1BBBBBABBBBBBBABBBBBBC9FFCFC198BBBB
%BBBABBBBBBBABBC9FD07FFBBBBBABBBBBBBABBBBBB98CFFFFFFD04BBBABB
%BBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB98BB98BB
%98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFF99BB98BB98BB
%98BB98BB92C9FD06FFCABB98BB98BB98BB98BB98BBA1FFFFC192BB98BB98
%BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBB
%BAC1BBBBBACFFD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FFFFC1BAC1BBBBBA
%C1BBBBBABBC9FD07FFBBBBBAC1BBBBBAC1BBBBBAC9FFFFFD04BBBAC1BBBB
%BABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB
%98BB98BBC9FD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB
%98BB98C9FD06FFCAC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98
%BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBB
%BBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBA
%BBBBBBC9FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB
%98C9FD06FFCFBB92BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98
%BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABB
%BBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBB
%C9FD07FFFD04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD
%07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCA
%FD07FF98BB98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD
%07FFC198BB98BB98BB98BB98BBC3FFFFC198BB98BB98BB98BB98BBC2FD07
%FF99BB98BB98BB98BB98BB98C2FD07FFBBBBBABBBBBBBABBBBBB98C9FD06
%FFC9BBBBBBBABBBBBBBABBBBBBCAFFFFC198BBBBBBBABBBBBBBABBC2FD06
%FFCFBBBBBABBBBBBBABBBBBB98CAFFFFFD04BBBABBBBBBBABBBBC2FD07FF
%C198BBBBBBBABBBBBBBABBC9FD06FFCFC198BB98BB98BB98BB98BB99FD06
%FFC192BB98BB98BB98BB98BB99FFFFFF99BB98BB98BB98BB98BB92BBCAFD
%05FF99BB98BB98BB98BB98BB98BBC9FFFFC292BB98BB98BB98BB98BB98C9
%FD05FFC292BB98BB98BB98BB98BB92C9FD07FFC2BBBAC1BBBBBAC1BBBBBA
%BBBBCAFFFFCAC2BAC1BBBBBAC1BBBBBAC1BBC2FFFFFFC9BAC1BBBBBAC1BB
%BBBAC1BBC1C9FFFFFFC2BBBBBBBAC1BBBBBAC1BBBBBBFFFFFFC9BBBBBBBA
%C1BBBBBAC1BBBBBBC9FFFFCAC2BBBBBAC1BBBBBAC1BBBBBAC1CFFD07FFC9
%98BB98BB98BB98BB98BB98BB98BB99BB98BB98BB98BB98BB98BB98BBC2FF
%FFFFC9BB98BB98BB98BB98BB98BB98BB99C198BB98BB98BB98BB98BB98BB
%98C2FFFFFFCF98BB98BB98BB98BB98BB98BB92BBBBBB92BB98BB98BB98BB
%98BB98BB99FD09FFC1BBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBB
%BBBAFD04BBFD05FFC1BBBABBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBBBB
%BABBBBBB98BBCAFD04FFC298BBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBB
%BBBABBBBBBBABBBBCAFD09FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB92C3FD05FFCA98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB9FFD05FFCABB92BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92C2FD0BFFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1BBC2FD07FFC2BAC1BBBBBAC1BBBBBAC1BBBBBAC1BB
%BBBAC1BBBBBAC1BBBBBBFD07FFC2BBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1CAFD0CFFBBBB98BB98BB98BB98BB98BB98BB98BB98
%BB98BB98BB92BBCAFD08FFC192BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98CAFD08FF9FBB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB98BBC3FD0DFFCFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB
%CAFD09FFCFC198BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBACAFD0A
%FFC1BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB98BBC9FD0FFFCF99BB
%92BB98BB98BB98BB98BB98BB98BB98BB92C1CAFD09FFCFFFCAC292BB98BB
%98BB98BB98BB98BB98BB98BB92BB98CAFD0CFFA0BB92BB98BB98BB98BB98
%BB98BB98BB98BB92BBA1FD12FFC2C1BBBBBAC1BBBBBAC1BBBBBABBBBBBBA
%C9FD0FFFC9BBBBBABBBBBBBAC1BBBBBAC1BBBBBABBC2FD0FFFC9C1BABBBB
%BBBAC1BBBBBAC1BBBBBABBBBC2CAFD14FFCAC299BB92BB98BB98BB98BB92
%BBC2CFFD12FFC2BB98BB98BB98BB98BB92BB98C2C9FD12FFC999BB98BB92
%BB98BB92BB98BB99CAFD19FFC9C9C1C2BBC1BBC2C2C9CFFD16FFCAC2C2C1
%C1BBC2C1C2C9FD17FFC9C9C2C2BBC1BBC2C2C9CAFD42FFCFFD1FFFCAFDEA
%FFA8FD64FF7D52F827F8277DFD32FF7D2727F82752FFFFFFFD04A8FD0CFF
%FD04A8FD11FF7E27F8272727F8277DFD30FF7DF8272727F82727A8FFFF27
%2752FD0DFF272727FD10FFA827F827F8522727F827A8FD2EFFA8F827F852
%5227F8272EFFA827F852FD0CFFA827F852FD10FFA8F82721A8FFFF2727F8
%84FD2EFF5927217DFFFFA82752FFFFFF272752FD0DFF272728FD10FF7D27
%F827A8FFFF52F82752FF7D7DA8A85284FFA85252527DFD04FF595252A87D
%7D7DFFFFA85252527DA8FFA87D59A8FF7D527DA8FD04FF7DF82752FFFFFF
%A8FFFFA85227F8277DA8FFFF7D52525259FFFFA85227F8277DA8FFFF7D52
%527DA8FD07FF7DF82727FFFFFF2727F87DFF27F85227277DFF2727F82727
%7DFFFF5227F8272727F87DFFA8F8272727F852FFFFF827527DF8272752FD
%04FF7D27272752FD05FF5227F8FD0427FF2727F8FD0427FF5227F8FD0427
%FF5227F8272727A8FD06FF7D27F827A8FFFF52F82752FF2727F827F87D52
%27217D5227F8A8A827F8275227F82752FF2727F87D2727F87EA827F827F8
%27F827F8A8FD04FF2727F827F8527DFFFF7D2727F827277DFF52F8527D52
%F82752A82727F827277D7D27F8527D52F852FD06FF7D212727FFFFFF2727
%217DFF27212752FFA827F87DFFFF27277DA8F82752FF7D27217DA8272152
%FFFF272752FF2727F87DA852F8277DFD04FFA827272127F82752FFFFFF27
%2727FFFFFFA8A8FFFFA8272152FFFF272727FFFF7DF827A8FF7D2727FD06
%FF5227F827A8FFFF27F82752FF272721FFFFFFF82752FFA827F87D7D27F8
%7DFFA8F82752A8F82752FFA827F852A827F852FFFF5227F884FD06FF5227
%F827F82752FFA827F852FD05FFA85252F82728FFA827F852FFFF5227F8A8
%A853F827A8FD05FF7D272727FFFFFF2727277DFF4C2752FFFFA827F82727
%27F8277DA8F8277DFF7E27277DA827277DFFFF272752FF272727FFFF7DF8
%277DFD08FFA8FD0427A8FF27272EFFFFFFA8522727F8272752FFFF272727
%FFFF7DF8272727F82727FD06FF7D27F827A8FFFF28F82752FF272727FFFF
%FFF827277D527D52A97D27F87DFFA8F82753A8F82752FFA828F852A827F8
%52FFFF5227F8A8FD0AFF2727F8A8FF27F852FFFFFF28F8277DA8212752FF
%A827F852FFFF5227F87D527D527DA8FD05FFA8F82727FFFFFF2727F87DFF
%27F852FFFFA827217DFD05FF7D212752FFA827F87DA827F87DFFFF272752
%FFF82728FFFF7D21277DFD04FF7D27FD04FF52F827A8FF272727FFFFA821
%277DFFA827F852FFAF212727FFFF7D2127FD0BFFA827F82752A85227F827
%7DFF272727FFFFFFF82727A8FFFF7DFF7D27F852FF7DF82752FFF82728FF
%A827F852A827F852FFFF5227F87DFFFFFF59F82727A8A87DF827F8FFA827
%F8277DFF5327F87DFF7DF82727FFA827F8277DFF5227F87DFFFFA8A8FD07
%FF52272727F827272728FFFF27F852FFFFFF592727275227277DFF272721
%522727F87DFF52F8275252F8277DFFF82728FFFF7D27277DFFFFFF7D2727
%27F8272727F87DFFFFFD042752A8272721522727F827A8FFFD042752A827
%27F852522727FD08FF2827F827F82752FFFFFF202727FFFFFFA852F827F8
%27F87DFF53F827F827F82752FFA827F827F82752FFA827F852FFFF5227F8
%7DFD04FF7D27F827F827F852FFFFFF7DF827F827FF52F827F8527D27F8A8
%FF7DF827F827FF7DF827F827F827A8FD08FF7E7D527D7DFD04FFA87DA8FD
%05FFA87D7D7DA8FFFFFFA852A87D27217DFFFFFFA8597DA8FFFFFF7D7D7D
%FFFFA87D7EA8FD05FFA8A87D7D7DFD06FFA8597D7DFFFFA87DA8FFFFA87D
%A8FFFFA87D7D7DFFFFFF7D7D53A8FD22FFA87EFFFF7DF8277DFD31FFA8FD
%2DFFA8F827527D202727A8FD5FFFA852F827F827F8A8FD1EFFA8FD0BFFA8
%FD0FFFA8FFFFFFA8FD23FFA87D7D7DFD05FF527DA852A8FFFF5252FF52A8
%FFFF527DFFFF5352FF7E52FFFF7D275227A8FFA8275252FFFFFF7D27F87D
%FFFF7D52FFFFA852275227FFFF5252FF277DFD2CFF2752FFF8A8FFFF2727
%7D277DFFFF5227FFFF7DF8FF2752FFFF52277D7DA8FF7D277D2752FFFF28
%277D7DFFFF7DF8FFFFFF7D5227A8A8FF7D275227A8FD2CFF277DA827A8FF
%FF52205227A8FFFF5252FFFFA8277D527DFFFF7D27287DFFFFA8207D277D
%FFFF522752FFFFFF7D27A9FFFFFF5252FD04FF272752FD2DFF2752FFF8A8
%FFFF277D27277EFFFF5252FFFFFF522727FFFFFF52277DFFFFFF7D27F828
%FD04FF7D2727FFFF7DF8FD04FF7D27FD04FF7DF8AFFD2DFF52275227A8FF
%FF527D7DF8A8FFFF5252FFFFFF7D2152FFFFFF7D27A87DAFFFA827A8F8A8
%FFFF527D5227FFFF7D27A8FFFFFF5252FD04FF7D27A8FD2DFFA8272752FF
%FFFF52A8A85284FFFF7D52FFFFFFA8527DFFFFFF7D5227277DFF7D52A852
%52FFFF7D27277DFFFFA852FD04FF7D52FD04FFA852FDFCFFFDFCFFFDB0FF
%CFFFFFFFCFFD50FFA0C9C2C2A0C2C1C299C299C199C199BB98BB98BB98BB
%98BB98BB98BB98BB99BB99C299C199C2C2C2A0C9C2CAFD3DFFCACFCACFC9
%CAC9CFC9C9C9CAC9C9C2C9C9C9C3C9C9C9C3C9C9C9C3C9C3C9C9CAC9C9C9
%CFC9CACAFFCACFCFFDFCFFFDFCFFFDFCFFFFFFFF7D7D7DFD08FFA87DFF7D
%A8FD1BFF7D52FFFFFFA8A87D7D7DFD0DFF7DA8FD15FFA87DFD0CFF7D27F8
%2727FD07FFF852A82752FD1AFF7DF8277DFFFFA8F827F8277DFD0BFF7D27
%52FD15FF52277DFD0BFF2727FF52277DFD06FF2752FFF87DFD1AFF52277E
%FFFFFFA82727FFA8FD0DFFA8FD17FFA8FD0CFFF852FFA852A8FF52F852A8
%FFF852A82752FF7D27277DFFA827525252FFA8272752FD05FF522727A8A8
%27F827A8FFFFA8F852FFFFFF7D2752277DFFA82752277DA8527DA8275227
%53FFFF522727A8FFA8272752FF845252597D52A87D2752277DFF7D275227
%7D2752FD04FF7DF87D2752FF4C52FFF87DA827527D27FF5227532727FF27
%527D277DFFFFFF7D27525227A8522752FFFFFFA827202727FF7D275252F8
%FF2727522752A8F87D7D27525227FF52277D2727FF27527D277DA8F8277D
%7DF8AF5227522727FF275252277DF852FD04FF2727FF52F8A82752A82752
%7DF87D52277D52F8FF2752A827527DF852FFFFFF7DF8FF5327A87DF8A8FF
%FFFFA8F8275252FF7DF8FF5227A82727FFF87DA82752A8F8A87D27A852F8
%7D27277D27527DF859842752FF5227A852F8A82727A82752FFF87D2752FF
%A87DA85227FF5227A82728FF217D7D27275228A85227AF5252A8F8275252
%7DFFFFFF5227A97DF8FF7D277DFFFFFFA82752FFFFFF7D27A87D27A82752
%A82752A9217D8427847DF8A85227275252A8F82752527DA821A8FF7D21A8
%5227A85227FF217DA8277DF827FF59F87D5227FF52F8A82752A827527DF8
%A8A8527D52F8FF2752A82752FF277DFFFFFF59F8FF5227A87DF8A8FFFFFF
%A8F852FFFFFF7DF8A85227A82727FFF852A82752A8F8A87D27A852F8FF52
%52A82752FF277D7D277DFF5227A852F8A82727A82752A8F87D7DF8522727
%FF7E2752F852FF2727FF277DA8272E52F8FF5227522752FF272752277DFF
%FFFF7D27522727FF52277DFFFFFFA8272727F87D7D27A87D27FF52275227
%52A8277D84277D7DF8FF7D27522727FF272752277DA827A8FF7D27A85227
%A82727FF272752277DFF7D2752A8FFA87D2752A8FF527DA8527DFF7D5227
%7DFFA8527D2752FFA8275252FD05FF525227A8FF8452A8FFFFFFA8525352
%527DA852A87D59FFA8277DF852A8527DA852A87D52A8FF522752A9FFA827
%5252FFA852A8FF7D52A87D52FF527DFF7D527DF87DFD17FF5252A82727FD
%21FF5252842752FD21FF277D7D277DFD17FFA8F827F8A8FD21FF7DF82727
%A8FD21FF7DF82727FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 1665 C)
%%CMYKCustomColor: 0 0.6785 1 0 (PANTONE 1665 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-19T15:33:37-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>204</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADMAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qsnnhghead1jhjBaS&#xA;RyAqqOpJORlIRFnYMoQMjQFkvM/M35uOHe20CMcRsb6UVr7xxn9bfdnPavts3WL5/qH63qtD7PCh&#xA;LMf80fpP6vmwDUNf1vUWLXt9NPX9lnPAfJB8I+gZo8uoyZPqkS9Dh0mLH9EQPggOm4ylyU00zzT5&#xA;h0xg1nfzRqv+6yxeP6Uaq/hmTi1eXH9MiHEz6DDl+qIP3/N6P5U/Ne2vJEs9bRbWdqKl2m0THtzB&#xA;rw+fT5ZvtH2yJHhybHv6PMa/sCUAZYvUO7r8O/8AHN6ECCAQag7gjN8827FXYqwDzT+a1lYSPaaO&#xA;i3tytQ1yx/cKf8mm7/QQPc5o9Z2zGB4cfqPf0/a9FoOwJ5BxZfTHu6/sedal5y8z6ixNzqM3E/7q&#xA;jb0k/wCBTiPvzQ5ddmyfVI/c9Ng7N0+L6YD7z9qVG5uSamV6/wCscxuIuXwR7kx0/wA1eY9PYG01&#xA;GeML0QuXT/gH5L+GX4tXlx/TIuPm0GDJ9UAfv+bPvLH5txyulrr0axMaBb2IHh/z0TenzH3Zu9J2&#xA;3fpyj4/rec13s8QOLCb/AKJ/QXpEckciLJGweNwGV1IIIPQgjOgBBFh5ggg0ebU0npwySUrwUtT5&#xA;CuCRoEphGyA8u/5XTd/9WqP/AJGt/wA05zf8vS/mj5vWf6GY/wA8/L9rv+V03f8A1ao/+Rrf804/&#xA;y9L+aPmv+hmP88/L9qb+VPzMuNd1yHTXsEgWUOTIJCxHBC3QqPDMrRdrSzZBAxq3D7Q7Ejp8RyCV&#xA;1XTzZ7m8edSLzn5lk8vaQt/HALhmmWL02YqPiDGtQD/LmFr9WcGPiAvenYdm6IanJwE1tbCP+V03&#xA;f/Vqj/5Gt/zTmm/l6X80fN33+hmP88/L9rv+V03f/Vqj/wCRrf8ANOP8vS/mj5r/AKGY/wA8/L9r&#xA;MvJPmuXzJYXF1JbrbGGX0gqsXr8Iau4Hjm27P1p1ESSKouk7U7PGmmIg8Vi2RZsHWOxV45+ZnnKX&#xA;Ur99Js5CNOtW4zFTtLKp3J/yVOw99/DOT7W15yS4I/RH7S9t2J2aMUBkkPXL7B+ssFzTPQOxV2Ku&#xA;xV2KvUPyr84yOy6BfPyoCbCRjvtuYj9G6/d4Z0XY+uN+FL/N/U8p292aB++gP636/wBb03OjeUeZ&#xA;/ml5zlidtB0+QoSo+vyqd6MKiIH5bt93jnO9sa8g+FH/ADv1freq7B7MBHjTH9X9f6nl2c49Y7FX&#xA;Yq7FXYqz/wDLDzlLZXkeiXr8rK5bjasx/upW6KP8lz+P05u+yNeYS8OX0nl5H9rzvbnZonE5YD1x&#xA;5+Y/WPues3n+8k//ABjb/iJzp8v0n3PHYvqHvfM+eevqbsVZX+V3/KZ2f+pN/wAmmzZ9kf4xH4/c&#xA;6ft3/FZfD7w9yzsngWEfm9/yisf/ADFR/wDEHzTduf3I/rD7i772d/xg/wBU/eHjOcm9w7FXrn5N&#xA;f8cS+/5if+Za51HYP93L3vG+0v8Aex/q/peg5vXm0p82ao2l+XNQvkPGSKIiJvB3IRD9DMMxdbm8&#xA;PDKQ51+xzOz8Ay54wPIn7BuXzx13OcI+lOxVM/L3l/UNe1FbGyUcqcpZG2REGxZvvzI02mnmnwxc&#xA;XWayGnhxz/tZ7L+S6fVf3OqE3QG3OKkZPhsxI+e+buXYO209/c87H2m9W8PT793nOp6beaZfzWN4&#xA;np3EDcXXqPEEHuCNxmgy4pY5GMuYemwZ45YCcTcShcrblayu5rO8gu4Dxmt3WSM/5SGoycJmMhIc&#xA;w15cYnExPIin0W2qQDRjqtP3AtvrVK/scPU6/LO88YeH4nThv7LfNBpz4vh9eLh+2nzpeXU13dzX&#xA;U7cpp3aSRvFmNTnBTmZSMjzL6ZjxiEREcgKUcizRWmabeanfQ2NnGZLiY8UX8SSewA3OWYsUskhG&#xA;Islpz544oGcjUQ9Dj/JZzbAyaqFuabqsNUDeFSwJHvTN6OwDW89/c82faYcW0PT79/uYFr2hahoe&#xA;ovY3ygSqOSOpqjoejKdts0uo088M+GXN6HSauGeHHDl9yX5Q5LasysGUkMDUEbEEYoIfQeiam2qe&#xA;VLe/feSa2Pqn/LVSr/8ADA53ODN4mnEu+L5xqcHhakwHIS+zo+e84Z9IdirK/wArv+Uzs/8AUm/5&#xA;NNmz7I/xiPx+50/bv+Ky+H3h7lnZPAsI/N7/AJRWP/mKj/4g+abtz+5H9YfcXfezv+MH+qfvDxnO&#xA;Te4dir1z8mv+OJff8xP/ADLXOo7B/u5e9432l/vY/wBX9L0HN682xL80if8ABt17yQ1/5GDNX2z/&#xA;AIufeHc9g/41H3H7nh+cc967FXqP5LInpas9Bz5QLy70o5pnR9gD6z7v0vJ+0xN4x/W/Q9MzonlX&#xA;j35xxIvmK1kUUaS0XmfGkjgHOU7dAGYH+j+kva+zcicEh3S/QGB5pXoXYq9saR2/KrkTv+iwtemw&#xA;j40+7OuJP5H/ADHhBEfyj/yU/S8TzkXu3Yqz38nI0bzDduVBZLVuJPasiVpm67CA8Y/1f0h572kJ&#xA;8CI/pfoL2DOreKeZfnTDHx0man7ysyE+I+Aj7s53t+I9B9/6HqvZmR9Y6bfpeX5zj1jsVe2fl07N&#xA;5BiBNQguAvy5sf1nOu7MP+C/6Z4TtkVrD/m/cHieci927FWV/ld/ymdn/qTf8mmzZ9kf4xH4/c6f&#xA;t3/FZfD7w9yzsngWEfm9/wAorH/zFR/8QfNN25/cj+sPuLvvZ3/GD/VP3h4znJvcOxV65+TX/HEv&#xA;v+Yn/mWudR2D/dy97xvtL/ex/q/peg5vXm2Jfmn/AMobdf8AGSH/AJODNV2z/i594dz2D/jQ9x+5&#xA;4fnHveuxV6n+S3+8+rf68H6nzpOwOU/h+l5L2m5w+P6HpWdC8s8h/OX/AI79l/zCj/k4+cr27/ex&#xA;/q/pL2fs3/cy/rfoDAM0j0bsVe1f+Uo/7dn/ABpnW/8AIH/MeF/52P8AyUeK5yT3TsVZ/wDk0R+n&#xA;70d/qh/5OJm77C/vZf1f0h532k/uY/1v0F69nVPFvNfzp/3n0n/Xn/Umc92/yh8f0PU+zPOfw/S8&#xA;szm3rXYq9q/Ln/lAk/6OP+JNnW9l/wCK/wCmeF7Z/wAc/wBK8VzknunYqyv8rv8AlM7P/Um/5NNm&#xA;z7I/xiPx+50/bv8Aisvh94e5Z2TwLCPze/5RWP8A5io/+IPmm7c/uR/WH3F33s7/AIwf6p+8PGc5&#xA;N7h2KvXPya/44l9/zE/8y1zqOwf7uXveN9pf72P9X9L0HN682xL80/8AlDbr/jJD/wAnBmq7Z/xc&#xA;+8O57B/xoe4/c8Pzj3vXYq9T/Jb/AHn1b/Xg/U+dJ2Byn8P0vJe03OHx/Q9KzoXlnkP5y/8AHfsv&#xA;+YUf8nHzle3f72P9X9Jez9m/7mX9b9AYBmkejdir3XSrU3f5cRWyjk02mlFH+U0RA/HOyww4tHXf&#xA;D9D5/qMnBrjLuyfpeFZxr6A7FWU/lrq0enea7cytxiu1a2dj0BkoU/4dVzY9lZhjzi+R2/HxdT23&#xA;pzl05rnH1fL9j3TO0fP2OecvJsfmaO1R7o2v1UuQQgflzC/5S/y5r9foPzFb1Ts+ze0jpTIiPFxV&#xA;1rkxj/lS1v8A9XZ/+RA/5rzXfyAP5/2ftdt/omP8z7f2O/5Utb/9XZ/+RA/5rx/kAfz/ALP2r/om&#xA;P8z7f2Mv0TQV0Ly42mrMbgRrK3qleBPOrdKnxzaYNN4OEwu+bpdVq/zGcZKq6fPucO+juxVlf5Xf&#xA;8pnZ/wCpN/yabNn2R/jEfj9zp+3f8Vl8PvD3LOyeBYR+b3/KKx/8xUf/ABB803bn9yP6w+4u+9nf&#xA;8YP9U/eHjOcm9w7FXrn5Nf8AHEvv+Yn/AJlrnUdg/wB3L3vG+0v97H+r+l6Dm9ebYl+af/KG3X/G&#xA;SH/k4M1XbP8Ai594dz2D/jQ9x+54fnHveuxV6n+S3+8+rf68H6nzpOwOU/h+l5L2m5w+P6HpWdC8&#xA;s8h/OX/jv2X/ADCj/k4+cr27/ex/q/pL2fs3/cy/rfoDAM0j0bsVfQnkz/lFNJ/5ho/+I53PZ/8A&#xA;cQ9z5v2n/jM/6xeKecNGbR/MV5Z8aQ8zJbnxik+Jfu6fMZyOtweFllHp09z3XZ2p8bBGfWt/eEmz&#xA;Ec53TcYq9l/Ljzv+l7YaXfv/ALk7df3cjf7ujXv/AK69/Hr451nZXaHijgl9Y+39rxHbXZfgy8SA&#xA;9B+w/qZxm5dA7FXYqpXn+8k//GNv+InIZfpPuZ4vqHvfM+eevqbsVZX+V3/KZ2f+pN/yabNn2R/j&#xA;Efj9zp+3f8Vl8PvD3LOyeBYR+b3/ACisf/MVH/xB803bn9yP6w+4u+9nf8YP9U/eHjOcm9w7FXrn&#xA;5Nf8cS+/5if+Za51HYP93L3vG+0v97H+r+l6Dm9ebYl+af8Ayht1/wAZIf8Ak4M1XbP+Ln3h3PYP&#xA;+ND3H7nh+ce967FXqf5Lf7z6t/rwfqfOk7A5T+H6XkvabnD4/oelZ0LyzyH85f8Ajv2X/MKP+Tj5&#xA;yvbv97H+r+kvZ+zf9zL+t+gMAzSPRuxV9CeTP+UU0n/mGj/4jnc9n/3EPc+b9p/4zP8ArFKfzG8n&#xA;trmnLdWiV1OzBMY7yR9Wj+fdf7cxu1dD40OKP1x+0dzmdjdo+BPhl9EvsPf+t4kysrFWBDA0IOxB&#xA;Gce92C1ilVtbq4tLmO5tpDFPCweORdiGGShMxII2IYZMcZxMZCwXu/kvzbb+YtMEhpHfwUW7gHY9&#xA;nX/Jb+zO07P1ozw/pDm+fdp9ny02Sv4DyP6PeyHM91rsVUrz/eSf/jG3/ETkMv0n3M8X1D3vmfPP&#xA;X1N2Ksr/ACu/5TOz/wBSb/k02bPsj/GI/H7nT9u/4rL4feHuWdk8Cwj83v8AlFY/+YqP/iD5pu3P&#xA;7kf1h9xd97O/4wf6p+8PGc5N7h2KvXPya/44l9/zE/8AMtc6jsH+7l73jfaX+9j/AFf0vQc3rzbE&#xA;vzT/AOUNuv8AjJD/AMnBmq7Z/wAXPvDuewf8aHuP3PD849712KvU/wAlv959W/14P1PnSdgcp/D9&#xA;LyXtNzh8f0PSs6F5Z5D+cv8Ax37L/mFH/Jx85Xt3+9j/AFf0l7P2b/uZf1v0BgGaR6N2KvoTyZ/y&#xA;imk/8w0f/Ec7ns/+4h7nzftP/GZ/1inOZjgvMfzP8kV9TX9Oj/ytQhUffMB/xL7/ABznO1+z+eWH&#xA;+d+v9b1fYXanLDM/1T+j9XyeYZzr1bsVTDQdbvdF1OK/s2pJGaOh+y6H7SN7HL9PqJYpiUebjavS&#xA;wz4zCXI/Y990HXLHW9Miv7NqpIKOh+0jj7SN7j+3O302ojmgJRfO9XpZ4MhhL+3zTDL3GUrz/eSf&#xA;/jG3/ETkMv0n3M8X1D3vmfPPX1N2Ksr/ACu/5TOz/wBSb/k02bPsj/GI/H7nT9u/4rL4feHuWdk8&#xA;Cwj83v8AlFY/+YqP/iD5pu3P7kf1h9xd97O/4wf6p+8PGc5N7h2KvXPya/44l9/zE/8AMtc6jsH+&#xA;7l73jfaX+9j/AFf0vQc3rzbEvzT/AOUNuv8AjJD/AMnBmq7Z/wAXPvDuewf8aHuP3PD849712KvU&#xA;/wAlv959W/14P1PnSdgcp/D9LyXtNzh8f0PSs6F5Z5D+cv8Ax37L/mFH/Jx85Xt3+9j/AFf0l7P2&#xA;b/uZf1v0BgGaR6N2KvoTyZ/yimk/8w0f/Ec7ns/+4h7nzftP/GZ/1inOZjguZQwKsKg7EHoRiQoL&#xA;xb8xPJLaLdm/sUP6LuG+yP8AdMh/Y/1T+z92ch2p2f4MuKP0H7Px0e67G7U8ePBP+8j9o7/1sLzU&#xA;u8dirIfJfm258u6kJN3sJyFu4B3HZ1/yl/szO0GtOCd/wnmHW9p9nx1OOv4xyP46Pd7W6t7u2iub&#xA;aQSwTKHjkXoVPQ52sJiYEhuC+fZMcoSMZCiHXn+8k/8Axjb/AIicGX6T7lxfUPe+Z889fU3Yqyv8&#xA;rv8AlM7P/Um/5NNmz7I/xiPx+50/bv8Aisvh94e5Z2TwLCPze/5RWP8A5io/+IPmm7c/uR/WH3F3&#xA;3s7/AIwf6p+8PGc5N7h2KvXPya/44l9/zE/8y1zqOwf7uXveN9pf72P9X9L0HN682xL80/8AlDbr&#xA;/jJD/wAnBmq7Z/xc+8O57B/xoe4/c8Pzj3vXYq9T/Jb/AHn1b/Xg/U+dJ2Byn8P0vJe03OHx/Q9K&#xA;zoXlnkP5y/8AHfsv+YUf8nHzle3f72P9X9Jez9m/7mX9b9AYBmkejdir6E8mf8oppP8AzDR/8Rzu&#xA;ez/7iHufN+0/8Zn/AFinOZjguxVRvbK1vrSW0uoxLbzKUkjPQg5DJjjOJjIWC2YssschKJqQeDec&#xA;PKl15d1MwNV7OWrWk5/aXwNP2l75xWu0csE6P0nkX0Ls7Xx1OOx9Q5j8dEhzCdg7FXoP5U+apLW+&#xA;/Qdy9bW6JNqWP2JevEez/r+ebzsbWGMvDP0y5e/9rzfb+gE4eNH6o8/Mfs+56vef7yT/APGNv+In&#xA;Omy/Sfc8hi+oe98z556+puxVlf5Xf8pnZ/6k3/Jps2fZH+MR+P3On7d/xWXw+8Pcs7J4FhH5vf8A&#xA;KKx/8xUf/EHzTduf3I/rD7i772d/xg/1T94eM5yb3DsVeufk1/xxL7/mJ/5lrnUdg/3cve8b7S/3&#xA;sf6v6XoOb15tiX5p/wDKG3X/ABkh/wCTgzVds/4ufeHc9g/40PcfueH5x73rsVep/kt/vPq3+vB+&#xA;p86TsDlP4fpeS9pucPj+h6VnQvLPIfzl/wCO/Zf8wo/5OPnK9u/3sf6v6S9n7N/3Mv636AwDNI9G&#xA;7FX0J5M/5RTSf+YaP/iOdz2f/cQ9z5v2n/jM/wCsU5zMcF2KuxVLfMOgWOu6ZJY3Y2beKUCrRuOj&#xA;r/nvmNqtNHNDhl/Y5Wj1c9PkE4/HzDwDWNJu9J1KfT7sATwNQkdGBFVZfYg1ziM+GWKZhLmH0XTa&#xA;iObGJx5FB5U3r4JpYJ454m4yxMHjYdQymoP34YyINjmxlESBB5F9F298l/oSXqbLc2wlAHbmnKn0&#xA;VzvI5OPFxd8b+x80liOPNwH+GVfa+cc4J9NdirK/yu/5TOz/ANSb/k02bPsj/GI/H7nT9u/4rL4f&#xA;eHuWdk8Cwj83v+UVj/5io/8AiD5pu3P7kf1h9xd97O/4wf6p+8PGc5N7h2KvXPya/wCOJff8xP8A&#xA;zLXOo7B/u5e9432l/vY/1f0vQc3rzbEvzT/5Q26/4yQ/8nBmq7Z/xc+8O57B/wAaHuP3PD849712&#xA;KvU/yW/3n1b/AF4P1PnSdgcp/D9LyXtNzh8f0PSs6F5Z5D+cv/Hfsv8AmFH/ACcfOV7d/vY/1f0l&#xA;7P2b/uZf1v0BgGaR6N2KvbEd0/KsOjFWXTaqwNCDw7EZ1wNaH/MeFIB7Ro/6o8b/AElqP/LVN/yM&#xA;b+ucp4ku8va+DD+aPk79Jaj/AMtU3/Ixv64+JLvK+DD+aPkzz8oLu6m128WaZ5FFqSA7FhX1E8Tm&#xA;67DmTlNn+H9Ief8AaPHGOGNAD1foL1nOoeOeT/nNYpHqWnXqgBriJ4np39FgQT/yMzmO3sdTjLvH&#xA;3f2vYezWUnHOHcQfn/Y86zQvTOxV7l5DnM3kC1JNWSKdD7cZHA/Cmdj2dK9KPcf0vA9qxrWy98fu&#xA;Dw3OOe+dirK/yu/5TOz/ANSb/k02bPsj/GI/H7nT9u/4rL4feHuWdk8Cwj83v+UVj/5io/8AiD5p&#xA;u3P7kf1h9xd97O/4wf6p+8PGc5N7h2KvXPya/wCOJff8xP8AzLXOo7B/u5e9432l/vY/1f0vQc3r&#xA;zbEvzT/5Q26/4yQ/8nBmq7Z/xc+8O57B/wAaHuP3PD849712KvU/yW/3n1b/AF4P1PnSdgcp/D9L&#xA;yXtNzh8f0PSs6F5Z5D+cv/Hfsv8AmFH/ACcfOV7d/vY/1f0l7P2b/uZf1v0BgGaR6N2Kvav/AClH&#xA;/bs/40zrf+QP+Y8L/wA7H/ko8VzknunYqz/8mv8Ajv3v/MKf+TiZu+wv72X9X9Iec9pP7mP9b9Be&#xA;vZ1TxjzH86/+lMf+Yn/mVnO9v/wf536Hq/Zj/Kf5v++eYZzj1bsVe1flz/ygSf8ARx/xJs63sv8A&#xA;xX/TPC9s/wCOf6V4rnJPdOxVlf5Xf8pnZ/6k3/Jps2fZH+MR+P3On7d/xWXw+8Pcs7J4FhH5vf8A&#xA;KKx/8xUf/EHzTduf3I/rD7i772d/xg/1T94eM5yb3DsVeufk1/xxL7/mJ/5lrnUdg/3cve8b7S/3&#xA;sf6v6XoOb15tiv5nxO/ky9K/7raJmHt6qj+OazteN6c+Vfe7fsKQGqj539zwzONe/dir0n8mtRto&#xA;7rULCRgs9wI5IQf2hHyDge45A5v+wcoEpRPM19jy/tLhkYwmOQsH409UzpnkXiv5r6nbXvmcRQOH&#xA;FnCsEjDcepyZmFfbkB885DtnMJ5qH8Ip7rsDBKGns/xG/gwzNS7x2KvcZLSRfywMAFZBpXIj39Hm&#xA;RnYnGfyVf0P0W8CMgPaF/wC2fpp4dnHPfOxVmv5S6jbWvmZ4Z2CG8gaKEnYGQMrBfpCmnvm37Fyi&#xA;Oaj/ABCnRe0OGU8Fj+E2fc9ozrnhnlP5y6lbyXmn6fGwaa3WSWYD9n1OIQfOik/dnM9u5QZRgOY/&#xA;S9f7NYSIzmeUqA+DzjNA9O7FXuP5c2rjyLap0acTkV2pykcD+udh2XA/lgO+3gu2cg/Nk93D9weH&#xA;EEEgihGxGce947FLIfIGo22n+bLG4uWCQktEznYKZEKKT7ciK5ndm5RjzxJ5frdb2vhlk00ox58/&#xA;kbe+Z275289/OPU7ZNJtdNDA3MswnKdxGistT4VZtvpzQ9u5hwCHW7ek9m8Ejklk/hAr47PJM5h7&#xA;J2KvYfychZfLt1Kekl0wUeyxpv8Aec6rsKNYif6X6A8V7SSvPEd0f0lnmbt55Catp8epaZdWEmyX&#xA;MTR160LCgb6DvlWfEMkDE9Q3afMcWSMx/CbfOd5aT2d3NaXC8J4HaORfBlNDnBTgYyMTzD6ZjyCc&#xA;RKPIqOQbF8M00EqTQu0UsZDJIhKspHQgjcYYyINjmxlESFEWE/l/MHzhLafVX1J/TIoWVUWQj/jI&#xA;qh/xzNl2nnMeHi2/HV10ex9MJcQgL+NfLkx0kk1O5PU5guzdiqZeXNGm1nWrXT4waTOPVYfsxru7&#xA;fQuZGlwHLkEB1cXW6kYMUpnp9/R9EGCEwGAoPRK+mU7caUp92d3wCq6Pmomb4ur511/SJ9I1e60+&#xA;UGsDkIxFOSHdG+ld84PU4DiyGB6Ppek1AzYozHUf2pflDktqzKwZSQwNQRsQRighkcX5jeco7X6s&#xA;NRYqBQSMkbSU/wBcqWPzO+bAdqagRri+6/m6yXY2lMuLg++vkx6aaaeV5pnaWWQlnkclmYnqSTmB&#xA;KRJs83ZRiIigKAWYGStZWdxe3cNpbpznncRxqO5Y0ycIGchEcy15ckYRMpcg+jdL0+LTtNtrGL+7&#xA;toliB6V4ihP09c73DiGOAiOgfM9RmOTJKZ/iNvDvP2hvpHmW6QLS3uWNxbEdOMhJKj/Vaozju0tP&#xA;4WYjodw972TqhmwRP8Udj8GO5gOzdiqf2HnzzZYWotbfUHEKjigdUkKjwVnViMzcXaOeEeES2+f3&#xA;uuzdk6bJLilDf4j7kmvLy7vbh7m7laeeQ1eRyWY/ScxZzlI3I2XNx44wjwxFAKOQbG1VnYIoLMxA&#xA;VRuST2wgIJp9CeUdGOj+XbOxcUmROc//ABkc8mH0E0zudDg8LFGPXr73zftHU+NnlMcunuCcZluE&#xA;7FWA/mP5Dk1QHVtMj5aggAuIB1lVRQFf8tR94zR9q9nHJ+8h9XUd/wC16LsXtYYv3eQ+joe79jyF&#xA;lZGKsCrKaMp2II7HOWIezBtrFLsVdiqrbWtxdTpb20bTTyHjHGgLMT7AZKMDI0BZYTnGAMpGgHtv&#xA;kHyWvl6zaa5o+p3IHrMNxGvX01Pz+0e/0Z2HZug8CNy+s/Z5PCdrdp/mZVH+7jy8/NlebN07EfzA&#xA;8lDX7Rbm0AXVLZSI67CVOvpk+Nfsn+uartPs/wAePFH6x9vk7nsjtP8ALy4Zf3cvs8/1vFLi2ntp&#xA;3t7iNop4iVkjcEMpHYg5yMomJo7F7qExIAxNgqeRZuxV2Ktoju6oilnYgKoFSSdgABhAtBIAsvYP&#xA;y58htpSjVtSSmoyLSCA/7pVhuT/lsPuGdT2X2b4f7yf1dB3fteL7Z7W8b93j+gcz3/sZ5m7eeSDz&#xA;n5Ut/MWmeiSI7yGr2k56Bj1Vv8lu/wB+YOv0Qzwr+IcnY9m9oS02S+cTzH46vC9S0y+0y8ks76Fo&#xA;LiM/EjeHYgjYg9iM4zLiljlwyFF7/BnhliJQNxKFytudirsVdir0/wDLbyDNHLFrmqxlCnxWVq4o&#xA;1e0rg9Kfsj6fDOi7K7NNjLP4D9P6nlO2u1gQcOM/1j+gfp+T07OjeUdirsVdirHfMnkPQdeJmmjN&#xA;vekf71Q0Vj4cxSjfTv75r9X2bizbnaXeHZ6LtbNp9gbj3H9HcwHUPye16FibK5guo6/CGLRP9xDL&#xA;/wANmly9h5R9JEvs/Hzehw+0eGX1iUT8x+Pglw/K3zkWobRAP5jNHT8GzH/kjUfzftDlfy9pf5x+&#xA;RTfTPyb1SRlbUbyK3j7pCDI/y3CKPxzKxdhZD9ZA+1ws/tJjH0RJPns9B8veUdD0GOljB++YUe5k&#xA;+KVv9l2HstBm90uhx4R6Rv39XnNZ2jl1B9Z27hyTnMtwXYq7FUl8w+T9D15P9OhpOBRLqKiygeFa&#xA;EEezA5h6rQ4s31DfvHNz9H2jm059B27jyefal+TmrRszadeQ3EfUJKGif5bB1P3jNHl7CyD6CD9j&#xA;0eD2kxn64mJ8tx+hKT+VvnINT6ohH83rR0/4lmL/ACRqP5v2hzP5e0v84/Iplp/5O67MwN7dQWsf&#xA;cLylf7gFX/hsyMXYeU/URH7fx83Fze0eGP0CUj8vx8me+W/Img6ERLBEZ7wDe6mozD/UH2V+jf3z&#xA;d6Xs3Fh3AuXeXntb2rm1GxNR7h+N2RZnusdirsVS3XPLmka3behqMAk419OUbSIT/Kw3Hy6Zj6jS&#xA;48wqY/W5Wl1uXBK4GvuLzzVfyau1ctpV8kke5EVyCjD25oGDfcM0ObsKQ+iV+96TT+0sSP3kSD5f&#xA;t/akj/lb5yViBaxsP5hNHT8SMwz2PqP5v2hzx29pf5x+RRtj+UHmSZh9amt7VO9WMj/QFFP+Gy7H&#xA;2JmP1ERacvtFgj9IlL7GceXPy30DRnWd1N9erus0wHFT4pH0H01ObnS9lYsW59UvP9ToNb21mzih&#xA;6I9w/SWV5s3TuxV2KuxVgHmL8+Pyr0C9exvdcSS8iYpLDaxy3HAjqGeJWQEHYjlXFU48n/mZ5G84&#xA;c18vatFeTxjlJbEPFOo8fSlCOQPECmKsnxV2KuxV2KuxV2KuxV2KuxV2KuxVpmVVLMQqqKsx2AA7&#xA;nFWA6r+ff5RaXePaXXmOEzRkh/q8VxcoCOo9SCORPxxVk/lnzj5X80WbXfl/UoNRgQgSei3xoT0E&#xA;iGjoT/lAYqmU97ZwMFnnjiYioV3VSR47nFVVWVlDKQysKqw3BB7jFW8VdiqhNf2ML8JriKN+vF3V&#xA;Tv7E4qrggio3B6HFXYq7FXYq8z/5yJ82X3lr8sb2awkMF5qEsenxTKaMgm5NIV9zFGwFOnXFXzd+&#xA;SX5M/wDKxrjUpLm/bT9P01Yw7xoskjyzcuKgMQAAEJJ+X0KSkXmLTNY/K/8AMyezsrwtf6FcxyW1&#xA;2oKc0dFmTkoJ2eOQB1r4jFX3CvnDy2lhY3l9qVrYDULeO6t47meKJikihgRzK1G/UYoXyebfK8er&#xA;W2kNq1p+lbsBraxE0ZmdSvMMsYPKhXcHuMVQ+ueffJWg3ItdZ1yysLojl9XnnjSSh3BKE8gD8sVT&#xA;HSNa0fWbNb3Sb6DULRjQXFtIkqVHUckJFR4Yqgdc87+T9BuI7bWtastOuJRWOG5njjcg7cuLEEL7&#xA;9MVVJfOHlKGRI5tbsI5JFV0R7qFWZZAGRgC24YEEHviqM1XV9K0ize91W8gsLNNnuLmRYowT0HJy&#xA;BU4qlGj/AJi+Q9ZvFstK8wWF5eN9i3iuI2kbt8K1qfoxVNNT13RNK9P9KahbWHrcvR+szRw8+NOX&#xA;HmVrTkK0xVQ1HzZ5W02xhv8AUNYsrSxuRW2upriKOOUdf3bswD9f2cVRmnappmp2iXmm3cN9aSf3&#xA;dzbSJLG1PB0LKcVeSf8AOVHmXUdI/LmK0sZGhOr3a2lzIpofQEbyOlR/OUAPtUYq8n/Jj/nH3R/P&#xA;nlOfXdR1ea2f6xJbQQWoRuHpqpJl5g7nn9kU2777KbZN+Vn5A/mN5V/MltQGox2Wj6bJT64nx/X4&#xA;GFTEIK7Bl2cufhb7NSK4oYx/zldrGk6p5x0ibTL23vok07g8ltKkyq3ryHiShYA0OKQ+k/y513RL&#xA;7ynolpZahbXV3Bplp69vDNHJInGFFPNFJZaNtvihX1X8yPIGkXTWmpeYdPtbtNnt5LmMSKR/Mtar&#xA;9OKpnpXmLQNXsG1DS9Str6xQEvc28ySRrQVPJlJC0HWvTFXxx/zktqWnaj+aNxc6fdQ3lsbS2UT2&#xA;8iyoSFNRyQkbYpD7A8s63o2p6bAum39tetbwwidbeZJTGWTYPwLca8T18MUJfdfmf+XNpetY3PmX&#xA;TYrpG4PE11ECrVpRjyop8a4qySCeGeFJ4JFlhlUPHKhDKysKhlYbEHFV+KvD/wDnLz/yW2m/9tmD&#xA;/qFucUhI/wDnDf8A45nmj/jNaf8AEJcVLyr/AJyQ/wDJ0eYv+jP/AKgYMVCef85Ff8c/8vv/AAH4&#xA;P+IpioTT8r/ys8y6bpMf5v3+oRgadaXep21g6vJLNHDbShCz1UKDT4Rv8Phihjf5MeRNK/MnzTrF&#xA;55u1KYRwoLm4kEqRyzz3DndncNtsSaDFJZD+RdxeeUvz5vfJ1ndm50m6mvbKQ1qsi2iSTQzED4ed&#xA;IqVH8xxVhPlXSpfzU/OAW+q3cqx6zc3FxdXMdPUWGON5QqcgQvwoEXbbwxVCef8AyX/gv8ypPLq3&#xA;bXsFpLbNb3DjixjlVJFVgCRVeXHbrSu3TFWdf85P61qetfmjbeWElK2lhHbw28BJ4evdgO0jDxId&#xA;V+QxUJd+d/5NWf5axaHqOjajc3AundJZJiqyR3EIV1eIxheIO58Vp1OKov8APfzFd+Yvy7/LHWL1&#xA;ud5c2t+LmQ9XkiNtE7n/AFmTlioS0/lN5z8xflj/AI+1HVIhZaZYhNL05uTN9Ts/3ZAIPGP7LNTe&#xA;p3PXFWcf84davd/W/MWjtITZ+nBeRxfsrLUxuw92XjX5YqXsn5xfl3/j3yVPo0Uqw38Mi3enSv8A&#xA;YE8YZQr034urste1a4ofIUV3+an5Ua28SNd6HdFiHjYc7acLtyAYPDMPBhXFL3r8n/8AnJdPMmqW&#xA;3l7zVbxWWp3REdnqEFVgmlOyxujcvTdux5UJ222xQ8S/Oz8r7H8vNesNMs76W+S7tfrLSTKqFT6j&#xA;JxAX/UxSHvv5SfkTpOi6FLqkerXbP5m0dIZhHSB4PrKJKWikQ8uSnp+OKGGf9C3/AJdeWtPml8/e&#xA;cBa3cpf6p6MsVuOHI8G4TLJJKxAqQo23G/XFbYD+R11cWX5qDy/Y3xl0zWBeaZdSx1CTQmGX05Qp&#xA;7hlDrX5d8UlI/wA3fIVp5F85S6BaXUl5FHBFN68qqrEyipFF22xUPX/Nnkf/AJVH+UWt3WiapcT3&#xA;Hmp7C0mkdVjaGMLM7hCh/bR2U4oYf+X35OeVdf8Ayr1nzTqWpyQ6vCl02n26PGqKbWPmOaMCz82F&#xA;NiNvfFNs/wD+cP8AzJf3Oma75fuJWktbBoLmxVtxGJ/UEqivQFkVgPGuKl9E4oeN/wDOV2nSXf5V&#xA;idFJWw1G2uJCOysskFT/ALKcYqGBf84j+aNA03/EWm6jfQ2Vzcm2ntxcSLGJEjEiycSxAJXkKj3+&#xA;eKS8w/PLW9O17819f1DS5Rc2cssMMMyEMrm3t44GKEVDKXjPEjqMVZn/AM5N2U1h/gexnFJ7TRY4&#xA;JQezR8Vb8Rioe1aRFJL/AM40elGpeSTytOqKOpY2TgAYofOv5D/lx5R8+63qOla9e3VpPDAs9ilp&#xA;JFG0lGIlr6scvLiCpoPfFL6D8m/84/8A5d+S/OOm6xYarfPrEAmazs7u4tiJA8LxSH00hjkbikhP&#xA;wnbFFvn/AP5xylWx/OfSILn4Hb63b7kUEn1eSg+krQe+KSif+cg54Zfz0vBG4f02sUem9GEMZI+i&#xA;uKq358Ilp/zkDPczNwikm02dnYUAVIYUJr4fu8Veh/8AOYlzbnQfLUQkUyS3M8sag15IsagsPb4x&#xA;igPMfzPRl/KD8qwwIPoaqaHwM8JH4HFIey6B/wCsmy/9sa9/5Oy4oYP/AM4d/wDKTeYP+YKL/k7i&#xA;kvoD8w/zH8t+Q9GGpa1I5MpKWdpEvKWeRRXiv7Ip3LGgxQk3kz8yPIX5keUzLfCzUlSNT0W+eOT0&#xA;SpIqwkChkI3V6fjXFXyN53s9CtfzPvbXyTIJNMS9iXSXjYyJ6h4bRuC5ZFmqFNTUYpek/wDOYH/K&#xA;b6L/ANsz/sYkxUPaF88R6R+QVt5o01knls9FtvQFQ6rcekkIV6f77lPxD2xQ8F/JPyNpP5m+YNd1&#xA;zzxqct0NPEc9xG83pvMZi9Xkk2KxII6UQilR0HVSkf5QyaXH+fGlNYlYtMOo3K2QLbCJllWFQzEk&#xA;1BUDepxVMv8AnKYH/lbNx72dr/xE4qHq/wDzkXeW2o/kZpV9ZSLcWktxYypNGeSlDC4rUe5pigME&#xA;/JD8jPIPn7yjJqmo6lfx6pb3LwXNtaTQIqKAGjJSSGVviB61ofoxTb3D8r/yo8l+Qr/VV8v6jc3l&#xA;3cJCl9BdTQStEFLtH8MUcTJyq32utMUPQsVQOu6Jpuu6PeaPqUXrWN9E0NxH0qrDqD2I6g9jir5j&#xA;8w/84geZ475z5e1izubBm/di+MkMyqT0b0o5Ubj3IpXw7YptlX5Y/wDOLMGh6vBrPmy9h1Ge0dZb&#xA;XT7UMbf1VNQ0ryKrSAH9niPeo2xQnn56fklr/wCYer6Ze6Zf2lpHY27wyLc+pViz8qjgrbYq9G8l&#xA;eXJdC8l6T5fvmjuZLCzjtLhkBMT8F4tQMBVT7jFXgnm3/nEvWBrcl75M1a2trJ3MkNtevNFJBXfi&#xA;ksSSlgO1QDTx64ptP/yo/wCcevNflfznaeate16C5ubUSqbaASz+qJYmio003pMOPPl9k9MUMc88&#xA;f840azf+e7+98n6zp8QlmF7LZzTSRXNm07M4akSSngWB4HY9u1cU28l85eUJPLX5kL5e+v8A6Wvo&#xA;prX61dD9u5mCO67knZnp8Rr44q+n/wA6fyItvzCnttUsr1dO1u1i9DnIheGaIMWVX4/EpVmNGFet&#xA;KdKKHm+nf84oec77Urf/ABT5jgl023pGv1eSe4nEK9Ej9dEWP8QPfFLPfzk/Iy+846Z5Y0zy7c2u&#xA;nWXl6KeBIrj1P7uRYFjC8FfoIDWuKGQab+W2q2v5Kv5Ce6gbUWsbizF0Ofoc5ndlbdedBz32xVj3&#xA;5F/klr/5eavqd7qd/aXcd9bpDGtt6lVKvyqeartir0Pz55F0Lzt5dm0TWIyYZDzgnSgkhmUHjLGT&#xA;3FfpG2Kvm/Uv+cP/ADql066ZrOm3FpU+nJcmeCQjtVEinUf8Fim3oH5U/wDOMth5V1i31/X79dU1&#xA;O0b1LO2hQrbxSg/DIWb4pGXquwAPjihPvzv/ACUX8xIbK7sbxLHWdPDRxvMpMMsTnlwfiCy8W3Ug&#xA;HqdvBViH5W/84367oLeYLXzRdWVxput6a+nkWMszSozyI4f97DEPh4VG537YqxmH/nEDzUuqmN/M&#xA;Fmujs3F7hFm+stHyr/ccfTrt/v3rim2R3X/OKUen+a9J1by1qwXT7K4tp7i0vwWlrA6s7JJGtDz4&#xA;1oVFD3p0UWyX88PyGk/MC9tdY0q+isdYt4fq0iXCt6M0aszpVkDMrKXO/E1HyxVI/wAsf+ccdT0f&#xA;SPM+j+brizurDX7eCGM2EkrSRvC7Osn72KIAoxVl69N9sVYjcf8AOJv5hWF/K2g+YbEWxqEmkkub&#xA;WYrXYMsUcw/4bFL1j8j/AMntT/LuPVJL/Vk1CfVvRM0EUbCNGhL0YSOeTFvVNfhGKHqWKuxV2Kux&#xA;V2KuxV2KuxV86+Zv+cZfNsXmO71ryZ5qe0e7Z5GN3Pcx3ClySUNzD6jyL7sK+NeuKo/8tf8AnGE6&#xA;H5kh8xeatUTVbu1l+s29rAH4G4DclmllkozkN8XHj16k9MVel/mf+YsPkPRbHU5bFr9b2/i08RJI&#xA;IipljkfnUq9ael0xVV07z9Fe/mPq3kkWTJLpVnFeNfGQFXEvD4BHxqKep15Yqlurfm5pWlfmhp/k&#xA;O9tWjk1GFJINSMg4erLzEcRTjWrMnEGvUjFU1/LrzzF508vNrMVo1kq3M1r6LOJDWBuJbkFXr8sV&#xA;Uvy//MCHzh+m/Tsms/0LqMumtykEnqGGn7wUVeINemKpJB+dWn/oTznqF7pz2lz5MuGtrqzMyuZm&#xA;5FIWV+I4iWRSo2PjiqdXvn9rL8s/8cXOmvH/AKDHqB0wyDmFlCsqGTjseLCvw4qlPkX8z/M/mi+s&#xA;RP5LvNK0i/h+sRavLOkkPptH6kZoEUn1NqfPFVDzv+cd75d83yeWdP8ALNxrl1FYjUpXt50jKw8i&#xA;rHgyMTxp2OKsp8neetG80+T7fzTac7ewljkeZJh8URhJWVW41rxKHcdRirC/In53ar5s1mxgTydf&#xA;W2hap65sdcWUTxUgYoxmURosXxLQ/GTWnXrirK/OPn6Ly1rvlnSXsmuW8yXhs0mWQIISCg5kFW5f&#xA;3nTbFVXz95s1fyxpKahp2gz68ebC5ht5FiMUSoXMrFlb4RxpiqS/ld+aOp+e0N2fLVxpWkPE8lrq&#xA;csyyxTOkvpNGtETcEN92KpVqn5/6Ro/+K7fWNNks9U8syRpHYGUM16kz8Y5Im4CgNVY1GymuKvR9&#xA;Cv7vUdGsr+8s20+5uoUmlsnbm0JdeXBmovxLXfbriqOxV2KuxV2KuxV2KuxV2KuxV2KvIv8AnJ3S&#xA;tSvvy/sp7G2kuxpmrW17dRwqXcQJFNGzBR4NItcVS78ptYk82fnH5q842Wn3droU+n21pBNeR+kz&#xA;SqIqrQFlr+7box2pXriqXfmX5DvPNn5u61BBFIl1B5XS50e9UEKl/b3sbxBZPshmFV67A1xVlP8A&#xA;zjRb38H5ZIt/DJBdNfXTyRzIY3qzA14kCmKqf/OP9nd23+N/rEEkPq+Yrt4vUVk5IaUZagVHvirz&#xA;384/JXmCX82m0fS4pP0L56OntqksaMURrebg5ZhsOIT1N/HCr2T85LJj+UvmGzs4SxFl6cEESkmi&#xA;soCqo9hgV5z/AM4+6l5N0i6stIsbPX017VrSKPUHv4T9RjmtoGll9JjTghYMF+gYql35yeUfMev/&#xA;AJsaqNHlvLSeLyyZYJrVnjSd4pSWtXdR8QkQkcK9adsKvTfybm0v/lUemJY6VJAttbSR3mlMp9R7&#xA;leRmWk3GvrOSy8jSjAYFeMfl/cvbfmhoUfkOx1nRba7uJV81eXL0O9pbRq1CwdqV+DpzHJWAAJrT&#xA;Cr1L847S7n89/llJDDJLHBrDNM6KWCLWHdiB8I+eBXovmZWfy3qyqCzNZ3AVRuSTE1ABirC/+cd7&#xA;a5tfyd8vwXMTwTp9c5xSKUYVvZyKq1D0OKsV/NXyTp+qfnh5DupbB5oLn1P0lIqkxsLP97AJSBx+&#xA;0aGvUbYq9wxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxVBXmuaLZS+jeahbW0wHL05ZkRqHoeLEHKZ6jHA1KUQfMhvx6XLMXGMpD&#xA;yBKD/wAZ+VP+rtbf8jFyn+UMH88N/wDJmp/mS+Sl/jzyf/1dIf8Ahv6ZH+UtP/PDP+SdT/MKmfzD&#xA;8mAkHU0qPBJD+pcj/Kmn/nfYf1Mh2Nqv5n2j9a1vzH8lqKnU1p7RzH9SYntXT/zvsP6kjsXVH+D7&#xA;R+tZ/wArM8kf9XL/AJI3H/VPB/K2m/nfYf1J/kTV/wAz7Y/rd/yszyR/1cv+SNx/1Tx/lbTfzvsP&#xA;6l/kTV/zPtj+tU/5WJ5M/wCrmn/AS/8ANGH+VdP/ADvsP6mP8jar+Z9o/WvT8wPJzio1SIfMOv61&#xA;GEdp6c/xfeg9kaofwH7FSPzx5SevHVbcU/mbj/xKmSHaOA/xhieytSP4JK0fm3yvJ9nVrTw+KaNf&#xA;+JEZOOuwn+OPza5dn6gf5OXyKbAggEGoO4IzKcN2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;rJLeCQ8pI1c9KsoJp9ORMAeYZCchyKk+m6dJT1LWF6dOUan9YyBwwPOI+TMZ5jlI/NTbRdHccWsb&#xA;dl8DEhH6sB0+P+bH5BkNVlH8UvmVn+H9A/6ttr/yIj/5pwflcX8yPyDL85m/ny/0xd/h/QP+rba/&#xA;8iI/+acfyuL+ZH5Bfzmb+fL/AExd/h/QP+rba/8AIiP/AJpx/K4v5kfkF/OZv58v9MXDy/oINRpt&#xA;qCOh9GP/AJpx/K4v5sfkEfnM38+XzKp+iNJ/5YoP+RSf0w/l8f8ANHyDH8zk/nS+ZVRZWYAAgjAG&#xA;wARf6ZLwo9wY+LPvKsAAKDYDoMsa3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXydYar+bn5mQebPNmj+ZdQ0+DRWDaZomnmdfXDF&#xA;mWFUgZPiWNRuVYsTil7f+XvnjUbf8sbTW/zEL6Lf2peC+m1CNrVnKuVif03VDV1K9Bua0xQnOkfm&#xA;J5P80adqDeW9YhvprWB3kSIssqfCaPwcK9K/tUpir5ztvzE89N/zj7d602vXp1ZPMotUvvWf1hB9&#xA;Tjf0uda8eRJpil9DT/mF5V8teW9FufM+rxWUt7aQunrFmllb01LsEUM53O5pihNLLzv5RvvL0vmO&#xA;01a2l0OAMZ74OBHHwoWV60KtuPhIruPHFUq0v83/AMtNVurS00/zBa3F1fOIrWBS4d3J4heLKCCT&#xA;44qqa9+a/wCXWgaqdK1fXra01Bac7dizFOVCPUKKwTY1+IjFWUW1zb3VvFc20qTW8yCSGaMhkdGF&#xA;VZWGxBGKsd8z/mZ5D8r3kdlr2tW9jeSAMtuxZ5Ap6MyxhyoPYtTFXnv/ADkJ+ZsGn/lzay+WdcEV&#xA;7rUsbWVzZylZHtVqZXikTcUbipoQRXFWT/kXL63kC2nbzHP5nnmk9S5vbh5JHhmeKMvbcpGkYiI+&#xA;/fFXkuu3v5jeZfz61vyfo/m290W1jrJAEkkaJFjgjcqI1ZOpY4q9d0G6X8t/KyR+f/Ngv5ri7f0d&#xA;Tu+YJDICsI5GQ/DwY9cVTry/+ZHkXzFqc2l6JrVtfX8Cl5IImNSqkAshIAcCu5UnFUDdfnJ+V9re&#xA;3dlceY7OO5smKXKFm+Fg3EqGpxYhuoUmmKsf17UYb/8AM7yteWPnpbGwvLS3ng8tL6nHUI5XlZJh&#xA;QhaSKQNx+ziqe3X51flXamVZ/MlojwSejKlXLq9SKcQpbbianoO+Kp1rHnfylo+iQ65qWq29tpNy&#xA;Fa2uy/JJQ68l9PjUvVd/hBxV3lnzv5S80Wk13oOqQX8FuaXBjajR1FRzRgrKDQ0JGKpXp35vflpq&#xA;WsLo9j5htJ9Qkf0oogzBXetAqSECNyT04tviqvrX5ofl/ol/eafquuW1pfaeiSXdtIW9RFkCFfhA&#xA;JaolU0Wp3xViug6jDYfmd5pvL7z0t9YWdpcTz+Wm9Tjp8cTxM8xqStI1BGw/axVPoPzn/K24u7W0&#xA;h8yWbz3jcLdQzULE8QGYjilT05EYqmPmH8xvI/lzUYNN1zWbawvrkBooJWPLiSQGagIRSQaFqDFU&#xA;N/ytf8u/0N+m/wBO2/6J+s/Uvrvx+l9Y4er6XLj9rh8VPDFXin/OL/mLTvLvkjztqGocuGkPHd3c&#xA;EYBl4LE+yqxUcmMZUVI3xUoP8+fP2mee/J3lDUtMhuYdHutTuI5YbtVjcvCESp9N5F6SNT4sVTBL&#xA;Cz0b/nJ7UrDSLeOxsZdKlEttboI4uJ08SH4Fooq6KfnhV53af+syXv8A4Fg/6gY8CWUeahr17+d/&#xA;lS102xtNXvYdEtRYadqX+8jAWUsrc+n2Tycf5QGFDHG0/UdK/Krz3atd2kkM2p6YZLSwk9WOBvVn&#xA;LowoOO6IB/q4qyi20vTLH8yfyaeytYrZ7rRNOnujEoQySujs0j0+0zEmrHfArF7HTvMWt3v5nSR2&#xA;OmTq1w36W1LU5OMtkpuZnDW7EkbtHuaH7K4VfSf5CwS2/wCU2gQS3UV40S3KC4gf1Iyq3coUK9BX&#xA;itF+jAryCx0zStb/ADo/NP8ATsEV0bbS7026z8X9NYxFGsich8LIlKMPs1wqw2aKGb/nGOC4ljR7&#xA;i18wtBbTMoLxxPFzdEalQrPuR44Evq38urCxs/I2hJZ28VssthazSrCixhpHgTk7BQKs3c4ofOOr&#xA;+SrTzn/zkvr+iXV5cWMUgaU3FqQsgMdtEQKsGFDirIP+cgvJlp5P/JPRdDtrqa9jt9bVluboq0p9&#xA;WC6cglQNsUhS07TLHR/+cj9Ph0e0jtETQ/UjhgQKvqDT2APEDcniPnhQ8z0vTdPl/ITXtTlt431J&#xA;NdtkjvGUGYKYRVQ5+Kh5ttgS9C1X/wAnX+Uv/bA0r9dxihi9po+lXXl/86by4tIpbuwu7f6lO6Av&#xA;D6moT8/TbqvLgtadtsUrvNP6TutJ/Jqwt7eO85wr9Us7kkW808l4ienLuPgbiqt7HChMdPsNf0nV&#xA;/wAz7qeTTrK/uNCvTd6Npk39xI00AZglBxCo79+p98VYn/h/Xbj8s/LN6YtG0fT0u7mSx1qSb0r2&#xA;4mErBllPxH4PSHHboBil6bc+UdC80/8AOVuvWGuWwu7GC0huTbMWCu6WNsq8uJU0HOuBUqH/AJNj&#xA;85f/AAGtZ/4jBirz7WdPsIvyR8t38dvEl9Nq98k10qKJWVY04qz05ECmwrir1nUdO03Vf+cnPNVt&#xA;q8UdzbRaOxghnAZAf0fBWgbwDuajpih5f/67Z/4OX/drxS978z/84veUNZ1y71O01O90qLUZDLfW&#xA;NuUMTMzc24ch8ILb0PIA9PDFDJNf/I7yXq3kGy8lostnY6awlsbqIqZ1l+Lm7FhR/U5nmKfKlBiq&#xA;H8jfkbo3ljV7/W7nVb3W9bvrdrQ3964ZkiZQp415EtxULViaAUGKoGL/AJx18sx+QJfJQ1O9NhNq&#xA;Q1Vrk+l6wlEKw8B8HHjRa9K4qjvOn5G6L5jutI1G31W90bWtHtks4NSsmCyNDGCF5U4kMOTfEpHU&#xA;jfaiqQeZPyn8s+Svya8waVaWN7rq3ZjudQkR0W7ZkkUrKh4MoWGnLjxO3Kp3xV5J+XFrpGrfmp5F&#xA;/wALy6lqaadbxyavJfkuLUx+oxhRqBVhjFAtNiT4mmFXs3mj/nG/y/rOu6nqdnrWo6RDrb+prFha&#xA;svozsX9RqggbF/io3IBt8CvTPLXl3S/LmhWWh6VGYrCwjEUCseTUqSzMT1ZmJY++KvPvPH5AaJ5l&#xA;8yXfmG01e+0O/wBRh+r6mLJgI7iMoEYMvwmjqoDivFu4rXFUXqP5E+VLr8urTyJDcXVrptpcC7Ny&#xA;hRp5Jfj5M5ZePxep2XwxVnuj6bFpek2WmRMzxWNvFbRu9OTLCgQE02qQuKvKvOn/ADjR5V81+Z7/&#xA;AMw3mq30FzqDq8kMPo8FKoqfDyQnovjiqp/0Lf5X/wAB/wCDf0pffUf0p+mPrP7n1fV+r/VuH2OP&#xA;Djv0rXFWTRflVpEf5iWvnkXlwdQtbUWaWp4eiUWEw8j8PKtDXrir5N8yW/liKw1vRrK31nTfMMuq&#xA;Ri18rSuZbdacgz8Y44+brXhHUV4nvWuFL6dsvyesL7WPJ3mvULm4t9Y8u6ZZWf1JOHpFrdWYh6qW&#xA;rylYbHtgQtt/yG8vQab5wsF1G7MfnKWOa+c+lyhMU0k4EXw92lI+KuKt69+QvlrWPKOheX2vbu3n&#xA;8uAjS9ViKCdeRDNyoADUqDtTcbYqiPJX5I+W/LcOttd3V1rt/wCYYnt9Vvr9+UkkMgPqJtv8dasS&#xA;SScVY5pv/OL3le11CzN1repahomnztc2eiTyL6CuxBNeIA+LiOfFVLeOKs1svyw0m0/My/8AzAS7&#xA;nbUtQgW2ktDw9BVWOKKq0XnWkA74qln/ACpLQf8AEnmrXvr919Y812F1pt5F+74RR3gQO0Xw15L6&#xA;YpyriqT3n/ONvle68m6f5VfVL5bPTrqa8inHo+ozzgBlb4ONBTbbFWCfnafKVh+bf17Xo9X0hJtP&#xA;KnVLCUrFefuSgi+FOa8v7qSj7r1pWuFWGf4V1/8A6Fj+sfUpfT/xJ+lPsmv1P6n9V9alK8fV2r4b&#xA;4Ev/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2012-06-19T15:33:37-07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-06-19T15:33:37-07:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 1665 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 1665 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>67.843140</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FB7F117407206811808384FED72371DC</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811808384FED72371DC</stEvt:instanceID>
                  <stEvt:when>2012-06-19T15:33:37-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -434.271 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 434.271 li
344.375 434.271 li
344.375 0 li
cp
clp
110.346 193.406 mo
110.346 219.36 87.791 240.283 60.1191 240.283 cv
32.4482 240.283 9.89404 219.36 9.89404 193.406 cv
9.89209 46.8779 li
9.89209 20.9243 32.4463 0 60.1182 0 cv
87.7891 0 110.344 20.9243 110.344 46.877 cv
110.346 193.406 li
46.8521 194.383 mo
46.8521 201.273 52.7422 207.472 60.1191 207.472 cv
67.4961 207.472 73.3862 201.274 73.3862 194.383 cv
73.3843 45.8853 li
73.3843 38.9941 67.4941 32.7964 60.1182 32.7964 cv
52.7412 32.7964 46.8501 38.9941 46.8501 45.8853 cv
46.8521 194.383 li
cp
170.389 207.66 mo
177.762 207.66 183.653 201.491 183.653 194.63 cv
183.653 193.056 183.612 186.096 183.612 177.313 cv
183.612 169.174 181.233 161.923 178.262 158.233 cv
132.572 102.667 li
123.263 90.9243 120.207 75.6982 120.207 63.4263 cv
120.207 54.6431 120.165 48.6362 120.165 47.0942 cv
120.165 21.2764 142.715 .455078 170.39 .455078 cv
198.064 .455078 220.614 21.2764 220.614 47.0942 cv
220.614 74.1914 li
183.655 74.1914 li
183.655 46.1094 li
183.655 39.2471 177.764 33.0791 170.39 33.0791 cv
163.017 33.0791 157.123 39.2471 157.123 46.1094 cv
157.123 47.6821 157.165 54.6431 157.165 63.4263 cv
157.165 71.5645 159.542 78.8154 162.517 82.5063 cv
207.984 137.792 li
217.461 149.57 220.57 164.949 220.57 177.313 cv
220.57 186.096 220.612 192.102 220.612 193.646 cv
220.612 219.462 198.063 240.283 170.389 240.283 cv
142.714 240.283 120.163 219.462 120.163 193.646 cv
120.163 164.054 li
157.121 164.054 li
157.121 194.629 li
157.121 201.491 163.015 207.66 170.389 207.66 cv
280.661 240.283 mo
252.988 240.283 230.436 219.36 230.436 193.406 cv
230.433 6.45313 li
267.392 6.45313 li
267.393 194.383 li
267.393 201.273 273.283 207.472 280.661 207.472 cv
288.037 207.472 293.928 201.274 293.928 194.383 cv
293.925 6.45313 li
330.884 6.45313 li
330.885 193.406 li
330.885 219.36 308.333 240.283 280.661 240.283 cv
false sop
/0 
<<
/Name (PANTONE 1665 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 .678431 1 0 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
ef
17.6558 415.661 mo
11.8706 415.661 li
11.8706 416.039 11.9087 416.375 11.9087 416.711 cv
11.9087 420.072 11.002 421.752 9.14893 421.752 cv
6.1626 421.752 5.70898 418.435 5.70898 411.419 cv
5.70898 403.689 5.89795 399.95 9.07373 399.95 cv
10.9258 399.95 11.7959 401.463 11.7959 404.655 cv
11.7959 405.243 li
17.5049 405.243 li
17.5049 404.655 li
17.5049 398.48 14.6689 395.372 9.18701 395.372 cv
5.74658 395.372 3.21387 396.632 1.88965 398.858 cv
.302734 401.505 0 405.159 0 410.158 cv
0 417.302 .37793 421.794 3.09961 424.399 cv
4.30957 425.575 6.54102 426.457 9.22461 426.457 cv
14.6309 426.457 17.6938 423.099 17.6938 417.048 cv
17.6938 416.585 17.6938 416.124 17.6558 415.661 cv
true sop
0 0 0 1 nzopmsc
f
29.0005 404.403 mo
23.1025 404.403 21.0234 407.597 21.0234 414.989 cv
21.0234 423.182 22.6118 426.457 28.8877 426.457 cv
35.1636 426.457 36.7134 423.182 36.7134 414.989 cv
36.7134 407.681 34.6714 404.403 29.0005 404.403 cv
26.3926 415.241 mo
26.3926 410.2 26.7324 408.101 28.8496 408.101 cv
31.0425 408.101 31.3828 410.158 31.3828 415.241 cv
31.3828 420.534 30.9668 422.805 28.8877 422.805 cv
26.8076 422.805 26.3926 420.534 26.3926 415.241 cv
ef
40.4136 425.995 mo
45.6685 425.995 li
45.6685 395.75 li
40.4136 395.75 li
40.4136 425.995 li
cp
f
49.7505 425.995 mo
55.0059 425.995 li
55.0059 395.75 li
49.7505 395.75 li
49.7505 425.995 li
cp
f
64.1548 412.764 mo
64.1548 412.05 li
64.1548 409.234 64.9868 407.849 66.5747 407.849 cv
68.0488 407.849 68.9185 408.982 68.9185 410.997 cv
68.9185 412.764 li
64.1548 412.764 li
68.9937 418.183 mo
68.9937 418.561 li
68.9937 421.373 68.1245 422.804 66.5366 422.804 cv
64.8345 422.804 64.1548 421.373 64.1548 418.267 cv
64.1548 416.08 li
74.2866 416.08 li
74.2866 412.89 li
74.2866 407.177 71.7915 404.403 66.5747 404.403 cv
60.7896 404.403 58.7104 407.639 58.7104 414.989 cv
58.7104 423.182 60.2988 426.456 66.5747 426.456 cv
71.7534 426.456 74.2866 423.686 74.2866 418.183 cv
68.9937 418.183 li
cp
ef
87.1797 413.31 mo
87.1797 417.889 li
87.1797 421.122 86.4614 422.721 84.9497 422.721 cv
82.9453 422.721 82.7183 420.324 82.7183 415.661 cv
82.7183 415.157 li
82.7183 410.2 82.7563 407.933 84.8735 407.933 cv
86.8013 407.933 87.1797 409.612 87.1797 413.31 cv
92.3965 425.575 mo
92.3965 409.57 li
92.3965 408.311 92.4346 406.798 92.5483 404.907 cv
87.3687 404.907 li
87.1797 406.926 li
86.4233 405.328 84.9116 404.403 82.9834 404.403 cv
81.0176 404.403 79.3916 405.37 78.5596 407.01 cv
77.5386 408.982 77.4634 411.839 77.4634 415.787 cv
77.4634 422.972 78.7114 426.499 82.7563 426.499 cv
84.3823 426.499 85.8184 425.743 87.1035 424.189 cv
87.1035 426.583 li
87.1035 429.44 87.0664 430.826 85.0625 430.826 cv
83.5874 430.826 83.0215 430.154 82.9453 428.181 cv
77.8413 428.181 li
77.8413 428.433 li
77.8413 432.128 80.3364 434.271 84.9116 434.271 cv
90.7334 434.271 92.3965 431.75 92.3965 425.575 cv
ef
101.673 412.764 mo
101.673 412.05 li
101.673 409.234 102.505 407.849 104.093 407.849 cv
105.567 407.849 106.437 408.982 106.437 410.997 cv
106.437 412.764 li
101.673 412.764 li
106.513 418.183 mo
106.513 418.561 li
106.513 421.373 105.643 422.804 104.055 422.804 cv
102.354 422.804 101.673 421.373 101.673 418.267 cv
101.673 416.08 li
111.805 416.08 li
111.805 412.89 li
111.805 407.177 109.31 404.403 104.093 404.403 cv
98.3086 404.403 96.2285 407.639 96.2285 414.989 cv
96.2285 423.182 97.8169 426.456 104.093 426.456 cv
109.271 426.456 111.805 423.686 111.805 418.183 cv
106.513 418.183 li
cp
ef
132.647 404.403 mo
126.75 404.403 124.671 407.597 124.671 414.989 cv
124.671 423.182 126.258 426.457 132.534 426.457 cv
138.81 426.457 140.36 423.182 140.36 414.989 cv
140.36 407.681 138.319 404.403 132.647 404.403 cv
130.039 415.241 mo
130.039 410.2 130.379 408.101 132.497 408.101 cv
134.688 408.101 135.03 410.158 135.03 415.241 cv
135.03 420.534 134.614 422.805 132.534 422.805 cv
130.455 422.805 130.039 420.534 130.039 415.241 cv
ef
144.967 425.995 mo
150.223 425.995 li
150.223 408.395 li
153.587 408.395 li
153.587 404.907 li
150.223 404.907 li
150.223 402.641 li
150.223 400.329 150.639 399.53 152.718 399.53 cv
152.982 399.53 153.285 399.53 153.587 399.573 cv
153.587 395.414 li
152.642 395.33 151.848 395.288 151.13 395.288 cv
145.913 395.288 144.967 396.718 144.967 401.379 cv
144.967 404.907 li
142.283 404.907 li
142.283 408.395 li
144.967 408.395 li
144.967 425.995 li
f
166.176 425.995 mo
181.223 425.995 li
181.223 421.122 li
171.923 421.122 li
171.923 412.303 li
180.165 412.303 li
180.165 407.64 li
171.923 407.64 li
171.923 400.413 li
180.883 400.413 li
180.883 395.75 li
166.176 395.75 li
166.176 425.995 li
cp
f
190.286 425.995 mo
190.286 410.998 li
190.286 409.15 191.192 408.017 192.555 408.017 cv
194.027 408.017 194.332 409.234 194.332 411.587 cv
194.332 425.995 li
199.663 425.995 li
199.663 409.948 li
199.663 406.336 197.848 404.403 194.52 404.403 cv
192.63 404.403 191.154 405.328 190.286 407.094 cv
190.135 404.907 li
184.766 404.907 li
184.956 406.294 184.956 407.556 184.956 408.688 cv
184.956 425.995 li
190.286 425.995 li
f
213.147 413.31 mo
213.147 417.889 li
213.147 421.122 212.43 422.721 210.918 422.721 cv
208.915 422.721 208.687 420.324 208.687 415.661 cv
208.687 415.157 li
208.687 410.2 208.724 407.933 210.843 407.933 cv
212.77 407.933 213.147 409.612 213.147 413.31 cv
218.365 425.575 mo
218.365 409.57 li
218.365 408.311 218.402 406.798 218.516 404.907 cv
213.338 404.907 li
213.147 406.926 li
212.392 405.328 210.881 404.403 208.952 404.403 cv
206.984 404.403 205.359 405.37 204.527 407.01 cv
203.508 408.982 203.431 411.839 203.431 415.787 cv
203.431 422.972 204.679 426.499 208.724 426.499 cv
210.35 426.499 211.788 425.743 213.071 424.189 cv
213.071 426.583 li
213.071 429.44 213.035 430.826 211.03 430.826 cv
209.556 430.826 208.988 430.154 208.915 428.181 cv
203.81 428.181 li
203.81 428.433 li
203.81 432.128 206.305 434.271 210.881 434.271 cv
216.703 434.271 218.365 431.75 218.365 425.575 cv
ef
222.538 425.995 mo
227.869 425.995 li
227.869 404.907 li
222.538 404.907 li
222.538 425.995 li
cp
222.538 400.749 mo
227.869 400.749 li
227.869 395.75 li
222.538 395.75 li
222.538 400.749 li
cp
ef
237.357 425.995 mo
237.357 410.998 li
237.357 409.15 238.265 408.017 239.627 408.017 cv
241.1 408.017 241.402 409.234 241.402 411.587 cv
241.402 425.995 li
246.733 425.995 li
246.733 409.948 li
246.733 406.336 244.92 404.403 241.592 404.403 cv
239.703 404.403 238.227 405.328 237.357 407.094 cv
237.207 404.907 li
231.838 404.907 li
232.026 406.294 232.026 407.556 232.026 408.688 cv
232.026 425.995 li
237.357 425.995 li
f
255.946 412.764 mo
255.946 412.05 li
255.946 409.234 256.778 407.849 258.367 407.849 cv
259.842 407.849 260.711 408.982 260.711 410.997 cv
260.711 412.764 li
255.946 412.764 li
260.787 418.183 mo
260.787 418.561 li
260.787 421.373 259.918 422.804 258.33 422.804 cv
256.628 422.804 255.946 421.373 255.946 418.267 cv
255.946 416.08 li
266.08 416.08 li
266.08 412.89 li
266.08 407.177 263.585 404.403 258.367 404.403 cv
252.583 404.403 250.504 407.639 250.504 414.989 cv
250.504 423.182 252.092 426.456 258.367 426.456 cv
263.547 426.456 266.08 423.686 266.08 418.183 cv
260.787 418.183 li
cp
ef
274.701 412.764 mo
274.701 412.05 li
274.701 409.234 275.533 407.849 277.121 407.849 cv
278.595 407.849 279.465 408.982 279.465 410.997 cv
279.465 412.764 li
274.701 412.764 li
279.54 418.183 mo
279.54 418.561 li
279.54 421.373 278.671 422.804 277.083 422.804 cv
275.381 422.804 274.701 421.373 274.701 418.267 cv
274.701 416.08 li
284.833 416.08 li
284.833 412.89 li
284.833 407.177 282.338 404.403 277.121 404.403 cv
271.336 404.403 269.257 407.639 269.257 414.989 cv
269.257 423.182 270.845 426.456 277.121 426.456 cv
282.3 426.456 284.833 423.686 284.833 418.183 cv
279.54 418.183 li
cp
ef
288.501 425.995 mo
293.832 425.995 li
293.832 414.653 li
293.832 411.082 294.929 409.528 297.989 409.528 cv
298.48 409.528 li
298.48 404.403 li
298.142 404.403 li
295.798 404.403 294.172 405.58 293.492 407.64 cv
293.149 404.865 li
288.501 404.865 li
288.501 425.995 li
f
301.324 425.995 mo
306.655 425.995 li
306.655 404.907 li
301.324 404.907 li
301.324 425.995 li
cp
301.324 400.749 mo
306.655 400.749 li
306.655 395.75 li
301.324 395.75 li
301.324 400.749 li
cp
ef
316.145 425.995 mo
316.145 410.998 li
316.145 409.15 317.052 408.017 318.414 408.017 cv
319.887 408.017 320.189 409.234 320.189 411.587 cv
320.189 425.995 li
325.521 425.995 li
325.521 409.948 li
325.521 406.336 323.707 404.403 320.379 404.403 cv
318.488 404.403 317.014 405.328 316.145 407.094 cv
315.994 404.907 li
310.625 404.907 li
310.813 406.294 310.813 407.556 310.813 408.688 cv
310.813 425.995 li
316.145 425.995 li
f
339.007 413.31 mo
339.007 417.889 li
339.007 421.122 338.288 422.721 336.775 422.721 cv
334.772 422.721 334.546 420.324 334.546 415.661 cv
334.546 415.157 li
334.546 410.2 334.584 407.933 336.699 407.933 cv
338.629 407.933 339.007 409.612 339.007 413.31 cv
344.224 425.575 mo
344.224 409.57 li
344.224 408.311 344.262 406.798 344.375 404.907 cv
339.195 404.907 li
339.007 406.926 li
338.251 405.328 336.737 404.403 334.81 404.403 cv
332.844 404.403 331.219 405.37 330.387 407.01 cv
329.365 408.982 329.29 411.839 329.29 415.787 cv
329.29 422.972 330.538 426.499 334.584 426.499 cv
336.209 426.499 337.646 425.743 338.931 424.189 cv
338.931 426.583 li
338.931 429.44 338.893 430.826 336.89 430.826 cv
335.415 430.826 334.848 430.154 334.772 428.181 cv
329.669 428.181 li
329.669 428.433 li
329.669 432.128 332.164 434.271 336.737 434.271 cv
342.561 434.271 344.224 431.75 344.224 425.575 cv
ef
174.531 367.66 mo
148.438 367.66 99.291 365.946 99.291 365.946 cv
98.3872 365.905 98.3862 365.066 99.29 365.024 cv
99.29 365.024 147.957 363.311 174.531 363.311 cv
201.111 363.311 244.373 365.024 244.373 365.024 cv
245.263 365.071 245.279 365.899 244.373 365.946 cv
244.373 365.946 200.631 367.66 174.531 367.66 cv
false sop
1 /0 /CSD get_res sepcs
1 sep
f
19.5308 271.322 mo
19.5308 288.85 li
19.4741 291.543 19.8325 293.718 20.6069 295.372 cv
21.3843 297.025 22.9175 297.876 25.2124 297.923 cv
27.0698 297.876 28.4019 297.352 29.2095 296.35 cv
30.0151 295.347 30.5063 294.151 30.6821 292.76 cv
30.8569 291.369 30.9272 290.065 30.8921 288.85 cv
30.8921 271.322 li
30.9272 270.124 30.8589 268.933 30.687 267.751 cv
30.5151 266.569 30.0366 265.582 29.2476 264.79 cv
28.4604 263.999 27.1577 263.586 25.3423 263.556 cv
23.4409 263.614 22.0776 264.139 21.2524 265.126 cv
20.4272 266.114 19.9253 267.213 19.7456 268.423 cv
19.5659 269.633 19.4946 270.599 19.5308 271.322 cv
cp
8.82178 286.581 mo
8.82178 273.042 li
8.78857 270.444 9.06787 267.955 9.6626 265.575 cv
10.2573 263.193 11.3696 261.031 13.0005 259.088 cv
14.5337 257.354 16.3481 256.113 18.4448 255.368 cv
20.5405 254.621 22.7319 254.259 25.0151 254.276 cv
27.4839 254.252 29.7964 254.609 31.9526 255.351 cv
34.1108 256.09 35.9995 257.359 37.6177 259.156 cv
38.9634 260.622 39.9946 262.588 40.7114 265.051 cv
41.4292 267.514 41.7905 270.75 41.7974 274.76 cv
41.7974 286.993 li
41.814 290.504 41.5034 293.468 40.8667 295.886 cv
40.23 298.305 39.1694 300.358 37.6831 302.047 cv
36.3276 303.537 34.8589 304.643 33.2769 305.363 cv
31.6938 306.085 30.1626 306.555 28.6821 306.771 cv
27.2007 306.988 25.9351 307.087 24.8843 307.064 cv
23.2671 307.095 21.4683 306.835 19.4897 306.285 cv
17.5112 305.735 15.6587 304.712 13.9341 303.215 cv
12.2095 301.719 10.9194 299.564 10.062 296.755 cv
9.5542 294.904 9.21631 293.036 9.05029 291.151 cv
8.88428 289.269 8.80811 287.745 8.82178 286.581 cv
cp
221.709 268.455 mo
220.928 266.979 219.842 265.723 218.457 264.686 cv
216.969 263.573 215.248 262.995 213.314 262.947 cv
211.494 262.999 210.111 263.384 209.242 264.159 cv
208.414 264.896 207.881 265.683 207.674 266.524 cv
207.488 267.282 207.389 267.828 207.432 268.122 cv
207.502 269.94 208.176 271.339 209.473 272.302 cv
210.717 273.229 212.117 273.949 213.68 274.471 cv
219.748 276.806 li
221.205 277.353 222.67 278.122 224.143 279.113 cv
225.604 280.1 226.824 281.277 227.793 282.63 cv
228.133 283.029 228.645 283.987 229.318 285.536 cv
229.971 287.036 230.34 288.97 230.414 291.341 cv
230.455 292.13 230.371 293.282 230.164 294.797 cv
229.961 296.293 229.387 297.912 228.436 299.658 cv
227.498 301.375 225.943 302.968 223.748 304.437 cv
222.311 305.31 220.76 305.943 219.08 306.344 cv
217.389 306.747 215.922 306.943 214.686 306.938 cv
210.564 307.018 207.145 306.329 204.424 304.89 cv
201.764 303.483 199.398 300.884 197.342 297.051 cv
205.035 291.675 li
205.928 293.715 207.131 295.33 208.645 296.51 cv
210.238 297.755 212.102 298.385 214.225 298.406 cv
215.061 298.422 215.982 298.263 216.988 297.938 cv
218.021 297.603 218.92 296.999 219.68 296.135 cv
220.467 295.242 220.861 293.996 220.898 292.437 cv
220.92 291.168 220.654 290.11 220.076 289.29 cv
219.502 288.478 218.523 287.738 217.17 287.062 cv
215.832 286.39 213.969 285.575 211.586 284.618 cv
209.152 283.676 206.924 282.575 204.904 281.317 cv
202.906 280.072 201.303 278.446 200.096 276.437 cv
198.898 274.444 198.273 271.833 198.242 268.579 cv
198.273 264.407 199.619 261.062 202.264 258.508 cv
204.902 255.959 208.66 254.629 213.578 254.555 cv
217.043 254.555 220.039 255.3 222.582 256.784 cv
225.066 258.235 227.252 260.397 229.141 263.283 cv
221.709 268.455 li
cp
318.754 338.294 mo
318.754 330.783 li
313.281 319.491 li
317.484 319.491 li
320.734 326.514 li
323.984 319.491 li
328.162 319.491 li
322.713 330.783 li
322.713 338.294 li
318.754 338.294 li
cp
297.945 338.294 mo
297.945 323.118 li
293.424 323.118 li
293.424 319.491 li
306.424 319.491 li
306.424 323.118 li
301.904 323.118 li
301.904 338.294 li
297.945 338.294 li
cp
278.686 338.294 mo
278.686 336.52 li
278.686 336.52 li
278.686 321.138 li
278.686 321.138 li
278.686 319.491 li
282.645 319.491 li
282.645 321.138 li
282.645 321.138 li
282.645 336.52 li
282.645 336.52 li
282.645 338.294 li
278.686 338.294 li
cp
256.582 334.977 mo
259.66 332.688 li
260.164 333.571 260.691 334.227 261.24 334.651 cv
261.789 335.076 262.42 335.288 263.131 335.285 cv
263.824 335.272 264.369 335.085 264.768 334.719 cv
265.168 334.354 265.371 333.882 265.379 333.305 cv
265.391 332.288 264.732 331.491 263.4 330.912 cv
260.951 329.852 li
260.201 329.517 259.543 329.124 258.977 328.675 cv
257.727 327.628 257.1 326.222 257.096 324.455 cv
257.113 322.776 257.633 321.453 258.652 320.484 cv
259.674 319.517 261.084 319.022 262.887 319.002 cv
265.494 319.015 267.439 320.121 268.727 322.32 cv
265.893 324.455 li
264.951 323.045 263.877 322.342 262.668 322.347 cv
262.049 322.355 261.566 322.518 261.219 322.832 cv
260.871 323.146 260.693 323.559 260.688 324.069 cv
260.688 324.541 260.865 324.963 261.223 325.333 cv
261.578 325.705 262.117 326.056 262.838 326.385 cv
265.35 327.488 li
266.111 327.825 266.766 328.212 267.311 328.648 cv
268.535 329.686 269.164 331.135 269.191 332.996 cv
269.168 334.733 268.605 336.126 267.506 337.172 cv
266.406 338.219 264.914 338.756 263.033 338.783 cv
260.223 338.774 258.072 337.506 256.582 334.977 cv
cp
214.598 338.294 mo
214.598 319.491 li
226.645 319.491 li
226.645 323.118 li
218.557 323.118 li
218.557 326.488 li
224.08 326.488 li
224.08 330.114 li
218.557 330.114 li
218.557 334.668 li
227.158 334.668 li
227.158 338.294 li
214.598 338.294 li
cp
200.594 338.294 mo
196.416 338.294 li
190.941 319.491 li
194.9 319.491 li
198.518 332.635 li
202.109 319.491 li
206.068 319.491 li
200.594 338.294 li
cp
235.59 319.473 mo
240.086 319.473 li
241.281 319.462 242.336 319.505 243.248 319.602 cv
244.16 319.699 244.939 319.922 245.584 320.271 cv
246.395 320.727 247.01 321.358 247.436 322.168 cv
247.861 322.977 248.074 323.931 248.078 325.029 cv
248.074 326.297 247.793 327.363 247.236 328.231 cv
246.682 329.101 245.869 329.73 244.803 330.122 cv
248.713 338.276 li
244.338 338.276 li
240.869 330.611 li
239.549 330.611 li
239.549 338.276 li
235.59 338.276 li
235.59 319.473 li
cp
239.549 322.663 mo
239.549 327.602 li
240.648 327.602 li
241.84 327.631 242.719 327.482 243.281 327.158 cv
243.844 326.834 244.123 326.158 244.119 325.132 cv
244.123 324.106 243.844 323.431 243.281 323.106 cv
242.719 322.782 241.84 322.635 240.648 322.663 cv
239.549 322.663 li
cp
177.914 338.294 mo
177.914 336.52 li
177.914 336.52 li
177.914 321.138 li
177.914 321.138 li
177.914 319.491 li
181.873 319.491 li
181.873 321.138 li
181.873 321.138 li
181.873 336.52 li
181.873 336.52 li
181.873 338.294 li
177.914 338.294 li
cp
154.168 338.294 mo
154.168 319.491 li
157.98 319.491 li
163.699 330.912 li
163.625 319.491 li
167.072 319.491 li
167.072 338.294 li
163.821 338.294 li
157.541 325.587 li
157.614 338.294 li
154.168 338.294 li
cp
134.865 319.491 mo
134.865 331.246 li
134.839 332.602 134.99 333.589 135.317 334.211 cv
135.645 334.833 136.309 335.139 137.309 335.131 cv
138.32 335.138 138.986 334.828 139.31 334.201 cv
139.632 333.575 139.781 332.59 139.752 331.246 cv
139.752 319.491 li
143.711 319.491 li
143.711 332.198 li
143.716 334.407 143.193 336.054 142.141 337.137 cv
141.089 338.221 139.479 338.761 137.309 338.758 cv
133.012 338.771 130.878 336.584 130.906 332.198 cv
130.906 319.491 li
134.865 319.491 li
cp
272.738 287.834 mo
269.928 288.24 267.773 289.109 266.277 290.44 cv
264.781 291.772 264.025 293.349 264.012 295.168 cv
264.037 296.499 264.402 297.555 265.111 298.339 cv
265.818 299.123 266.719 299.523 267.811 299.542 cv
269.326 299.539 270.523 298.905 271.398 297.642 cv
272.273 296.376 272.721 294.497 272.738 292.006 cv
272.738 287.834 li
cp
274.072 301.964 mo
272.459 303.576 270.854 304.776 269.258 305.563 cv
267.662 306.353 265.957 306.745 264.145 306.742 cv
261.381 306.7 259.199 305.792 257.6 304.017 cv
256.002 302.243 255.186 299.854 255.152 296.85 cv
255.152 288.832 261.014 284.01 272.738 282.383 cv
272.738 279.558 li
272.729 278.492 272.316 277.627 271.506 276.958 cv
270.697 276.289 269.553 275.943 268.076 275.923 cv
265.477 275.958 262.746 277.168 259.881 279.558 cv
255.551 273.972 li
259.238 270.843 263.59 269.295 268.609 269.329 cv
277.469 269.362 281.932 273.468 281.998 281.643 cv
281.998 297.052 li
282.021 298.229 282.576 298.971 283.664 299.272 cv
283.664 306.271 li
283.119 306.326 282.609 306.35 282.133 306.339 cv
278.379 306.36 275.693 304.903 274.072 301.964 cv
cp
316.186 284.67 mo
324.846 284.67 li
324.846 281.574 li
324.836 277.593 323.391 275.598 320.516 275.587 cv
319.199 275.591 318.152 276.085 317.377 277.067 cv
316.602 278.047 316.203 279.483 316.186 281.373 cv
316.186 284.67 li
cp
332.84 304.386 mo
328.865 306.079 325.09 306.933 321.516 306.943 cv
316.969 306.925 313.504 305.667 311.123 303.166 cv
308.74 300.667 307.541 297.036 307.525 292.274 cv
307.525 283.795 li
307.543 279.071 308.641 275.482 310.814 273.028 cv
312.988 270.575 316.135 269.343 320.25 269.328 cv
324.119 269.366 327.141 270.518 329.318 272.786 cv
331.496 275.052 332.602 278.206 332.641 282.248 cv
332.641 289.985 li
316.186 289.985 li
316.186 293.081 li
316.197 295.149 316.807 296.75 318.01 297.885 cv
319.213 299.018 320.936 299.593 323.182 299.608 cv
325.557 299.608 328.398 298.801 331.709 297.187 cv
332.84 304.386 li
cp
298.793 291.438 mo
298.738 294.163 299.084 296.098 299.826 297.241 cv
300.572 298.385 302.047 298.94 304.256 298.907 cv
305.523 298.84 li
305.523 306.78 li
304.102 306.893 302.814 306.938 301.658 306.914 cv
297.16 306.96 294 306.045 292.174 304.172 cv
290.35 302.3 289.469 299.198 289.533 294.87 cv
289.533 277.172 li
284.338 277.172 li
284.338 270.376 li
289.533 270.376 li
289.533 257.522 li
298.793 257.522 li
298.793 270.376 li
305.256 270.376 li
305.256 277.172 li
298.793 277.172 li
298.793 291.438 li
cp
46.9585 306.234 mo
46.9585 270.454 li
54.9331 270.454 li
55.5444 274.997 li
56.8354 271.411 59.6206 269.577 63.8999 269.493 cv
64.5122 269.493 li
64.5122 278.214 li
63.6284 278.214 li
60.9097 278.197 58.9761 278.892 57.8296 280.297 cv
56.6802 281.7 56.1235 283.913 56.1558 286.935 cv
56.1558 306.234 li
46.9585 306.234 li
cp
134.628 291.305 mo
134.627 293.034 134.695 294.345 134.824 295.521 cv
134.876 296.008 134.968 296.454 135.085 296.87 cv
135.322 297.565 li
135.753 298.663 136.349 299.347 137.106 299.621 cv
138 299.9 li
138.415 300.006 138.748 300.047 139 300.023 cv
139.682 300.022 140.048 299.978 140.383 299.897 cv
141.156 299.732 141.75 299.389 142.164 298.868 cv
142.401 298.569 142.603 298.195 142.77 297.745 cv
143.093 296.999 143.294 296.131 143.375 295.143 cv
143.488 293.741 143.537 292.293 143.488 290.799 cv
143.488 287.571 li
143.5 286.772 143.506 286.003 143.488 285.267 cv
143.515 283.503 143.454 281.929 143.302 280.545 cv
143.149 279.16 142.744 278.065 142.083 277.263 cv
141.421 276.46 140.341 276.05 138.841 276.033 cv
137.429 276.066 136.422 276.539 135.822 277.452 cv
135.221 278.366 134.863 279.521 134.75 280.922 cv
134.687 281.704 134.64 282.5 134.628 283.311 cv
134.611 283.715 134.617 284.11 134.628 284.493 cv
134.628 291.305 li
cp
125.919 287.357 mo
125.886 285.629 125.953 283.741 126.119 281.693 cv
126.285 279.646 126.75 277.686 127.513 275.813 cv
128.279 273.941 129.541 272.403 131.302 271.2 cv
133.062 269.996 135.521 269.374 138.677 269.333 cv
139.931 269.306 141.25 269.397 142.634 269.61 cv
144.019 269.822 145.361 270.32 146.662 271.104 cv
147.962 271.886 149.113 273.118 150.116 274.801 cv
150.917 276.227 151.467 278.017 151.765 280.168 cv
152.064 282.319 152.206 284.986 152.189 288.168 cv
152.256 291.792 152.091 294.788 151.695 297.155 cv
151.298 299.522 150.269 301.59 148.607 303.357 cv
148.102 304 147.181 304.706 145.841 305.477 cv
144.504 306.245 142.388 306.664 139.495 306.733 cv
138.429 306.755 137.167 306.679 135.708 306.506 cv
134.25 306.332 132.957 305.936 131.828 305.315 cv
129.994 304.192 128.654 302.785 127.809 301.095 cv
126.965 299.405 126.431 297.418 126.208 295.134 cv
125.986 292.852 125.888 290.259 125.919 287.357 cv
cp
156.291 306.234 mo
156.291 270.454 li
164.798 270.454 li
164.798 277.069 li
166.011 275.08 167.35 273.372 169.011 271.948 cv
170.673 270.523 172.65 269.777 174.943 269.712 cv
177.813 269.789 179.869 270.482 181.115 271.789 cv
182.359 273.098 183.117 274.556 183.389 276.162 cv
183.66 277.771 183.768 279.063 183.713 280.04 cv
183.713 306.234 li
174.484 306.234 li
174.484 282.876 li
174.504 282.37 174.473 281.739 174.387 280.986 cv
174.303 280.231 174.049 279.557 173.621 278.96 cv
173.197 278.364 172.48 278.05 171.474 278.016 cv
170.191 278.047 169.093 278.422 168.177 279.138 cv
167.263 279.854 166.376 280.718 165.519 281.728 cv
165.519 306.234 li
156.291 306.234 li
cp
112.554 294.748 mo
112.554 281.392 li
112.429 280.136 112.212 279.121 111.9 278.33 cv
111.341 276.916 110.217 276.214 108.529 276.226 cv
106.704 276.211 105.582 277.146 105.166 279.033 cv
104.75 280.918 104.58 283.839 104.656 287.793 cv
104.656 288.599 li
104.598 292.336 104.817 295.153 105.31 297.049 cv
105.804 298.944 106.921 299.896 108.665 299.899 cv
110.876 299.908 112.173 298.234 112.554 294.748 cv
cp
95.1714 314.351 mo
100.943 310.79 li
101.385 311.468 102.042 312.182 102.917 312.929 cv
103.79 313.676 105.011 314.08 106.582 314.144 cv
107.408 314.164 108.373 313.951 109.474 313.502 cv
110.576 313.054 111.423 312.239 112.02 311.063 cv
112.429 310.015 112.609 308.622 112.552 306.889 cv
112.554 303.31 li
110.255 305.996 107.634 307.087 104.724 307.075 cv
101.148 307.08 98.6538 305.569 97.2437 302.546 cv
95.8325 299.521 95.1558 294.955 95.2134 288.848 cv
95.1802 285.496 95.2798 282.587 95.5112 280.118 cv
95.7417 277.651 96.2983 275.58 97.1831 273.909 cv
97.9487 272.504 99.0181 271.418 100.393 270.647 cv
101.769 269.878 103.349 269.487 105.132 269.476 cv
106.877 269.485 108.832 270.18 109.767 270.657 cv
110.454 271.006 111.822 271.849 112.554 273.12 cv
112.554 270.335 li
121.578 270.335 li
121.578 302.264 li
121.617 304.041 121.535 305.954 121.332 308.003 cv
121.129 310.052 120.927 312 120.044 313.85 cv
119.162 315.699 117.71 317.214 115.691 318.394 cv
113.669 319.572 110.854 320.183 107.244 320.222 cv
104.605 320.19 102.447 319.847 100.769 319.19 cv
99.0913 318.534 97.8062 317.757 96.9175 316.854 cv
96.0269 315.953 95.4458 315.118 95.1714 314.351 cv
cp
245.535 291.438 mo
245.48 294.163 245.826 296.098 246.568 297.241 cv
247.313 298.385 248.789 298.94 251 298.907 cv
252.266 298.84 li
252.266 306.78 li
250.844 306.893 249.555 306.938 248.4 306.914 cv
243.902 306.96 240.74 306.045 238.916 304.172 cv
237.092 302.3 236.211 299.198 236.275 294.87 cv
236.275 277.172 li
231.08 277.172 li
231.08 270.376 li
236.275 270.376 li
236.275 257.522 li
245.535 257.522 li
245.535 270.376 li
251.998 270.376 li
251.998 277.172 li
245.535 277.172 li
245.535 291.438 li
cp
75.0142 284.67 mo
83.6733 284.67 li
83.6733 281.574 li
83.6636 277.593 82.2202 275.598 79.3452 275.587 cv
78.0269 275.591 76.98 276.085 76.2046 277.067 cv
75.4292 278.047 75.0327 279.483 75.0142 281.373 cv
75.0142 284.67 li
cp
91.6685 304.386 mo
87.6929 306.079 83.9194 306.933 80.3433 306.943 cv
75.7964 306.925 72.3325 305.667 69.9507 303.166 cv
67.5698 300.667 66.3696 297.036 66.353 292.274 cv
66.353 283.795 li
66.3716 279.071 67.4683 275.482 69.6431 273.028 cv
71.8179 270.575 74.9624 269.343 79.0776 269.328 cv
82.9458 269.366 85.9683 270.518 88.146 272.786 cv
90.3237 275.052 91.4312 278.206 91.4683 282.248 cv
91.4683 289.985 li
75.0142 289.985 li
75.0142 293.081 li
75.0269 295.149 75.6343 296.75 76.8374 297.885 cv
78.0415 299.018 79.7642 299.593 82.0093 299.608 cv
84.3843 299.608 87.228 298.801 90.5366 297.187 cv
91.6685 304.386 li
cp
0 0 0 1 cmyk
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Heather Miller) ()
%%Title: (coe_v_spot.eps)
%%CreationDate: 6/19/12 3:33 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&q-GO4dkH)cJ9q82`<ghl\t'_0LZPn5'buu[!WqfQg#!n7g.t_'::f\H@DD^<NpF.gdci#WWB$q'R4Pdr>-Eq:Ha3P,Q+3j[
%EAaAL)gO62;mf^_\^NO?pUodeo9u)$MYXWNca(^Tp<1c`^"#@3[U8=5?E)asGC(k1@^Ge!)+t`gZ]EX+ZX.Km^M<_WWh^@\<40d+
%:S[`3o^h`\n#jTMVM<(d,C06^=*q-S`5uXCc9L`G6-39ChhM4uj,2?)l)3-OJ+7DT-\\>ej.f4Oc/l8$dQCJ[*FA2-Q/M&>P0W/`
%6W`:tI.;JNL'J:*rhXL.lgKg>^K^"_g9(6t2X51lo2Y+*p.45"R!@Is&=qFf3mCjC:@P24flT-T><2U55-p].-]2asDCG%VA]41c
%K0BrNY5d%Ns(<X,;PLZ^hlTp.RL@sN=l]M^hGhBh'`+:_3W3[C],.S=+3$f?A^P]4gTU8s.jFF`S$dGEK0jOpIa\Ye[I/CT&#@Tj
%rZLh`EKg+so6=+/]8e\?dLM:!p""EcP)OP:aJo54%P_X!HJI#P\<\Aa)`^5h]LS7eVTiQpfE?+S%s)dnP]5Dp]Jj"ECh3@^m;Cra
%:e+iMS+IL7I+jha>Pp]+,ll`hf3<(@5aA05M9;(Ti>M%@qu[54<GMTC<5jZoRMe%m/4H4c<k6eb6*[9(SF+i+)__3HYP2Kt"b(P6
%J*1kIgTp<mWPhGP*WPCc51Oe'WpB:+:+1TBQc!";*.H)mYZ<B3[;rfmQ+(I1=N@_ONWhZB[Uil!bJIHX$%HHe;@.-(9)*"tKMP2d
%XAc7\dqUb,_mc[HHsWr'GNakIGj0HdO7Xm8ae.mF/;_-H(;ba>Ynk3p+f3Kr,5dFC&0h%3E-"_"G7c2"NSb9kr/E:*4OKH,,5dF>
%j'O?+R'9AD:"hh_6FcMDeu;]TN6`#pSDooFO^\WHdl/`:FS'\AFDS=.*''W9?A&5b/VFXa@nUnJ.Fdu-SMC&#[1GMc_\=Wn?%``<
%j#;XOc9M<*,KCGpNO9<]r(Ugd;@1;mm2p]91k6h6oY]jNNfRWiCJh`a]MQ]6k],[*>dRkl17p4'KE#="KT8tX6AKJXW9I66%tA(@
%9&Bmr`<gr/Iq'LP/sbR_c$>(RNqP`;S's'h'i&U*E_7dF(-#[j3MgtuUSCqhrDL;eaSCd6f]^tm(@Rg&:>_tqkmndpj\/:kFNu=Q
%BF@i26g7Zk4+/KBjP24EMrRCU5,E-lpO`D6D*^OZe&<kZ/;neh&TLM(gB&=AXF.[n?eR,\;cOS'K7Bk"<8!>0d3mp,rB\DV5N4?p
%M']K2=sEsoT7!5Z(Ot\1C!uIIann!L:SC%GLqiS[=JXin?htF/QHQX'r1uWC$N2UVdN?I-U%02d%Y)rQV;M)-qA8)=N09=*Q5.>P
%[A9-GphW4iKoufCXAY`q<Y>([P#g"g`KH,YiLa/fR47G*G\33tb:FDls'$cW>0rq.<`2MG7\9Z.g@aAAe5?Wa$jH4JobX4^aXGec
%TP(5.4KZCtQ(bA=rKm.Dl4TPkBUN45J.lpR1rV/cCW)D2LQ!(jUj9@6hC[`Ch&):5QMt[$7ATE&JQ1`u$@CMKM0MDa91G(7mN?EY
%e0*'Dk3:M9(-VXp\9WoJ/UY#NO75'AQP3K_24QXK[fC=_`/G+62>BE0D7<eYF?%4njP?m>_pX$p@3"Oi]Y`DM*H_p1HN-F8Q)YO*
%hK0P2(HI_?Hgn"&2k&@Q-&oQS<iZC8(i2c_CTR8^(Y6H9bT\n'L\66Ckh:Y^1j`9'IPg:ZZS6DH8S%0VD8grCl*We<XA93Vr*qbG
%'$ao*!m;[8oNa,<C==LMJHqLN*'cOmP"^$<Sl2/@&hPX&&P>lG:b(ZAU5;8KK@D<Bn:$BW03N[emM]'Qd&1bacJB%tjZ,QI5q(9h
%H.6o4W3P>PWJ""PV--ge=e`,0nc>:9=i,O2*dKe;]o:ML*'/"eTJVT_hH(nJ[SHf_E%Z3jN,pYD&ifWNkKG:Bi<qDU_AchPSD+^K
%R\6I'A"2JH84?m":Lnm6BN%^+biH=jpAh<uZG^cI03Pr+0.Q*@1ADoWoYg%bOnB?qh,#p("H1^#`X'#$AjZ.WNR7`BEuFEk>;U]^
%hUY)[^HG-$K=H)%]u;]8E#\6.19Q8+3c^(XjZptSkh>U4p'Q8S`,,g,BELD&Nq8RmD[Tfs;%V]/p0>ZS2uV1&5'/I"&S<OS.G..:
%&'Ac>RI$6Wn812Ia8k"]0>9:Mhk"a&PTWOQ.(,n\"6B.u[Ys#9\Yn4(`:b>)SCij2U%A($(>D0ILWXI.[NkjN(A1*f>f?a6E&KcA
%4&g+p8SoDa9<p_9Q:G*NZ,(Fo_lRg,aXl*T+d1O%Ju>u1&lp$h`b&>2,_(5Z#Dt<E^QZSWoKbM'n0D<5ZUFgWPULc-&9F_Qh7_\M
%kg=E^Z&L.E<MoBH-)t1P$&\J_H0HF)#EDXE0aC]K[!Vb!")i(#8kpA@O(VmB[AjH$D4ou&.OF%jQ^i.oM8aj9bI[oilVWpU@i"_(
%d3PHZ(@E+E74h%L0%hW$>&]/39D1A'E2_%(r-[tB*N`;R-(ujp3Ia,+7'TSkD+3UM'_6]TK`BQ=Y)F!75[#FOO!"r^(2_C7nt]h/
%P:1e2T$3ZC8L=dZ$'g>m,#n.*6QK8YrMrhY7L;6AbX"rl&pK.B;gQVUkK&F?M^7<I(GT?#<,&Hg5BJ`m-n$r</f"[<T"mA:cZ4F2
%Ip=IL`n)LVW&D>hh@[&%jeA6q,07`dLg#*"7#^!IIoRtar?GC,>g*/*;R,4/d3NJMrMrh9^eu/6CKsO3Ro5BN/:"^U^ZZO7/ZG\3
%PtU":291oa^[aT4'oB'XWM-:5>#OSjs"13@r=M7&g,?JDJ!*Sa[&(ig/@%Yh*hBYR0G(@K<_T#8GkoKWW>JVRqS]n"1dl97:S0Ud
%kGIi)3Tu]ZEb*OR3PS[-Q)p\.s('*dras><b?I0A=/"\TVW"AH)t#,'[(q=m[T;H$1cfYAMK_H>^%HTbb*,2)\om4E'[93hcA8<$
%IsXW3,[,>m2`\AnZJY$OG6G\82m-ftbF!nHQ4I;nA9@Y4Lk'h?/KM2V&@6J[VHSVS4/dBHB$"W-BPU>*<"-dUB?ZOR/atpIC6NL[
%N$+0m8f_KNM0n]#%:kjVVZ3W_VAClP^)>N5\))dW%k#8+.O+^N</19I^/tp=o!lQfRqRIk=R28GDqek2TPjf&-J!ApD0nDjP`>!\
%_>=GL.#?3TfZ3)>AHgKU!8VGagOAN+I+OkSr=/j7?V]gEJcB3?Si3[h/2V8P/Fp4$X<6:ESa!g(_6S7gH.UC_h!5agV:[AE8Q8$]
%@c*$/5=Y##_<CPWXGaPbjF+XU0N\^3hB@m+e#6G8'Umt9ru"/@G,PPn_A+N7B1+LpSG7&,OmU0YP_q6hnCX%f&*NpbEF*3l;1ADY
%"RS:c$i?Gd$g)s7mRD8`&&p_Ve0rJB163=%5c4$VA])9Bs/T-]=rjt'/RULONBDJZirQd2`>-+1Lc:Y7AT!TPlB$E-XI&j.`5qs!
%eihX(VQ[?6^`%^ODc`-Phdhbjrm;5E^MI7Q^b,`X^Z;KuQ,qA0@8`E2;qsHMI<f$b9\Bn_br[E>Q3[n_-,qa4G)Q5<N#qRrfA9KD
%+_$amOL#!AhNfpr=]/i1p5I,HhDBf5neeo,@if(oeJE\ZhF2>8En]bL;Yc56>%E!rqSbn7?X:SD8MBd4G-\H?5%FSuRV2)'Y4nS`
%6_cQ39'36ZXq5=sJG#H8q"!OJ<].9Irm-q3AR32//Pf$F9^8D.`&EnnO0@M$N$dX:ZmL9T[%UkHEiG@[qXC82bsY_]*5\;2aB=(R
%Tk\0srYG4$<QJ:q'AW3*>-.4;88BOI)f:Yc;L-%P/=&+%g1&XMB/%=TI?2:&oc0__BkrM:JD9.(:n2)'Y4C\+=b(spm4/+SIu"9X
%1g(4$(!JdB4]mpAa6R,;pag4>-_(K@7c's9j5Z"CBtjh8_b]0eDioO8s)Z*sCH4%[7R139o)rB[qg=fuj)5ntKit!]/7UZb1VD`Y
%))L_)9@pof:/MG/=l'o\MW:?]n8IkRUf=n^!qR;74g3PsUW2gIgiSir$TLeLWWdNdB\;4"TL4*rIc>Dm=sl")APSq$_i`k5m$m]F
%0]a3pgp@9\>RHJUS.XshA[A&XE>D6.F]sFAVbMdX:=>J$qA-GS6\r+c3E._HMmWG_K*)D1fN8\tS4BephCa4OkF'aNj^dWqE;Xb5
%PB!_03$^0;E)FhU>2t\N#WZhX4DrUmE\ube^JUN5hk:`S\W4md.6Y#l.@A1d=e3_VI"tY&Qkqg,7Z$/`;[^R5c$'lF6oNI+rhaa;
%";^NE1+su>bXhVe4]8>tk<_^/hEPk2cF7$;H?"gS3p%V^AIG%<*!)n[JjnR[k!F:9Kdl-cAW)Md.TuMBUS&1NZ@V[DnA2%AEUKD)
%4piXAZ9ljH,o4J1QjLVcI-+[]j5qH'-&`o?)k8hmr)A8`*.%`s3.<bq&g\9mJr=>YeCGC57n@8bk;%2%>*@6-RC=\\!]F552)"=D
%k!1#m(/_tG^7\u0>XG6OcJK0oJWH*h1XTZ_cE/[\"eBWAatlcaCS".%Thc58S;+S]`&b>3EmBHb1]/3T1!r=q8pQ-6=d2dHp#();
%WJ/kF]VaB1?BThr/H<5&7,OkDX1I.;G^bulL!7$!/BQK%nC_AQhBR%@QV>[CdUt27:^0uLf*M1I3Jb[Z$:MmSX+3N;0Y->Mb:HMC
%eu,g-]Nl-IaBPDpL;(^mKXX4K*q>ZMTIgh6;Uu,^neH]X@R$kl$3JL!D#e'G\.+OBbRKn$C5#5T_KEdl-1s6>d%;qMKioU!1NH+i
%B*>tH\@J3Wl@]g$FM8<%33NLL>E<57.@"k/b[hI=-Bqp45p8\kJb-=S<0:?DmIRdu4*Fn-b%Hph[5A$7-/:\`g9X@@bhlggB-X)?
%Z!^IH!7)>h+!3.iPZ!mnOg])Q'KQS]28N!h?=:#ndZSH=iFf8D_p@]c`qpL]G:n$VB3@+m%FFpZD+tsqQTW;D:f*s#4t?\PJiD-b
%2jNM8G`]o_7Z]ZBC(^'VnL)6!9$:D+gL")F3ep\Tr<P\NP^3J66D>)ec$U^^7e4F:i'$X,[#DN`m!"T[=J/A%+#/\FP=#4=pe1NX
%b9HsdqEHg^A.`17^S.ou/F$*ujXST/-8A6iCR(j]C6?gXnQPITmdXAFl<,Bjg*6@C[(WIQ\gdrdC@aOY\$1NVVQsBI@Tnp(U_]rI
%UaPgj\Xglb#gP<V_o2-t891d]4BH,t'Y,S_l=Olo-;Q&?g*Jbq)>G4V-I40+=ucI7M+?YQM$%]]SQR74[S_O,;5tJ<6oA54E=M(&
%eu7rn)OO0?=bBRX&hQt[6KK`r%WL`cPI^=]j"Lr-`DW_%>N;?T<"sF[27_3m8fUV1Xsk27dDDRu-M;q\;M3[)>WPM[AJP9L;^GQ+
%p'gUeW5h5/i3UH#i]V9WJ7sFo3aCP2=q!_rQATd]$F]DZr(UUr[IG\oS&=Nu,,eL3D*BT(KF[,;,TSV;+FuO&c)?l$E-(l[qm&nJ
%@Z09,Ng@,nk<W5EPQj+-$I$4ORtJ-XV'`<AW7"cS+"<74YW"-pDKu`Ra:4KZHlUX*7UHAs_D.Ma`<i(9B4'.9@Cf;fR++mm,Nlcu
%Zb)$1bpC&M[\u,T-2HJ80tgAVZG\j2Xi"U2N]C\GZ"K!(k+4/@%7`&F`UW%Q>F^k%jG-j+(%SeI`suq_5caB\3%#!7T`1<0#pa43
%aXc?;dufR>prM]9d8;o.'7Fk9Ku8phF8X*(U2TW_)un-!5-@>b5?;/M2j]%gDeH$RV`gcEP&4m>%!d5[8hQ(@EGD0c>'e3bVj,=%
%0eRP3;_A)"O7=r&)*fK1V-U*P0N(;3(giU!]/9+a-eMHT53MndeUhfJc=4*-HGsC*kbh>U$]e3OnH6F!]'X,,SNaAEP:(#9r_J:j
%77P!U*jq\bUP/r+`K&"QoC8XP"-9n&m@V[Al`D1#'jfY@p%V+\rt-nBl`JdqI%6JLYAsCCPTD[\Wme7qXjNOICTh+6[Z4S!iU0M1
%,C\Ke2snUf"np%*UX8Cl'!1uFV&-)thZH"=hqWOWend8$]=#pSj2J&$O6:[^o[seHS\5SVHhHEHA9YkIs-NCu=b#\F]8chhIuPO7
%s+)iM$9?QiIbq3?!&q`<]1uldNE9F*n-U+:S5^FM<:;k\s/GZu4q8LWh-.9bO2-4pB!#8R-m2mmhZu4@qs1fKD"PFEC8I)W>.<C6
%C"CW0me,mQiN8C2DsctZ7)5V*de^$$Cj2[@g*O/XC]&CYgPLI6HFMLWM#bBQK3&!Zd\@'g2/B<tf@BWsBse-HegVhX=\tm7mVe*9
%.hM%":SV85m+D=&i(9g9Z]A:f:6=<3W03T^G(\I<&H/nR?X=5.qA+L27rJ&#DUs0>b^QVkT,.58?\tUs@>\eac2RZh4EFL!WlLH8
%RBsn7#NhCR;<#VNKq3Sd$(jt&r!^gJ(dE@GM-p2j?hWEq+"6t]>ZKd=n_8C:rX-VGV_L:`oBJ3!TdX-)`A>jor$<QjOMpo\JNTnh
%lbG2b'IV3]^[k3?9YK)o.B"UIZ&hmaU$07rJYQ9)]p#0R3'N(*:k&J_ORYI64/jpV*30Ep6oc!Oq0uL$1up.YBq10J+5TUaON.e0
%%V1+I)D?oc>5)t3^!Q/tkf4Ab&0Qcc4\H9HbWb)>NIT0Op;_IL)Z'`WGLhNM]`\'V+'1c.FPE?Q[pC:bb`bpNT%Sg[Le!,Jm:Sj!
%n%_Q-WZ$BKUMf_XGbApO)(cXK])sO4[b<C,m@Sk*ST=Ri#KZV>2%YSHf"Pn4:KjRbU0abRVaX`Hpm60192"go.sgS>d^2Qk`A=Fb
%)SF_%]tVd5>SMAAKqEfUITciIMeZl9$mkmBc\D\'!['<=Xa7Wes"EhG1Gk<g##cNI+o^9"F^O/^Gd_Kp",Q:9Q9BD`HI7$B<bm39
%)/_:10jqguY6-hap$t%`fQ`DMCf!G'ptYcbK\D<-5YuWtSZeY4iGVmGQNb^N^GRn*XhR?lf<-"FVM)h5\cNd-Vjk8'eNPCmf(uGu
%41!>03XGGT>OU+STPDb\Jr.lOHYtYZIE!V%X2BRbp1rKJAV$<LqpfN!j(4UfDWCPjcf[p[k'st!$+)A9HMM52?b7<RSE0HDr71hZ
%__@LID=ntMWc`Zh6K0u)r`-;fL6VF[lErlWg'l+R0)].<S`^1hPA16]!#!-24<eGEa,jPQ6:<jaN3.9HDoa\]9i)&8r8FmMRM2.h
%0qhYNToV%6N>h$(."i['PQ*QrqT<0-=WORBb>aGY]o]8rr`r+hcdC]DYD-?h>,!-#U6=P$c5/1#s$]<Nrr\V]hZ!,]=<%:`CsZrU
%?N+l0`HZ5(o4r_$2q#YDgJV*3%!%n4#Vc9m]_4Ra!5pAd]0I7FOk0)<-r_;]`qr7?fk8q7GN#h\!=FDDmjK;QcF4],)X[\'JaqO`
%K/%=AJ*YQ6B;.XKps/m@`D7c9=o5,o;C<8BrTfmoo[CQ<KWf^:p'QQ$\Dsg5*60lHQ:7K"WNnUA+U=$6RZ1)?V2_q?J)fA]4)bn/
%2H<W@d"p_I/d[1_s$`5^im5#EXnCZc.Zn*&n=WAMYBm[1Thj62lLqI]gA(K$Mqas['RnGE]Dt2:8.p0PK:uh\2.![0-P;bq>e%7X
%<oIKm"$hY7hM3,b,Cq>D2l9am`uE&`rQ\2'j;eOg"+r\6[GHCPe`rsdiPA2JFI/21;eu%FnQN7r@joHfp/n,E'"kd?&S4Dm^O:H,
%"0.re&s2FVe6H0K9;14lB48:GdqnTK?U>,#*'@f\`]r;gjE4LAmaV+&mQp`HejS<fUgUH'?,0OT]3CS:b)alrXN"TB,Co0Xh0lE?
%%LsnY3GS:/O#`OK^oS8Qb\suWPQ5rN=1kaV5B`0_.aM\fjD:JU53ls7dRJto7E16L9OPhDD*dd`7Z4KS]13X.g^HPs/g3TJ(djn;
%%&jZb4_@RKF$%r8fH.5;-:`f][#!6>8;.5C69A$4_j_9;&kiE^U5UrjRK0^KG=S,.kg'PN#4;_iOtf@=+UgYs=p!4tj=!Kh&UHS2
%Vu<.RJ7.SmJ>bPDDkJ#39Wcui8fMuVDB5[V=3#b-hkgV>Vu%b]&s"`(hIiVT%(#RD4H,VM':4$>6,^AODBb"?,EM3!T5g\c0''g`
%N;9eNaIIpV"q]3Uf35;"h]IlFYOiXDc;8qO5"iqGf:QJ.!<$^2/p6mbpuH<Vrg+DU'f=D([bi"J!0iU,<,]KurVbuh&dCg#"&a;h
%<%e[0iejYco:OG1G1,bQ0:4BpJ:lI-.AD)T##efGE8BS4"pt-Ls.eHDY=ZS,Bt]0"o_K6L"rL10J6mjWrOL>UWo;%S`kW_247?OK
%BkXdNg4"BA;feR3chUTh[tD8mHVoR)nXj,.'PJ)n#1"f')`<C9oVtG#7lf*"<Xbu$dVX1pWcY(3!!-)HBb9GuT7T*M_ouEZUBVpG
%*WRckC=V3W@[T7Yesg&U7BYG/J:#Pe>H=BFD$jG)2*tKEdsZ#dL5''ChTp8(ND0)$[0`:p)0tRS&L?k<=^3Y/Y'#A:gf2[uW<G-`
%Z3dPHAG([c(blg=.eb55%'(npmO9MF<([KI,S#ME2ncibJ?J[sm!;22Da_#0A;Mk1c>s(&>TfM'1LM$kqm'WI:lfK5E#EMqWX_PF
%=3/+_KDPc$*Q_!K"@tA<d#u,-g;=@^+a(luZT;ePlUrS.of'8MV!)3NTn7%C2u7n5+`I#L9a4h"o,@E6@Qr>S6FD-u(b<>K4\g1T
%T'E*"jn5"b!8GX(,u@B(KkgHaC>^^=#9/!_.2s^5@.(\%#]7!qT>GfBF9o23FR61=1<71XXV8lTMB[_(.`>9<4OA@`0"YZt2_,34
%]]BO$*9?dWGV@n)FM%FAr[Ye$Jgs%NSW@sgs$UOW;h2>H``g'B>-f:$A+-8CI/,k*57gH3=sn?_+2NC!)bo)BnWIclLNqpsdM_jC
%e4+h"G13n?s,<<!#EQ"CD:HBP$LSfOjeB?8Q>D7_o_fN_>S,]([!G"b3)U[J3#:"N1iakL5l(-=I=K#IFqUEMkW-]q-P[pD.Y?R4
%Os:.%NP<tjNV?I*`3:W9r'uL]Dpj7)5N*=NW*@(\!MKZ8kV`A;GJ)]7o<fO3J7(2Dd/6?ajLE\%0(=a]f.BKXZ6I#.deIaoGuF+F
%eSY%cNj_gjICi^17B.^3a_CN-.,[^)3l(4lAmO=fA94==-"g"1)Dl83oW8CIEU_e8e[&:n0VEbnql>/OU;##hedLp0`]tA-m(7FY
%pr24>NPIM!r[aAOEk)<?)hkWHm]Ms0f9%Jce]!O7;gr`Xni<IU((V2t2a@."IaX1_?Rr_di0XD!4BU,mchk]PS$i4*1OZi@/&*Ob
%)tm3IEW%`gOdOaEee?5p\^OY9Z+0>7QC'nJYnB\O%=%O;Q;0"1XILT&%^4$3A`Z`e1@*O@dX=#NRf?sk[,)r7Y5E!M*^=N*78l-d
%2n?,][H4<$49&Md?H#iSkHS?N-+hump#j1ik@edLhs,'G4);U[eb4uB=m=f!.-6r`om(\nYl:@L'_3j,M`rp:BRhfE>dnJoQ7a8&
%'?fODR94i.T-7/\Q;nPjO0@6TI,hQ$R-th1#hlp"R^$slT8G=a])i"C_qLOS,63TI#tVbJrENKpgR'J&.]"paF'IChhKaXTgJ-dP
%p:AJa39YLsX1c^E?.7S11<(2#Wk]:\RCptWI\frhbNl6%0QAZ+Xa=DYfLkH7k0N&,G%+KG"R4ELT:WIg3dp5K5CT-53p!T5gZqYg
%mtHe]g$(llk/=IPSa#9Xk/P$^[DZp#qXXIcHLZ[]fD=:B9'LNFX4,&<(Lt^fe(jTfjipZReLC2Y\i$X/P\Mpsm+LW&ooD,^dT95W
%3`W1u00?n=c>(@AKlEjnXN'q6ZG#)-p4fsNIA)qOT5dVcp;!3DIBB_K:Zge1Vkb+eX*XLqo0GD@P'jDlBD&][?bSY=:?MjRaga;+
%l&0-A:-1OaZ)"F)d:r#>=e59PoVMFmW`S&J*`WuQ^N2VpU=34BFPE;Q'WZ\RmVHViou=UBA,^do[<ZcQg$)JDQAm1rh9*(8s/YA4
%Bl5u"27&c9SR+N1eb8gLkS.Ee]%rr\T09-&>^1G'rQDkGKlhJuO_/Z<\biHhQtC(sQL)k5/bQ@&K`P;"*ks\4ju`!+%sF$%=f9lp
%.2SfUCcZth3X$Fc@D+*>#@G7:hOX(0rKmiA0;`B[a3FI@Dl9l$Iep[_j://0];V5?I/eG8]!"=<<3)JpcVDf1)nVhCQksDEB8=%h
%-biF"b,+Z:H$=S=4FR5*\?P8K.7fiLL\75lXI#p_A&ke%6fn(5B$mO*b2VkAZWeWE`fb4ADjJZjHoq9_Fad0Zl1?U+gt/,5]fH<8
%Rl\,oI'+`UQ95cWn8S'agM+:6R<nVnoMBh5*0a$m87QOD]hkW0qS.3e3ph*OQD[l`chb;4Bbmh)MG?78:%btaVeBA;-!%TAH:bqj
%QNfK6?;Gu6<3E[&e+KkJe#]p[QWU/Xeq0sOjP0(O)sK2Fe;DlCY#@TU.[?d`D<u@i:_Xs&F%oTu]?si^r(5@42cGtfd4*/t9J?8t
%pU\GAP!63Mg38FkqVo)3FGl]%#!:'UVq/%qG+d<tKWERT<]p@(S`7;`r(=S/rR5)VI*tbK0+JJ^WZ6!UkG(c$S$MX-;NdYerNCm_
%dX$("[5G8`1Rl`u^H14i)tUj%)qhg[dk23L@Dh7WYq@MA`teGu5V:lp.gK:i7\1(spmY">i,mH;HWj5U?MAO%Be8N=]VHMoI[be)
%=-Va3h,D(dO31ViZgW2iCm`s'jm7"KiUcb[=ukJ$9_gir.Mms1[.i%WKED)BPK:)nK9Bt>\\(J7e#,r1_l%k(jnnVGhpV\hpP`,1
%(`RjOV#8M<8q(]N-o]WNHbZJ.Pl%MN"kQ\(Z+IYhs6"7@kNt?(H+6u,rLRmUO1@d(kNQIm?qE$<B76B';QBDc*VqmHSlUcU%opBB
%BBoK"WBFUI]sQ=b:T`UIp?TA;rF^W2qe>btFhYH<^[]4/eiQIIc0l76.KuD;C<+0>]g<pVZaE)k\g=!"D^O%o]g(@LNVPYt0PfD>
%0>H]EMefA#Vpa&Bo"ljIpctQjFAf=*MoBl.Le=k1ohJD*bpmr1,*S<FkDVsJDKf#RDIrZcV<[kgrgGg5jdXCr)Tn:ZWL/,`Q&;".
%7<n4$_d7[^2K:Q7m8*"m>+[%jptcg0G:kr$>9Pp]LLt<3I)r?1ipM>9I9X%+f',k<rHTGDE2iubcH:u2=Eg[M\b2.tmd(o83qPUZ
%b<*st/0rg[D=:5ZlRW!1VlHp<=/V_1lu&*RH1@4sVdL>`2\'VPSN[4!]"Mo?o`"1Cm'Pu`gKRhIfq%Dg:<ag>lJl9;GIlUPTQ_k3
%GA<Ym`0-kLma%)cp?e)@Rnos?9nMPIkM<+WI7q3u\Q];j^GOhCM=9BW.=)K-U/QT]d;@^S;tK5)Q%,]FO8,G.Q:-Yld1=f8"1(&%
%ZGa=%T,=-&"P6!I_eQ>DC=0OQLfSHnK[rM)6#?OQS23Lm@,:)Ypuuk/,t@j@diu'sW,U^_'caub/mYDKp9.[Y0?g;$&Yb<0:JZm#
%CuSD$`GM-h[W-P*bF`XnJdK'Hb9iG6(Ja.3V_?%N34?k+7aJ>3.e3N32Hd7uqr.amc6h5Jg/V8mq5tPT<5'rbQ2BDrNPdH#V'0bV
%P3gfK@@L_]gAG1q$OD7a9+D*IGV<YmlK'9f1Ah09gf/HL#A%!,):DDoM>guZ<2IC'n6RQlIj-#+r*o.-TA1*oPD"IIkfNo3m9ccs
%$fj$l?t1:5c/7OlH:_rBe0B!f4t0@^P<A..@B>MV\@OXFZM]PfFii0u*?b_5GAgsJ^?u,&QCoa#ao7O$]W"i]&MP;cGLZM?q(OR`
%bW2_](Z*iXKHnYhHID0]d<!"NEHGSU&'`.X_otRR_:Y'BY_VQV4nH"5.fHmJHE$?p*]=RkmGo)$*=9<'i3%*El/G<<E-lXPFaQ;:
%gJmnX,(LG%\q"jP[QGQ=)Z<Z#8^D9rk1;ZN38QjpMC&5NOaq246KLr.%i(qtqtqHC:s=!h>dQk?KKTOqS'JM;B3hsW9OfbRjiet]
%oB<BS!LA'3,/\*7VI\uLGW,9No52^\.7kaGq+g;cnD1GE*<Bb*Y&i7n0V0bKTQUG"o'p?&Cq[_4>:+VJb<b5n<P/8[P!p^g7c8\A
%'S!C(die?,D#erY)<baKWL+ks,+aKFZ:3Z5.;u'TXUgN6^V$X%0tS-0c7(K^#H$S2liudc@*p370nAPhkGO\0D+:GB-t[\X,uk7Q
%3YbTSq0h("CGU#n&Zd?g?)V';X,&;W&VdC[k>^r4ckD1#BuM$,c[/Ks2<SW#3JTF3TI\"B78P%Ucd/"E_dY[Fk*K^7`2">]r_SX*
%*\SkhQr<r_^[u8ubfe@m3>G0]\0PcKd+I+.pXR29(1Pl)"6A3/l=OKBF%N`I0ubDA4:]itpi\[#>4Lmo<sZ@=@pp<TC$?W)qi4V&
%#8so*$@2qYB6F@<Qu$/Wg'Ri,kL>0pEX12mp4mXPkC$t5I4(?1B3+a;`kkK\gD:7<c=8nU(r7:0?a2<'1d-/2/Rfj--pn<)!hf_4
%e[MSLD/>a;Z99'r/32o5Y'bSsW;]7>5hgR0L1El>GtB:&9aHQgZV1QL_V$W75J&$AC6e!'3.`%Y)s4ld8dlq.r#"M@Y060NH@2E=
%EX\p3*E<)!GMN\3h!S\U!0R2/G,#Fq@/0SVF'e>:/41XFbYiE/XO4I&^QWCk;rta);#F7_!.;Hj:"YcZ@\#\H3I![@GMg-Q&5*Lg
%X?[Qq65F8=j2lqp)Nr&[aDs%\RV=J]Mgt+S=kq%h$]Qe'1FlC&;'I9:Z%T<o!'bBU,V/7Z*$dA+"q&3K!T>2)eAs0*gmDN5Y<@=*
%o)-iNZriOmLH]3r/)u:A..?Uj0:2(2!HRL*.0^_2V/o>ZhN(U07umJfq?7Ip*A.QU'<g)1`G>B#H.k@.i&%8h=&/TE;d/(k81%T_
%kBdmFNTn8>kj/fp1UABdPGgAmeDMIBgCj3YKDS%G10kb3gl,VIGP7SBE&<$s]NCdJLX$2PGP9kX04HbAVXp'[$)cXD!/`(T.G[QW
%`eX[]U9XXtI5c`X!496M*=dqn*;36P5.3"Oa/S8hoFU`5X]Z072[;KAcUgd7n>QP%WNU9.-*Hj!.U8O(\3;''[=.TlXX-E`G6.4`
%Cs7pK#4bE?GUkTdb^>O`1,=hMDCciAD*I&r`I!Rt]UabM7cV$+:>/j@#ZQrr1KHT\&OmFlT_V,gkqSE9a19suBmtNXV7\i2H\FaV
%(hh.TGE&\AE*SDlT4i"f^8QFMeY9-4`>f(qO@03&,s1RYBMc,M_2Ol'Q&uVNip'uhM2(U'B&ui)I#paKVE?+Bh%;C.$5,0RPXP,O
%PV=_lO3RR3&AKn"hB1POi(IRRm6m'[_6&gtafA:W8,-aQ^.ph;ipF^-:.58I/WU3B$sF9Q98E9m,A\&am"-]Hc78&L/@[W]6!9G/
%LpH3D"HR_Sf:F3jAlk<caDtQHnj4rc(+s--;8qm5eD1XA@`IR/mH[NO2]]`!-F;jieDr,g6JM#fm<r2Yl:S[ZEOS3[<c!OPE906i
%SZ!Kg@\*qNh:QDGC7u$38FINHhX*b@2QTUn7.=nW]P?Hr?2^@JI=LFpCVdI!,ATY[/C;-*dY0k>=DVeAqd,jmFXfHZ/QS?%S;7r5
%G/i,t,Qm%FllAK)2#`%eGqWEI40#JB%+^+R&k8Eq*aTcike`T!m^74R_j/`5?A-WO^_.(:[a4pNONg^5)htO->"SP%UBHi:%u0^\
%I04+j6q__Xc;,>tR_+!g7<gmJWXpFkSJ]NRcX\SA=;C#i15_@][<a<JHrklmC]EdDIRB8H_@a6cB.knc9e0OU0>#_sCZe*MGd=N:
%FrdBEjIL'/a#s'u\`#2JICKC,6SXoP%eE^nL\O>92b[XYfmn>cC@qcM$R+Nn&JD3j4Z,<[M;d<D-rKOmM6fWfb_OlDHX<1[75$Dj
%KPl_o6h1`q]:"T%M^nuWZc*.j(K5bS,\K"?,[50Hpg^p]=aM\q^]%34f$)]4omGeq68Ib6aiWVj/I#h68Jsm*jj;,=W!5'AjAQ-"
%ae9*fTG-"1j5nWZSU+hn8NV^Jb+T3gTTc\ca2t"_cCbQd(*"fZ/i\JYc5%BILFtQ=cC$7DH4F5""s)6'j6+bmB@%eJ:EkQH3.m7.
%10b<[F$jt5g7'*!i2^d)G+F*eeoucj7>UTQTY`U)+1?f]F1R:&m#L.f]G^FOm'M5L0d=:YF$o=@pKusm/NZ<n,N+FAQ+=5;#'ZLr
%>cs_F]YOJj?>FohNJ6c;nq#,X1D1jP/i%hBaOM+uIgf'cV*g-)q%smX$5c[]BdXF\1cL)hH)P-Ee!SNM)#SA<GUj'm/0\m7WJn/A
%-X01G\?Y'o!8?89$T-182ke?2_eoYJnFnZjD<QfG+@,%11bU:/fe*&$&79,XM"0++16NT.PT2PJ/'8X/NG#B\1*K2e3$e)MR`p*/
%I_m9SOcrIS;ial9'B,?glB0+'PeoCZi!a+W>!Sn8&LR#SS2g\,B^%-0_^*umQATa-`u(dirgHR(8rJo=B(j-dM';Hb*e&jd3!m[d
%F')b?H$g!?d)nR1XmVY]j#3`$p:tSOm=@Jc[3Nj<o>gFs_Y1c8cf=WP+YMrj&!=oqMI;/N"5+:FhcNF$:"4.p+8O?7c$X1I6Ve"*
%VD8,$M\.WYP(#2,`q46hEs@*XnWJol:*f]c,^Ul$/\C&'q$q!F$"f6a0,G`_HlBeG$$5eGGH7Fcq0g<,g%3i$)o:4nDhd>&#hrK=
%i63&'DpAjMKVO*XT&O`HMUQp[BA*kD@>T"g1F-,-3s-uX!H+9CY+6rP3dEq(*Kf@iI^/FI/@bfSk$tqE5_]Z>J\@gRpF9i,J#_:H
%B>ra%hYUV-QZB0tG,,WpKBaF+Cb[SGI3Ao;+]??F,Kd]PBOlJVc`SqA$W`<Wicr7;A9RY"LEpR"cgGc2SUep=k:-t'JD78d8-7b<
%EK23q-\?XSC8cq^^lWM*`+8'\-mE/nfbJ@#_aS*@?BR,D]A@a%A2#<DS;<,sZ*1jG,;T,>8nuAhO-:k`7(6TCpkXm4^]1]#G!lO"
%1K+4a4//XH7?#:jSYnm(d)M'd?kSprb"*Nr,-r(/+qom#TB@;YM3OOJD&C4:;!Buk]-K-aA!uL^L#eps17%Z_2b4@@PIU06A.j<=
%K7Q0eqW:416L&6;F2R^jc<7nF]obRLO%Q#]+7lAVrJ4Yo_U?JDlU$8@_9fj+E$60YOB35EIl*7,8`jMJfIb5M&ICOJ+]'O4qsgk*
%Wuf@'3VPQaPkbuF['M91nR:L+32\FL1ZBaP%l`qPA'sl+_J!a@q/GsO4a0BNnEgAA_aWIV3_hl/A1("fEKe\'$U#)D,5H0Y]:la6
%3IuQ;q'I<s2OmT-*8L_ccA7s35+GCakCiHcJpfAgAY&53p&m/:;8ItQ-',\d&t2^nfp36D6pbD;"F)$XI2681b0pc\G!]M/_OMaN
%%."BDIYF,qj)gk[8)k>>+mk5Z@o$9:9IT-tBp!#+*RDH4!.4*aO0mpb%.T;\2]Gfc9#1e/qt_M@iUp<._Xb4ugK`C1.FGUOc[EDc
%-X;]-DG?`"Ngrl0DiL*r[PeOgBU=oC%@FL9G.('In!179,TD&EZ-/!.iME_1oKQ'nGFS9e^lcE@VkG[HT%42:%I>R]ZCr:RT8_:R
%e>_m;`_d?CH]f8G^F,G3qKjt8WH[55a@K=/Q7%iX$LLM4,8JrN59gnIR7'LoB!6n1"7=gokF93i$kdMmC8=Qnc5Ugi5RasW@s@:L
%(6pRO1>LMDHG!/7A1\R.7un>)W,?tW=jW@'KbI_5P2ZD&<4J(hb+V_lr6HLSA1AST&J:0I3Hckl3CEH_=I2GJc^oKtJr*U6Ot_]X
%puL3Q&Ukq:I92lXr47q)*r/&YMQq*G"e_Oka>g?:VgULU%<Lo#A2nsV_)E;RPLq'1i<5^sMkW=$<1[IRCNsm+CIkUl^7>r]m=Gi)
%K.7<',!">oUHeQXo[N,!5-abMk6s"45DUWU!qF=L_Z$R(==TsB`XB`2n,i.O`56dCLS%>GAgt!ts-QeA=.ac8N7QaUnrS.8aa%/3
%c,GkD8k62A8OeiIm)V9Sc-<WWb>XtRDQ2fednd^e4(J7B.,!urfsan#WO>U#\S73Bje#uU&<uOIaSL+<QYP9Gl@\j$q<+<N-11jf
%;>[bD.Wt$f/e5(Rp<BhbIOo=6?Kh0\J6`C+]=f_t:7_.Lh=(,OfHia<Qd:,OecIng<`T:jj*T[Qp?a\V2k@SM6gmoLL>>gOGLeXP
%aKE^^Hh*#+ir-MZWcpR2GOF_gX#Y=8Sqta&pZM'F5):.d(5Ab.+60F1D_Iql$8j5T*5:NX^k+_;rGlh@G=PV&9'r>H=ESun:Ynq^
%s*LiU4HF7Nh/h\Mg(Sd&bM_BH=0->QS)g),qJko0T@?SU?;hXp$?n6a2,6'*M"KPi_f$N7m->%hb059f>^-s#LeHfVi=!Ep/aTd*
%..DMQV)E?$C6X'7U*;b]-ALa^U:_K`GEMA?a#s;RTX-eqM.P.]\JIWQ@3T72H2.K4;7Nm:l+D'$_U!uT2OhuB-5]BN3h+DFQO`h&
%ZIs>+PS9O22P"d9HD9)7?5lIj3?]YO2I4rV`Q;Z>H*,P?YJ#s[:$8$FRS2hY1,<T&SbLk(UpK=`F%.LE9c*>iX"gsFUlG+l/tM1*
%kZHM[?HO\Y#SKlVS'Ge?dVAH.ZK]#Bkr`k-))Ic-C]<ZV+X`RMkLC8NiLO@7SQ@G78']2CflWuuCq+;m&<'=3S'EONDFf^TaJSRO
%V=Vg6)C(`sbOTc<<f`kIk9Y);pEiQXS'GfWK_UfGc),P?0H9/fNgNQ(2:&ue,9pjMaYUl%<W_p:LtQn,I\e\Y7a.`nOC=WArg@#d
%B%)#+,b76^B9_DK`cM4&qYj**+F,>7%Q,tm'#aP^rp17&cuE7LW/4<Dd_]^(9]Edt&F3dlpXO,*gfETL>suS/kfpOKOckNps1NBF
%amd\K!7)Vp]8:\Sg=1QG.pL>jp-H12Kj@"13M_5^*B9uGll9_1gr#(!@05q_M_8Fc4X,<oqTLo^U-5tU1q<G(*<buE/^&Feh2"(,
%,$sWF+"!^R*q>]2=HnX3f[no@fL=F]G7bMQ-?+;)=P)?M=e*2Bh*k+<o"!n#aGAi3fA(X@'\sS]%@O7RGg5'[8`3nkh2SYl"8%1e
%(]1/o>jY<@c_@a1RFA`e?<2N7S]e>]]GJKB#oT1&kI(&'aM$.ak@7k]ZgYO#f=b*/oR].(9cR$:d`C6d+ktbGD'D@&j<IO-mgWK]
%"d&Q0TVII6GRd.iqdMpppL%YuEai+cmW9;E&KDB)@Q,"+q'WKfMWFbt9k/_B-l\j(A3Nar.>5(f0N^JM5@Q^lW'&t.?.dFn*&u:P
%\?Oq[_@\Cp-]Rqo/K!FNG'@E_T6b5pZ1^sVF=eqfin'fKUappXm(:(Sh9ae@,[i%a/mhSL[0S7;]C.UjBaLlK_&_$lo[)@N>;Dt,
%r^m8S7n1Zq\X;FeL)6&c_=5=,a=nh,?ab`qhu,>Q(WS6X6n<i#3eqE^r)3Z14/:V4mI4JeSU`:Z_sLG-#4Y5p(h879Cp-,_KJJTV
%L(PX!,M[8$R9t5"2B,7_:%$m'YT*#)=l\Q!E$o3\HJWX#AEJlt%<j&QPW*\JOj?aIj0GBEL:b7mq'4sU7(_D1k22OfZ$)o^m\6:f
%^4#`=G%)8Zd]?2tS7iKtYu[FdoGcnu#GWZtW`-gkP4"h8=HAPj&XrO:ZeNM\kDHV[.@M!akDHW&?=GL#L$6\L'5N(&SdW#]\oO29
%p4:IGOfllkD&@I8e)9@,bhou;<a_M=/an&D!n_J5,c3)tdc@IJ][N7"P16*%K6Q[p^8R&R2"hMi]:dnqpZ>(]ln\]E7S%"",/3qb
%r6!&tYQO@f.t)Nf8h(jcQSHuDF@?pP:k<=S_]"9UFM65T$^=EGlo*'`H^,(3GMeWDClW9[mD$tBL]Z0gn,XD8iuCcNJ?ar:p\<MW
%$a>2meIcVb;E>mcCIYrcn*2Y(/YIQ.8`W@PM-]i]6OGld,BAgFi80I[@EYuA2?O2tDHH/M`0)ZCDpQ#7m(RQ=[?XjA8ag(k?]!k;
%V=aq+`h'bE(WP)T7qu5:V^B$M;l!se4`"'NMWLB>[l-,0Rh+-LGtRr]iB],4g:R7-\OCKKS&aoBG*^cT;!-XWe`jiYErY!Vc?q^E
%<VIPAr&T9!9hgNlHfe2q9S1f_Rb!u-W;G\oR6)AF1LE&9Y'da).1+>7.nrA"]&qbH;RM`6T2'IV1T+U6K3+tU,f1I]E&^kb)?-1E
%00NV;Fui]#jZc/ob+49R%dN[ocF;8?mp[O#eS-R+F8r]:Qd6\Y>.8bNj:e#=q9mOR=-S"A5@6!F_YDX)9n,B,Y)YkRb^M7W@qlWT
%AF9dWUJpN88::q8<N88hIhcNF\d7%;W@.,=*ctVXa<^t#oX1^E's"Pj6NJ"M3G`$*>KifO.dBLI_1aLEo#&+?K?rS7C?_$iiEVG5
%=X$A!DTe`?TST/#_0?l1CK3o+g4HMT2-a1Nh[WB43PCR=BujR`^3b2<^<f%-;7#]+mLJ<EkZN*Q]@gX\%*JUcRj%T=2;hM]3h!mu
%Ytip)j"O/Io@G6mM+[8WZk6fPf1Z'^Jm/_D<UMJl\&(O=\#rD8Q03I=HMmP?AJ4/a@LaODhU0ZW-9(3Y$u")QW,EGZaFTo0EW@?I
%MhQF.Q,$[/OlBlr9dAr]g<R%u*=R!g#udm"c:<?7VkQjQKKT%`e=e.h#'Sf2H.WiS/)Vh'*h]3pp!KK`T4Z,lXc,?Wk[T\#;eSM(
%gV@k$&c.V&ai$g2lZTMo2FJaWq;]mFj5a<*LR`E._IZ,=qId;5T5tR[)OE%PJUlpfWIWFp\X!oBo(OB,Ee`Fr1GF<-H[@s$DJ5b>
%A7Fal\19.WA%qc=pAJI<1c@20#@K)>QY..o:$Tq7BZt\^EYOH9,btmF$ThC68'D$nC)oA(8fKYrd)hRP3Ii0KC(-4.kT#5)%\W-:
%j<:i0UZMP3am\Nsq)'n^NHuZ3@RFZ,qM;_6*5K?O;F@bj_c;W@?A5)Y!.F>sO96>aA*&W/Tl8HPp5u+^!Ck<7o_"?-0>*tsku,5-
%De'gX;Eiuse;7MS(D9`8d%u,pkX&d<9DMh5llWg'O%)W0]`BeOV0kB4pWm0gLGXa<qI_JC)ufiZ;(gu%N%3bYlCO>W'&/h7-L>Os
%q,T`U(:-T&%HW#=hp@cr554o5E&Q2Op\O];2M&3.`4^W[lr/djY?u8"h#u#X,5:qnIl:8jHi5/M=,q^4T>6Ig.)U\#8%R;j,OeaK
%=>GKMDI^`e?GGGS\OO9acV5"s>Q*>=<CX[R0,V(3q^[H3f.Zo"^Th\W@JBU%!u.6O]maBO<$uaj?gpKdZ/cICc3!G,$g(c5NP!Z#
%L:u1l=OF\GZ'"MJF)4\l\CGMV';uoFq?:f.MG<;@^[Q'"8_iVJI&l.Dp[S(:lSmUII&#QakA8+cX.R^0X[D"3kJ*RHp+i%_rIPhb
%W#QcV?GF;J'XDY);H[K.\,*Z,?:V]\06j#lp&66)oaBVqm@05!jLp"k=^]Zm_O,TZcrc+nLdfX:W!D/E(S1<@\_#.S1s]D)7_Fe#
%aAY3Kn)G?Omm4P8Dldc8$X_N?[6u!K[r$eFrIQu:gA1V()if*F?gr=^ia/5Hme*nbXumAmjc#nskspC#qM!+t8_iVJI&l.8mc+]0
%U_38`^6&rT&`2gVme,VBGl,q,S_c&FY@$KnI/XajKR<ZLOtH+9WF%[b]mcR6A`)c3DH9pt1IkWP*:$qG?o(<qX<6b75Cm[T/DO+j
%iu:/ifB5?3EMH[>>Q)RRO"Y5`DSVhoO*ggp9nm:@M.>H/k?u2Y>Q%)G'=cYT-aS*Ul:9sgq"OUgDfd0=licbL$[18B`[7#CjF+(9
%oXL_2A+"^B7eS?f]%>8(#1?`S-FA-('RZsRla6JMn+@(&eM!5I?lFoE[Lj0^4Z2d9p\G'Nl5*oj78J^K][]f8.#rGRhZu-a#l"2k
%c6QQ.M4@ijEj&i7rKcL$lPHWB0KSK"&,#ppN<Wtnb(8f2JK5hU@$fP#b1jm-`Z<ceZ2anI]^ajH[Rd\a,^Sac@TY<E-RHV&Nn)\!
%QAbm.-=E`:eYZLrL/2L*\V'+N?Ku\m:)dE*rn:[E21M64EuS%h;?cZkFr&D"C>D;KDK.RcJY9s:_p1ar^&Fq6\@V3I/Zu4I?8%m/
%52/]+ngC23r[b6$ebrhYOSmXPj$;;sAM#D;]17q)_:RGREnmaG-te=HV4@!4/sV@Oa.%+KoUF"b_toGbHhfFngalaT/,.@ga3)<;
%eXQ,SWqVc+rG#)Q3_]M;G.X#5[s-G1mJa&db?2(Io4Y"IF88rq#u:AbgGuauGhkC:3O7MM0(3`8'+;.gX-4EB[961pS8I`>IXEK?
%VQA!=C:a5(gbl1dj6&X.jg>8`#akBil53#eA4fDX=Y,sh<6rmSb"VaK8l+0415*m[aY3&S0V.hYZ!=q"UamS@4b>1Q(U==H!+Xcu
%<X_76caWJPp+YCk*\B#P=9fs+k-#QPoXQQM>21b\e[Ll.Ac)8dX#L!=HcF:["RC!d]<\qa*o/<6l=5G.,lU[kQha-lc(C.ZXtR>E
%/LUETY3^L-I>N3L"Id\$[bdpM[^1hd[3Hp$S=."-N8&A^VJKiW9Cl@l=LOPur&&VMBt$V-?o,&mcsIGZLK?QoL$r`+[.\>lR\n\L
%C5XK!B@MWu\f+5-)RYN]E'8*@*[J=-EiKlAd"G2-*HgWFI02Z=IM91saa?j[akQZNp!m-.<'!C\U/4Og:OhX;nA`a9mI+o[H]dg@
%c6=c@8M/uSAbPf4?ql.ckZ;(S^F^aqh,Oehm=S_Rs7bu/O90ig%<EaY0-1Z1pk*_Q7=%q&.BW23V.K0^/)FNIncucEnGmC/pB#h`
%XP+1+@)A($-*t;!5g#`9/=$+h/hMqFEmNLPBu'Jk!iWE:7;-=[?G#\)q1/dK.f$)_?6nIpaju("^`tQGEV<2.93>m/XR(7q8.u\k
%-:lSf'*Q`<9^TrA"s_;a7.J.G$e"ACSXdpGXe%O8qpaT\F$T`sg,)!!KFZF;9'5tX=i/f)n)Xj&5'O><cICEW=5I/&(Y,pNn].M;
%SrC4.oh0I5]t@,-^`mf_bl1#"jmnZn3ko>,ZHV]<ZFVnp5;2K>Z>1oj_CLmMo!u22?:t2r;`hV'g3iL3RM"7rc*1&AP6pXPGSuXO
%"R++>i9NgdSHoRpY8$[*@!<YUh5]!(bre4()qM1CL/0[tIsNtC'5Wgr:J$Jf7$5C=Wsj@Lo2ahB*`S!9SjA\aCp<GW^?YDWT='H-
%r`FT=^YRM5%_n29QHu`SOYD+/eBQP?_u*a',?I#\2U,r7$JK;qJ!rb+a(VDHqF/;P4E@?1qH%CCdhbJ3r<GdI<jturWM]5^YF;Bp
%WqmFfli/\Ageo1h[XVFcR,;#j?S5+p<hBkc(=B>^lsh]PltnCf@BT$>Mj;JdS\kAk1**+1R<<MRinP.)N)GcgL_oK[5H%D]n?V![
%Lr\CSM><p9'U,1S/*+_/*K[:jkDB"(F!IsFqK7QkeIk@h:g]/&@_ejWrL/U,@%TcC0HYAa5^9Ra[;V:Rf3Q1sJ]LH[iTk!GPNL.1
%DMJ*Z\[b8l-G<KFS5m/AjQ:SHNG[!UF'FKJ1@]$E/s0Xk_#IZobquU"Bc>T</?LH9ZPb#lA^;mJX)D;cm17E)5.Z8No%a=$93;0>
%/0FH^&s;!`;'IRgRDk0`j\G()Zgd7AY6PF,P'u3-35rT]3)JE`Ick*ZhN-X3d=Mhb4A@]2`!92*QJn*A<0e.'$D,tD@WSPL<Hjb0
%.Q3q$`^JQCS#7\)IP&&Rg!l8u8p4^X,7Ir7qbl5^(>aRi\+uVV-!0M1%^!TC0"2#!er%GEUZj#oF_/!e?7A\%QZamoMtPQ$[rZ[-
%Sn_n<CHB()[:W0@9D<e^40(U7@,.Z>mNqAr_DX=Y:qmi[.<<9*Z!]@D343He#7b0$1UFJeq7^(\9BF42H0O:jZ?+Gj\%W6<6@&=+
%dArS&C69AD7_->E]&"#\beUL#.sDr^l#a,7fXU`*S6u9`Y1B`CBAr2)nWEk.3Ba=jC3/X^c0Nja@5I,dr1OOcCu;"@!Q-*+S51eg
%K6mO!Q.,!*hpodH]t1V_pNc$-Y&,Vu!Oej@2h#?P/q8s:&r,k:\b<biTb#\o7DcAtK'&q3%Sd&Zog\I-Pl`UQ#ZO1;S#[L7_tVBO
%jo.sLY.VH]r`M36leb&Q*F%%#ijHA`Mt2@N`qjajA#D<L?5I,"Z@9*nLshIBAR2jIIbUagWkNc8h^UL`Ze_b,\Z>2$p.k@nqREmg
%>r[:?3rfs31Zc)Q]i2e+]u9kS=a<`Mb.s8m0J?q^F9HEtm!I]<iOtR':6&A(3Snj=js'jI9+D.%LkNckWf0A[2W/nTRjd$o5)ks>
%m(%-C;I;/i[^Osu/-",-%mZ)F*IpMj\R4"2-Ft<^b@eeO[^0OFba5.upL3/lp#_nNr3G.k]Xi_f\&qaKfD-O#3m<7SR,(4$?s<gk
%qcI=);^rMHk?<)7A3$3QlOCi",>4D3JB*smj:n%:J0TRPK[uP7N'nj=)]+PCQ%=(_a\8uK1IaW5b@Zt-)Z'?+F'DUM!spcd=HB,m
%_6Xt^M\!#/0lHdt(bJ*hZ&t"](S\l?7o<,H%(MhSE5bE^lN'hC"1,)J]Js\#)Iq>:8BX8F/Ws?^+gfsIg,DEU>cIC;kepWfVNHMo
%MMWX]H:5Nn0,1h4nm1>c?+^:3me5VUEYh)QB/Fo=<L+9@k44/Rj&<2Q-?8qHHKC8FIPs\,qdKeW*O[X)ZV3ldbg2Z6dOVeaa!Y*c
%eT*SF<&e7`P:H%Xk4W1@;H$e8S(4kd)uaHMDe'>5+3@P"2oo*=W2'*7=l6gG?f-PT3)<MFElT9=QpBO&2(-snVFU#QH[/lK>.sfX
%/>l:9]!5f1D8#T^abIW,>t.4Ml\Ve5O(C:?OQT$H7+0o/Bl7BC%I?q3%Gt$f4Xhs@N2>T3UQasa:``8)`dS3]3L1ZA:DdEPr^39%
%@c=$6Z!F[MpQEP8HnaEJqSb1>d?WEN$m<n1fD;g/UQG]k#LY=8F=j*djq0.L.\CI\,jGic,r[8L/PW"/=F,AN_ll[Al+?PV0"<J3
%RT`,hEh&MHH8A]?naTVWLSFc8qIO=@?s=FPi(h9tFc"jLrA&9:Q.f0u'7AllGNK29E-`Nj[;s7??MYbo0@;U\//\KHLu<l<\XY*q
%"_4@\pr%e>.+D#u_a,riOb$rQs&FN;m7a8Ur<t*!Gnbc2NJ5XLQmNM&(XUg]qK7#q#QJ@%@BcDrfhRg2lnou.\PG<_B;0hWEbl.&
%o*<m2`r+M*7$rPFL1.7tRELf6r7Pk!k/(]?bAV\#TPJTuH*L=B.pD%YnbT2ge5<X]0>EOIjitd2?=BhH10;2hp?rAN\Yl4)\+@m[
%V0i5i]Xk(KRcWecT1XBMTqYW72tPY+Uau4!RF%SLWf&/N*GtO+DT&"=UuE*+7n=gUY5#s2$X\Jqk`39K4k7r-j9`gT]E"!=K4BIr
%EFND!&OV[JFWV0I*BEINBMT-\*ufpn_&E(3Hd^)oDXTI$Q1u_:Y_2A-B7*An4[,1#\P6QblkmL/7.=3h4;G.h22KT/\U)$_Oh\(i
%<&3?hCsQM_A$KtMro(INkZ[u453q@q_Hl-uim0spfgb].iTKK9!^<_cW6^>.Nbp6d;UH;\O.X[NC8"f-'?NlkT:haoC+lhp^L[3a
%GS"sFC.!sAk#/$Fic[L8O&6h5:Wj-P];oIHKN>acomOfk\=;M#RWpUTnk.n+1@aE=h5g#U:-=qfcnGFc`04oU?(M#Z`04nr-3)q\
%+)-^Qk_U+&HN2*D-dtiYJ,(H>SkOKQ$T;t`WG1f0S4WUUE*gTq.[r<[Nc'22V[Pl&/X$f=`8Rm#"K<E^/q/lY?H(3(a1c<";1)$b
%d^.VM<U,I+9pH&ap.Ef1j/sHW^c[I6g.a+U.]t*69/E%Pi<O'GlWP)9OKtjbNQl>.S[K>Fk]+V?WmrBd`(>*J5*aC&R^fpi.G.?O
%;GrMW+[0:a']!q6\Q`@jB30"On@Hb8lLmT6V@etHd)a2,b;:famlfZ:\@Wg>\bFa#4%KK<]_fdajQBj2`T$1+nKDdgTCTMj#P0<&
%5T^A<^DCY54[:o$c_i[>mpVm/2EXg,KY?$toCA(Vg[,YDmrh`NjnoiWRcZ^3090R@\mB,+N"tOM(\nLu488!=58T!Vkd=3rWSJUi
%;rF3O8'3#WMehG2R>lk])$rO:a#4R5S<lAj8gq4:lH^FR/#n8Sd`q([nW=+jSC^T"rK]`?J5-nm,SY'\^1D2V7ti,oYZ%u>,u$rj
%'(d(-1IF7So>dI3"ko%&9*^,W,U?n'@:(>7R0lAL[s3<OOH=d[3PG$XKDCab`T14^M;;\',,N(%k.R4>d"(UmjqgL'_JWc/QQMTt
%%-<<@V/aL?cg=jV(Q<Gi>>n<[(lZ\K@o-]M3>tbo&K6HOK:5o2O369B]Y1Zp`@aVr@XJKg[,f\(eCdre81KqtD8H=.]8:W_g!I3W
%V,F)ijSdfpZ*T:,M/#V%2*g/2__n,W5c'ApS0o@?/SVkSgpCImhUM7Ja\a^t+R74Yo[OV(pY;+tXLB%'`e'l+7$]lc`nX9>O3&jh
%M*POlOZ5N\*.\\"ibh(#(C[e&iA<Fq(u"IhE7%cW&*LAAA,WX=8=Sg\A9CBER]"XY(lO7XD/$pC#`YpF92o*KQQft"*&JU<']VXg
%/sk37)Hh.)SZ#GA\6RrnD=s,eG(%JtDd5H_>e-hU+4<*QA76j0Zr=!<n,5QH3@hCSB_o#_K-PT8J#B50+jssP%kDEHDs+Xe@OYki
%T?GsKcKc*7@\W\q1Z25[OA*)>nOE/qM^b*b`7+D;'-<PB6T4)K=0P!"g@05rOX2`E"L7=E1AuOVX-65L3IPLVm0RtIP5M24X`pA!
%\h=S98SL?@%i442V<"u]?qGfdTt]4kdc:H$66EnE^Y+Y^l(-q(h%0MCLo.JXgBUY7]51>>B6m+`fFO:e"5s.Fc3hkr;22!&*@\pH
%=*JZi3;Z3&[%]`K,ji$i/^c,p*>KIMf<T7,cVSNtb,G3@^>qnNP(+q!'2W%ZNj78EXP&r0>Erdf?<7s1Cf$S8V9S1(CrDjAj[J\$
%=gG>Dbs-$H.[MrL)tH]m/0&Y%cd?_QV??3rK%gTLKs)^g4,P"Vb"VQ\(,&_#\W%!WW0"cD:!m@fr68ArVfLXO,fD&s8i/nUro`s<
%"8R:8Spd`RZ]5+H2l1&eI']kO&hh!>BA'3FKuQ=Tgcj()LWY#3OaY[70k9`tQ8\5WZ\@f&V"$dR2L+5Bbl`[6rV1HVg4#L*Z75*/
%:.p"=IJmY?0N\hGn))G(/5O"o,s0b$>&:(n(P)6U?JZ17qn%\@Z0[?^a!l%fL4._)XE<q9?Sj1rae.BMn+8e23I4`<0PHXDm-61A
%6S,4_Q>6rAVTrp_IMH,J.3+]"n#PR4e4\cmr,/\.]Y*nVA^VL>%A*.En)S.MJd/lfO'*&n,&tWH/;n^KVE&It(Q[ki'T7%uB+#us
%QK5@bR=p,^Kup.JPo:A^p"CWca\I`U<7ZDg9/IT9JYf!>;]2^MI(MopXIYQc9MVsFZ;MT:d($C'FIjN6P-&?/:[cHo.O:#,4q!gW
%0.WG",DFg/C#q4;>2_K).g1eFaPYTR11YOl?kM(@J!hTc^9;1lHY[I%.Tb)>_RfCH<Zb%iFGVO/*%LbMAu-AmgKTTWI"s[#Gp\`a
%X36%*B8+Igm=Phnf0#e+6ojpkqdEU]6<l)u.OtA2)mR%ik2L"(1uk"QT4Yc`ghj\_>4JHAC+N<9<Rm#YCV/<&f?`d_m?cQ\5@=(a
%5J@cV'[B=_]4SKVIqc[Kj)en)nksF\dKeNt-Qb>-fX=;kY?67[[Qeu5:Y0CD2s#A']r>pVhc[uOIAc_onhn!6[e.uB^qG)/bQ0oF
%orrIG=ZOu&B!9g#7T-2\-MMYh[es*AkC;g?X"<'l7:Y\!A,WsBe2c7;g:)AIk0D]LFL?O,>ZSF[2bNnCH@9+*0<DpMr7\t3;\#l7
%.EqjN/#bP:>an(Tp@-Z`*X6Tc:sV=M,W-,#$gV`!,^q#!1N7$Ng<A.h'h!-/f1\FFY9&Po?=kaO^$FWY>Mik81]*E2\`^b\$Vh1"
%96"U$F8oGn9is;j^R29[iLR].fdUsu0iHFK&Pf3dd[)9'An,UJ4s`NjY]oT&G5q0<-*imaVN\UK?6SIU]\G=4R,aD:WGc0%JQ?e-
%,3:a5fX?hUP[B@8k_AI4N?j_27hV>BV2U0mY^Gf$h.9e<j'b<><DF%PoL+MGodd6b:JMYcD\[`7in#^7/FZ;jT&ZNhc_Ta7Ks43^
%E`#$TiqbY%a;57L<^7WN+K(cg6NsVg1LBIB,TF/1$Us'tMtN?5iF7!'WUu>1mhF%TXl&ctLuRg="1'Vfq3NU9R@WY%Gs0:@qg>Un
%SIIk\5Bo@ddpjONGNF,HWA\ljO,=K0$"NH`q@;1n9[`OS-T8BYmoarH"LWeE0@C\k<ajS'3V'sL8mkdc9B<FV8I%MRI;bb6o(d0B
%`H@B0lird(*cglW%H?uS2f+Jm24?L#lX3Ga`r9h02ut`$_?0[8\_C>aT;6K$hfVho'sAE(Y0l<J^35t,[q+qI1sF\9PsN`D!;cg+
%WpO.BAqW"(Zc'k)b/f`nMA2^]5#]Kcnn+gVFk1B>\Ohj9=ShG*H_79I+55a`YJ_c*Z$=qP#g6a1(,(#gX<pZk@e$a*fFI!L=tF"R
%MXqlFT/2pH\MA,AVctjs%f(G5NtdB@>i86n8*+**JZl]L=sNBWf/CrCX?kOQ>=psrpgBTKfNo;pGN#fo3@umqhIq8=V+d_kG$M:R
%6[oP'n2'IaFZ$ce]-DB_EAg<<"JY^BjGl&Z;]CR3B+[A)mBV[V#4o-BL.B+V]$se[;X'[%*Qk.tFigX;4jNA"3jia?p$7jGTWp@)
%^L]fDZuMBDag'h6@hI>>S1A:DdSkC`Mo=RZTe>B[7`'e:"L>>VODlG>!(J3.!0<dmU4?+HN.fp=O[+MIgJgm]+Wn3L4oB?+Par@s
%M'.Ta[XNU*;T8'q^uaYE'1#67I\c&^!'(YbX>N`djIF`X#/XH\\$%k*3$P:%G"VKg?p&TW1_@`nGcp.Q@$"kLg!7;D_>*LI.TZ_"
%+2L2Ubs^&.I&,5f+K5U'Z!k3?jLRL=GQ:hMR^h[B-Xfakh'1"uGnG0W:7f)S@uqY>EAc\0T70],NO@YQj5d!(7G%T5F>,n.7V",5
%=88S^#ff=EDk(qFVC:L$9/N=.*+$B>0m7tXe'>?X>,?P[j#AmhqCr&&>WHNB]q+?^HT\9K?$?s<9k.&Bo_Kf&5R,6d_Utb6M$sDS
%lc0Bu87Rduk`.-8C`9qbR2V.HDl0GM26tfF'29b7/jIW$HNg%^OuhZ1VYYKR-:5`Ai?NL?(oVli_Sl%YD`io%DY7k+4JLb[rf/1F
%4>h/73M^=6^9+1^.12KS>qdtoq$Ogs"-QKrGL>i7V6DIliGouBM*;Nlai#.'Q_9/pAE&S.00p2jai#.'Q_9/pAE&U0QD&hbj(.//
%r9R"iLuW%*NQg;SNAsZ[hAAli7iWliD^9Uu!>3Ao`#E]?:JeuL1@[iRqn<Z_ai#,QEYT:.N#6IaMURpFh?bYVp:g;RFs&g.kn1/-
%WBE"(MnIL"2m1&q;,X598S&8G[ei"aVTA^dn7s&O>rKG_[nYALc4%/XMGj2<+-+%B9Mto\kj4eXNMXfN5K#Fo7K]E((Futd[u\0b
%Cu%Z5mX3^$Ub9o?AB;FMcc[7TX?Q%Sg0_4BN8*'0460(P&d1U7s.ggOV2'G(g.GeG#jYYLTrSJVU^,O,l)M8)I??;P'4KSaZJ4gP
%Y-&kC=^5lWMh`$5H4`Fk+5/<49V*#(4DN^OIlCi;Yp?J<5#tjjo(liIR=pa0HN0mq's`n>qKnu[;#@l]NN$po:P"#j4)`)<c&?Gk
%/:>QKl+qEl7I%nCq=k!_pR!COqrPgj^X6rL\pqb%YitBAi*s/8?]!7CO&1$XSq>?<O&-c:c/YP],E2+HVSil3s6;hR+8E>7".tY5
%^QQn(9gbh28Y$QUcB"#9EAa*+`_5o"o\Z%Q`X2,5%:Ahe_]L<':L$oZL[j,G-2n8@>b/kC<DVduWZ'L\C-&Q\bkP752m[5A1j)Zm
%kOc-T"/*6%V/s55'.&BJVR)S+`a<2^9ZtCr8iE4tE`Tgj1DD.;>H112e2,U%3iD-2c8$]:f5g@Hae^jnfAM:Dc>%V\DNE=#H&3E-
%RT<gd;CsJe[^:FR[?SqX-*0=Y&'GC10eO;-JF-3GQi^$^bf5BGW+fP(&2o?qQWQ,B.sbAXbrclFY$2%^36Ia@Q0E$9S]a?8#XDEF
%*@:NgSq@LRfqQ\a>DCF<W>_"70RntT6oWOS1S<dtOYT9sRp%]\[>_JilUK[N.VU3$_\+i/OYLEi(gIRJdrKu&]P7ME>6o![&-9k+
%H<NM(`EC8L>8k/I.6rYk4dX_7eW`Z75[[ngjGU;p^lnpi@u6X1Eq(^=(?ii(9+6=tCU3\JR>"S?kMfZ/$g>QDKHXt;_hqA4",cFX
%J6@Zdjc$9?$X1]PL+ZXB-)*V$VWZF*@cdZ&MYF2J)'I&.'PCQT9BWW"oLWX5&<P/SN+n/+<kAKBZuTja=BUl&0LSpiEhXjW_Y_7F
%lnY4Y2:$"LCtVq!9;K*0AI@O4%B);q1^"?k\kRFF=YTS\9U_5)/FoABeLf5MWlYA=^uQ`a5X7dKL2>qX[%UWJK%4[D6#+T@'d.+f
%7&!8bbbeWsH)+?g!XMLf/hmAF,AYU9PT_8`FVEDebVTm/&7(gh,Yk.7UKaIO;ANZdDTOMnq@dE?NFcWt(f7jq5%Vg=GsW$>)<5Hm
%dmd*lquQVD;F?G1@kaNh'=^_lYV3PGM+eWeGM^[lOf;M<@b#LT9FXCl@HF:?(`)b5dtGf,8o0V]b6WmaTMYg1[OB>bBgp,FNKMd$
%'hU$M$fEQs##c0]0/5Lc<@Xcj.&prPPjnZY4Rg^V]n(bca#!m;B4UU#:k+<W>>T)R!,+r5fg_&k*\),o@DIC^/X2Nd+kklYP4kY>
%RS&q[3)PC'M)'tq8D85^#>q9'bhs:&0FlB]Z/A\EG%fQX<KrRTFF7QukU$kb_?J9pYnMqinqe.#BhS]m"G)4K_jl;15nYr3[#+Eh
%QSmk[?q03h/?om39.\29?uQfn39$9l<2NQ1M^=74:b$2/["o,%eWsJ@0Bj6`.(bLWVXrFd?j=D'liJH5XJqASlloh2<QUCbVM,XY
%e^B=`dB41JDfuEs:ks#kr),*KL]M3*=V?]";5+'N)O0;N=UrAg%WRH;bX*74AaE^5%.&Nr?jh8\]$6XF!r>2M)\UP-k!]<'ciAe9
%PsCmT.'YTd$i1H+7Kr<rU@,go<C8';"Thn0ZoeB1Yd+6?(^N)jdnia37>3BE7D97V"sIfFk2=d;SkY6.;b<=5KsYa7O;3Im!2(d:
%/-c6J9UH"+67&?R$ZZ6@d53(\(E`e<I2s]#f0N"s@T?-!E?G=Z&f?[`r;@7lb(+'QCtqlqk&^&YMFMRl<jG?^h4bZ250`+G`%OuB
%BZOCK"&P042$6IdW3_#NeJr$(&^*gD+oj'e8sF(AKJq6Uk6SIgm/H3qX@rfBLdM@C`lauG0nJsKYRa9S-LqNtGp23)'a2pe-(s3K
%%DZU,$dcTpLepEp=c4a;0\',kPKMB+^ng3#\WJca,R.SL>+hrsKi#Ni#'4@-2#t$L#cJ"_T2#E;4ln[;pfc!8FY)%PE\hlqe/9pW
%+mC*OTGGla(jOK5#Cq/p+qKq='m-*6_#C3!WZ_&0Xu):.ZD+ELb)jfR/1G"G%[KZS]n,lD6VPT_H2taZg6-d?AYM?ek$X%@#=?@?
%9#sP3()gI,'MUH'TOsD2%,E,Y\0t9PC(Sfm2'^;C.#7.!goBOXU'-Pfpc!>.XaD&Lh6\,a$G[`K=+S**b!8Zd_dimq:^=P$:Dl!m
%.Y_2_o5&1"j5C6ib;+A&;"I._SnHJ7Oa3Z:C1r;u9MX,,M+guoR8&+VOp4*&-W!J.B:#:1"/F!OWb#`C)AABsOd/Q6m(@Se(q3Bg
%XF]10NXesI>\7P5@l?cDV>to&Z8huHAYQ.2K2T$(1^/V9$11kM9W8dFMeZ/;V5X3[>b[sE[ePZ`bT9j7A$!na@)T$qYn"3=<[`SR
%;24*X*^EXV"*<9$>/_+.s)BGp5:@ZBYlqYd#s&eo1RU6+W\,sIR\U@.^cZm@!F$A`^dTq6VW^9I+M.ZW<)oY+<1B2Q)_s9bi:f![
%fX3OSX<9*/(:F>UA(IB=C0:ludtkD>js5n[]$6Agd?t%d`@aI8%*_uB4^&&KVJ$7:MKGgQqGL9J9J@i9])^a2UC,DF3h1q!'Hp!Z
%L_N;(&l!5;77<9Yb#!HI3UURC`diXR-'uNH5Z6[jl\<Co@cHnj*'k'.YIpVGLal,q[7mql$%<?5;^PDTV)*?^1J24QB3@,_3(&q(
%EM#a9!0]n(EEr<%p`i0pZPg/D&4@k(6nL]e$;/o9$:S5d]EM&#WWc#1;M\!]A\^C-Wlt$hU<q*t)\]/%Vp\]NdnHZL1T\5;6.g%%
%fX9)h1oZ#JjbY!mQe:GYUWbPCc1<^FBX,Y^WDZ#5iY]nPSeWP)KJ-"fQ"p]o!CB;A4c"k0-]b$JVeSu_,F<E+,KcDA!>@A(BTf7?
%FGp2:H!0lT3_W@NccWZ2+O+\fe<!sDlQ3$!kS\JH'I3'F-?KbO'=nEB<asPc3M80Z,>/DMKj(?Y97s2iAB/hR>pAMS;9!a>V?88u
%W?Z*lhOglrd#cPR=fI\rNNIO1Hp[Q9ba@c@$`r$ma&0iuO'QA`*h4S>g2O/<0I1`N9KBWJN`s4KH;<$SU."2d?7+p)_6F@'UO``R
%T_t&`Hb2u@#R1q5k\+t"*@$qZf/jCf%IHg;bf[=Y!c"$3f\7^8Te2NaF.BV5lB5RO,,Vs>0^NdY7b5Z&[;9OCQJCtL_]E%+)0q!G
%YFu&.=AkQQ7@RGbKOJecaE2-_flRNP6)cR),lkG`%ho<aB*lI^!s;]P>&lEBM:<CrZOM7t868NB`<Lm7)tk2kH0.3AAiHYc?nWdL
%@6WFW`8FIt6pR0=`,_/>R4p>5]3]%aJmgX]<0^l28ohL7XU$/,;AOmiC>KXNJ-iNiK)VXGL$K^JhH<1cKd@WH=c,!4OJQn?``*^#
%a<>k(&-tas"r"eXTHu(qA69/`#.WKhQBQ''bbA^s9ML^D:_&])M^Xd.P:&$EIED\q`Ogb6dbIi4)TlgEO4#SC,mr6TM__H(Ta\%[
%NG4Hi1(.&d?752N+?/Ud7"mWu(&",gAS;sM3K(RcP$!6I)0>Fd\->SGY+H29%Eu9GJ=i/_Z&'KW,)sSmF:G,$@\F3>m-87aB8sPP
%H%G]tSq%pE>$tbO+,l&';4sTRX0T4=8B/EI!R^/3B,S.SA6%)]#36-`)V7ge&h<"5Nm3dWR)Jk]G\Vkh>,YL2aj?B9JC-kr;dc#n
%)\+@J_*"H\bZSOhF*(Z4N-Io?+?0ho81FW@VQ+_=NKqV)&'S1?8"u@aY@g/Xjg(?A/D4TtZQtejB*h3>7FQssKI'c$L'EuSd"]b+
%A/U]4<2/*l&if`NMaMGs+JgPCSdgqhiT/Yl,u'\P6nR5j_U*IlTRU3Bct-hrb]kf^ntn)AYf+nR]Ps2''$48hA_^G*eoQ*mD`^9F
%9X8afS0a`E_l]G.#<[7[</%Z385\rr"0nCCWJio3;A!u98;U)ROL[[0\=tLbln%B*<l[J?W27qmFPBqB-,d*qI3f#_kuHJ>Eg/:c
%8X+4%#q&1i2B_aGlj8r),sVga3&7O?9+WB=Pm.PZqaraa8\U?eB)>1u)&'_TCkSs.0*oU1WM]#3$#J7:5bjc93\sQ'.^;,_7iCo_
%ln[<&Zt[JPJI$E-B"9Zm$-/I[=]r;$brX'I)T76V;pr!T[W%%\k?/O^PQO&//5ao]MjP-=hA\$)YJ#cZ=Y'!]A4^<U+NXYr6'!d6
%fMSr_oXk8'SMqNOnhNcIM'B*Xo!j%^a@R9sYH`VR:d]M\XtE81$ng_Q*YKbc&b.Uok.JY7!?PgX-5'lp';5T(3cke;T1'*PAKS(e
%/%R4^!YDc0/4B^\KI4k%;Mr@KdW8fh\]$BB^'YuV;FI74.j@h7'G3!>JF/r8!C]CcW4:D)4F0L8oB<#+lA4KS-YH`EWe22jAlMa_
%Ta0Fb$W_F&>iRP0<11-=$>bK(.^P[i*NUL)`9'5+Ckpk"ZQ4AJ+ssTP>rY`$-QSD.)M/,4BdK"LMU&=e<>QsE-R6dD^OltEQ7=o`
%G'B*2:W?qd:;;=5]CQYW[Q?]5?/2!;E+Z`RN\]bBgLYu??uGO\;\tJ*KHT$?a8)V3YGe:-(u:?s\L=`=H+Qajh$;!c$mciBDE3hN
%;CZ)XBpVXO1:Z4Q;]9O[:eY.A7g#*69h-Lsm_#9/U)d*=PG;)hP9+U$0Ql3`a<jA_ACI9(la<8A$(^$/<HP/b@\ilaZ>qOa//m=*
%e7b1>e0rI!2&[=P0]ZdR]0D,jEE!iZrY2aW/=[O\E&K;ZB8KQ]KJ&`,*G(0Bm4t.DEIP4)0%$5C*Ld[]Wkm'+bI,\s2C,>$.^:GM
%/sE5OE3)bTA\d,`RS(dn8`eo#6.>)ofL6Q.o[E2cX9^ZuaoVYb)NaADdV@i_/"M^tV(>o:^]8L2m7elWb*m>g,6_7?QMBPsble^#
%6!2L38sV\,.2b[N3%Dho1uZ6uNK:)J;+$rM8PL.?O!7poK%mcM+k%]`#O$t]GnYpj<5bjWl+OnG@IMj&nl5+ujLMKV&.2DokY^JX
%mhfFVX+oS8e@!JQ]d"7HH\ZF,r;RZsQX*1G+q6b&]u/O1":H@Mm_5JqN&4F)1L`Vn[T+#99:W.cFhrmC+8^Mn\=C^3@b>dnT83md
%GB7i;r+=@)4AD6$b@V-*20`lBb@_pKX.\(HG1d?QEYpnDG(&UegEpjbZ&?G>_8>-0Xdf)m4E#[4_PF(f@efP@2X2"jI%&mJ\P0nL
%n'l)UIapB#VAV%]%"/0$<8)'T>`c160$%Ji*8'qd*u=60:<g`#\QgO5Y:"L5]J!AHhEkVd*f`0M)4-\p6()TRESS_F%O_\4h1sln
%LWfBOJT)XP\5%&dmb;$6!eMeiYKKqrI,m:`[i7AKEQL8sD?uV"(r6r_+aKVRGPll/\T_S.\G=s"&_rddJ8Ln28oB3n\'?MJr9Ui!
%e(s0"Qi$<.]7%M=GP_Gq]+$MaDqQ.F*[\nU`SI\F3]H98BR"@Xn?tX&aD]jN?<&PXMnAol$[;KdG'BDZ8aN7jOZjQOibk6XBKs<;
%4g$ib;""%P=RPVN+[$WcqgojVp&thJ>;G?WNc:gP[a?_L9&BN6O5h]of*ZY3GIT<IiGcQJ_Vm\__r9H`jRAr_6=26MrG;bmo3@W_
%c7K_/p>[tLl%&eP#mB)pgSU($Ws@ZKRq10;C+!VJRRt51:-q(feD*8Oh)DTp_.7p!l&MisVC90Tpj4i[Y\eA],62/Pd%bgJ!!;u:
%4#8X?&^RMR=N^G<s"mMh3k&Et(4ga#.[a*9KY6Vf)E35Ciaf[]jW:>X+#]72HsW?6M[a]lrU6(+^\P(ZT76S*qj1Z;qsA=Z^]42s
%mlu:#N_@&HV*epDq9A@mI.oR7=4YR0^]*lqe*!'95Q:W%5QCZPLQ=[qFk$]pQ0Wo!_tSZZlrU'f?hs*0c_!G9`hhdt&&3VhbNDM-
%c$K3)044_U:Rhc'gKo@+l,&C%JlSsK"CnIMpNJAX?a05uLH>t&lkM>SX,ol`Mi_-_Bt_::hEaaSX2e4-)Aj!8#TI%5iWc&Y`3u=^
%XW%LS[s$;NGTdCEW<tf0EgYbDhGe3BUmG#eDsn1W9L4"tHFZ*o&lI5m)kaE1'L+GceEJT_eCZfME0je'nlLu@G0/8H#L;V&:mbPF
%fEq%Z#@8JXB@q(a3D@Ic0M%M$a"JmjQ*FZ-,*h/l3d%4Y1,Pp5eXAA"0q%WNCMQ8N*75;Y7G.c=4/)#jq7A!/rgBBg%*%qpNoduS
%'JnL`4P9'PMXi^27CGX$VJ=E$jD_74Hn%3cChRJ<DKPicfaaM6`E%:0E4OGQDSb&+(CYl;R2%W,:AQX\kMl"kfep5dP'Db"8F#qs
%c/DNd<tTNM5lPrnI_j7cW6h(;K8k`I3JM>ParYk1LlHDCNTpeHkKR@?;l6Uk_oVu4hsK#jf&QP/rkjZ:YP/s6R8gn^Af)i=o2^\F
%QqXN=jF!BT:AF4uqq_!+#C:s2Hc^(:HgIde3CuYG.RQ%'R_I9\0&DCtT33;NS<68oVOq]oRT?,g`+Imdk8n/4S6r`>2s,"8'4jU,
%PT[=n]3d6C6ZW?`'t;].bW@1+PWep+$A56snsG^-#YA:urR#,f@"^g?r[UWoib?Xf'9F>I@bTcUO[[6Z9[fI;c.,p*6sUA68`>pG
%c@4nH.:@MTJ\`Dj\*aSp.dHX?,GK'RJ%se8"DT8bAnQW7X7Zl_Dk38qo,2Qd`GsckCmP@e`&8C6YO,)+aZJ?2e/"7_.Lg9-OnJuC
%i'_"JD@:o5Bu0*n]c#lN7!gnf":t^$*jej%7GP.!81Tg][0Meeh+[MFFP:=3JB9V_<?$3Y;/@tNW"U0(J&uu)(!dtoaUg+)TW"Wb
%i+)/:4$1!DiFmi^*WN5SqpgTUW&$Q;`P-uI3Ghb]qDP+m9\d$J4ug/jaTD#09M2Wd,M?4DN?C.qG/L?npLjq?M3!46J,qJ^0m%!F
%.slsV:6eaG=(thN<Jj_ijB95aV$F$X7(6&Tn6X9sF[Vs&LDZboTMYLthMmCUOIVQ<[XHf6`m.SJH,r-X[okW;e=e$C#1AYE(22uI
%`q'Cp#D,r*ZlrOT.o+4O,<&,,`[SI#c/3I"Zl2!J<'l9FBUb!@6@B3(@<9,>mi7P?(3Hs8NhXsS_B8u]<0RmG_A%+&<6t[h[bc<K
%50'UA'aYWP9cI!ZO&'ia,X0,k@XhY-]DS%#h_cbTa5MkdFFk[]bW8dqg6j,GE+3Y+cHaS@M45U_NtA=H!1ICI`^3+n</-<g<1aIn
%%A[\$KKm]G&-YY\Pj0GC/"fb71F1WL_j8#O+/C4o+Ld=,g/U7J(K%`P"Ts.7l=E\i"IX:#W$YgE<AA$aMAn(r8^*?@M>98kAg64I
%9Fuou=TV3&RU7>l]Vp3nl?<m&[k.;ND.WE6=RV2l/fK7=\mRX:p^T2QHUsI<Kq>QOLs,-a6(PKb$m\u+TN98e&..g#VRu42_QeKs
%ASdr;s)tL7L+;]+^$?!u6\eB53Q//oCtqso+QR)_UL0NnoNo2P!_\ltT:_:00V;Q79RJVKSSfO:i9ioo2VB.r%pI?`d?N)EO?Y&h
%Sa(6Sf'[o5e-iWA<HMtcR2[qMF.'kLAoXUkZ78]FolA,cT$!e>YdW2YAiV@I"sO,G9YoG2qj#*FLUl6R)NUGoBg/d1d)U)J15QQ@
%;^QNZDqmp,3jQm"6a0%(AYqh`#u7eJ;@+8aQYU`u3L]a($c@_O(mhsC0]n_HA1qMp5?:n>&"'H'D$X?p:s%'RYAn(e;'TK4Ah!$c
%f@1(:^/q/BRuphCUV!MSfn;d/?9'oj/V+IW\>bpFb.n'?m#f"e6co?fb\NfJCEV.a-^2V!OZAXSqEu(NC'>KQ7jY?qP*2b@c/(B<
%&T%J(?"Fp/4J:+)+iK'_XfbOha?Idk71(LIQ`$5<biE@ChD?ShOL&9'BZRiofBJc#Mun$_h;j#FfTmNsIC_Ed'7bX7c(cJ/,/g/M
%FI,_=dN6<.Df/4ZjX]q+2F)Bm6HIZZA,-`en1__eaK,(h[D@$Z3bW2Y=Wu=Z+rn-0a6^`a1T3j59+#:hi]pfK]#9_)jEKgX\jo&P
%S^qEJco=)5_dA*li[Pr-B'W?@4lILY<mOn9:fC;]50#Q1d^%5"iCu(.OiTtFD4>;V-V/GCPuD\m:G>//i7a(tc+>"_NPiMpf@#(_
%kFu!Xb=,BM/ahq,nWI^tM)s%,5K'O0L!n[4T`ABpBHVpVTI%<'#Jfm>dT)Af>*r@[d&3KYK+qZp%"m$ObhgdW0UP;f+)&"AVu0g!
%C4r57BA]YT[`=dHP3>f<F']*mUuiLcZ@+#hoHl>o%O5'10I/!:FpOZUc:j1ajsB_s\t$sdnZ&]F2^c9#/Js/40/*P/)h#q)2r0^t
%?,2!:*8mDQGHtN23NG&@dlh3E_?Fu_9dV%h-OeeuD&$fkNBgapNr.q(/AcO.X=oDdV^Gp$Yo;,..E6niW'eff>0@tF)=6iu&N!0W
%>9Qp-DDlj1f%/BshJ`J,7t*q]%<037Z2R%jIJ=j3)2"S\\i_!1Q+U&B>p>N/R3FsJLa_;_98p.5A94/nTHf(Pc@f4UAo\9Y'h,@E
%f#ALOL'&<,PB4@`e"Xdh0kp07oW2e3&UL_HQ4;$_U8*@da545Tm)^]/S;`Bii^aciP*=Mg5ORsW2Luj?ENBmUCPo>&;n.O;d8$D0
%FWZaq,FYeqOc;bhJ^7DfY;T2!DY=YcVpln1%6]3`pMIP2$W^d@Vs;fFG@;uj.pd56SL[D*PeFhh<cR^U?C<R7)T-mg8,Ue2%H[N!
%6?mBjdlj@a5SOO@PP=t@+!\_DShlL*@0eb#&8I$4.3V4(/1&LKf=@[E*g3)$*-`TD1,3miQUgX&>fA<fg3[2V9a>_GNsl3!\TQns
%0snuW^+dVm&*n4].+ZA,FPB+3-eS6,"79A]BU[PI(hW3ae.TA;2^Eu]b7g#Y,pl'K`;K"C)t?+DR!6S-Fd^UAV?rkjMPRdQEOi87
%Q,A*P-.E^-oPp/OUU%FcYG"VDPC"\<i^6eR!hG?D&hkhV>Z$?X?6!(ag!:V6JDP'EWbb(<Atg2Q2k+qrX+]Itf^LLi@?e7B/Tcjg
%Zi?&3WZ\A1`7`UCQ2(Mo%V6.IT_KS6__eHP6'e9Q/a5!6S^ZUYc#VG:.TW8-Eka!qCLei2IS\r/i`)L$8'+EN\%NToGooZ.hsFk@
%mu]brC9,T<`pS\SL+TAlS!<O\Rrn5#3l],4!$d$KC,k8=1r7SPH-!SZaEP42K2_.^KZ@LZIm1.7"iJ*m])h6f-<JEE@9Y?!F3Du2
%@W]*"dPdZ%1c)9B[bmsh5%Ese?"aOFnEMd2CGO&5#AM;n)%PAT4J18?=$=jh>mq'<Eoe2t'i\d*_kn/MFk/?`$4q4,,ALCn1?NUH
%9rm8cI@X56gDGU&ehqPQnapj8f*Iq=fGQa3??<jW)*6mRV^QP3kZ$Ai>+ED@3e^J,T8h33c/XbOdRqUVf4WaCk+IJO@8i?r1(*U]
%Rt?HZF:"G.fGTKECEK(.Vq;U44E#WLSKZEkZ(=5DNFg*L5CkG^fPc-=?%]$6(@2pU8:+?_3PZRndU$l`[^kOgp8S7>;FJ8Em0+#1
%Bcd#U=03'tgXBK;=k0qBb^.YobsU<Lor@B5Ra.^qJ?3hiaEjE0RJ-1jbF/%_VbNfV1[F/h&Obp.HI]Sc]%aPtifh0.3jN''AAXsu
%S6'PP=pF@S0@S6j=D[r[H&7"oG3G@dK"7SJiK<bA"hFhd:O3>p0-*Wf$ZmZ(1sAP0j;E+f]nFLWgll%eF41/kU_d8XZNfPLklk'Y
%S<+u[`?[#-s4``D&;eVsman8$kXM[]0Z9rl8>sV_?kS3qO!Eo^.#3/tlggK7dYlfQ.Z-#ZFCJn293@%AE=BCZO9m5HGV,9C1[2m%
%CSXJKM^_Q>Gu&e'L+6\<ZX/U_=@q1l+F-o`33llRgDjA"`tuBq30g!!>dI=#f;mpg2"to^Pt`WQiq^`jJPG-Wd':XGjV?3Id>[k]
%%L+3fKu?:\'4g&:>!:B^\%;V5Y,ppD=^aqIXF4hsc%mZR#?tEU@i7A5+8V(@o(('sE.:5-,GlSO'8gp-9^29=`!GgQgT'[.1,WMu
%nbR]\iGT>I]"L0["]8MPJuQ\BF,S`s&DI5Wp;0R'kHdn"T`gHhWH]kbHsi[Hb[kSCPLS$%'c,`k/fWO^MKk8m;1K(6OP[iLm#b'W
%*Bea4c7qe<h55@?"<h/Wh*nj!-+$N9pGe:`\MbA)3_!Ms?tABP82^_<.l$c<]_YkWR$,JRM(TsoY!ma=[fs^"d7/?-K%8I=JP(9^
%kfZ\=bd!`_$Rt(9h*Dqrir%;dm8JKNk#rCs'/_;J)#G@H"A'ocE.*rD+(rEW/p?)V;i)rk$rH<%F10tDNnr*qaG?h%hR..)pEN&2
%7Y@IH)a[C3[&;V*_S!?NMS'MJceu'th)nU=.^HJlV3B.ef'\KAiZ-)=;ibi&U6h7;;(QGaW^elh2r]+HcU]MOWNOrY0J=fh&7MrA
%qGLEB&ho%l#+^i&$OaD->AH5[0:E_"2OAY]ig-dhK,;%#mkmgB1VfHPi3dOB/e`td?C0J[8$DjDgZ.Ygg<.)=>Y!KqDGcS3@roQ0
%<eqZqOG4Xr#:88U/rsu)g*c\VL$1XMR,Q<O^_@&/-n.>Md9Cjd;lpiaHo[=S+sLNlT7LRW3`d"_5:!E(a<(0/e!:gEj,t3a5(a82
%"jeNJ1faaK]GG3Dhp,MQa7`YT^JujlSml3?dCEcJH3lg8ZN;0r$maV%:BTY&=/O'/b\<A5pm^#CmV!*8_hN31!chF^VT'2$6f'qm
%R8i?T4DmpG!V;k_Sg(<tS]\B!cV`QUS_3%@*nFY[hT8AaO'RS&qg-(2G;!Y"Dimdf\tOB*2TOOVgtpgXXEpWbm8IhNWo#lQBY7fD
%7slbdf>6pC)E;!*H[#qT:!kfF]?b]5?kK'HrsK75&=NH_f_K^C9[Na06'j\5Ds06BY<^.?5/-9!RSaaM6suD*,A42]/6!+,%9%6R
%(LF?b+Vc]mL=D;Bmdqb:!@G1W[l!TM'\c`#BVNZ*q2`$"r2j`;E9OO/P;\7/D"`c\:06tXNh<"R$#\/dYj'd/Y[^4+n<d2<Ya:QS
%0/"-*E-j>p#Eajj_;'a83pB^?O1a-JoBGem**mF%*d8rX]u16BlB_gM=afc-M)QuEe@;Lt.@pT<j@AR)kt,fadl/"1RRZuj\"<tJ
%F-f-R!`]6[Xaq3qahacn`@JO0DG*`JB+d-tl\p?-X0IC7[$Rh^a$TPIkq/Y/7>5uU=6:(Q=/tW#7bMc?88+qtM[3Ys4AOn.6)%?^
%#/q`PZp.<R4p`nYnm)pj-!=<Nm(\iKa`tS'j:gm#n$0%AY]F+M,''itZsFK&LarAJY0/MchOYUjK"(,!<[+<=dhI?9,D<A:\B^D=
%cS)LULS=fM%Njf%c2f!=jmHa(U$@\OfSieY?/5qM&O+8!.\/Duk,`h;k>MfK:)e-?I=_ps;/oYLFAaIG)0F0q_qSo9k5+b"Y6=`&
%QFX<FRV:.(GEk1g&AX8.JuR*kQB(VMp8-C_>E#>g,`AN4L<@Ak/*_$[j_.%D(@;#G'"<tfmMNt])[C1<8';s"a"N^slC!1])T;#8
%27O\1Ge<j%Sn/qkRh%S94WC6uXa;qrQ$MC,dtgJmF72`9]!E98KDMHJ&V!-(a6Mr]?Ai#q<MeR;0^dW9WA;mmLTofso-)86VUddR
%eEL@X;)40sJ=tp.b`"QpYIi\YeEIa^Xj6@50t[oZot)%(G+;9KScSmumOC.a3d/O.D6[l@Qsl]$KF;>8h>:Dr9T+%KQ!Rb\->1fc
%Zc/Cbce\GGWbsgdI[B4/F#SaIadOHHgo0/oMA2b7i[`Q28N:5[1%%M457g8Y,_u8"juokMPUS=pB.AWYnPuG&dS\NkW^D,6!8dDC
%'iQf<+&\r_g`<"%NHn@th2ABQdXDhiV2.K[HA<C_M;GLheY0E@.>2)T^t.lSf*eUe%Efk'I>2/6XbHo[,)X)]OZ#uJRt=IYb*G?;
%;5DK1>dk\W=GIb[999mS\WZmYA*l?KWF#>8RqM0RMoa?]9orX%$safNh0N1%E[+!fXh,HWI<dbO^Oi7F@t&jsA=,=5*--4f>!gd]
%1_efMlChj;@rPeZ_ohj;G1qoT!^"oG]_X:AJdZb4pM8E(/76@+7K*"qT(L[Jn)AI*%dZ<2<#M1C#(43=Dc5.fYfj_5!k2@)A!^%W
%N)-4W,>:;^FjpXSP7%WSgjZL:@l/RS6&g/m(o?S,'\H-"1l6[a0<a\up?Uu1]e(e4bB"3\ng4lWf&>:+]F0M*HI!/cF:NGGfr.@l
%/NO9d;oQX,<1KsEcL@t#*G[d4:o?6<iu_Etq;nHEl?T1e5"JU?Q(C+P8T[t\83GN+/MmW^7rC"V;e'q<-DQH(0N%^8X&7AA:Doa(
%m,$.1B%7:'^oD#YWqUfAEL%O=%WASiM'/Zj3UBWV(0clW]Xq#2?=8):\futKSt0]!*pqhAaM2IUL\N#>E8,)I1Hr#DeTEDjpbY<\
%p,JO]BhGJEV$K.5V<eLs8rj>.fXhCSe,/m$l%$gJ,kuI]hBm%>:FF=0`UK(&6?$q#);)Dh2aJM>'IH8u'^EljI/smDYK1o7h6n\*
%fSSG]AjCFbjZ.?JHtCA,gN)iX9D\(<(68lF';\9fc;;*F1'ZRTM+@3`Q`>fI-g$QSAbE^="@`3q%l4HYO*8?A3=NRgacI.<C#?kc
%0C"kD>gD7sDN!KjP'u/Q!!6S1ie%Qh.4&0DgAE0C$;l]WUJsk/;2M!>WAdso]8.n>:SNTdlPp<q^Q58hMRr6oe=383F[c,,kB4]V
%gZ/8?-];i0,AjHX(@P8,W"7LAGYfkWPWOpTg9PHl&Ql2M%k%5m+Hh)RL<R6@0\6LX=9KO0fpn&fnlL%W8?enu?1L-<%P%^+PpB]c
%Q_TkE%fc5&Ln#F@)/"'_OLFa%R4Gs56#Nt/;Dg7Z>BBID?:BOaM-CC,OQ?o)i4uQR^<slM;<j)DXB9/1Qmr]sMEAtnYY5BI5'cH.
%Kb?Uf;l-8jT=.Th1FM?dJ9^W.gLcbQ[d6V>9!TF"]KGrs,F[&'6mZPBffg^.JPCUs%JJ64c)t=%k,:^<GH&][nkq:>9]eK*'3-aO
%#q&llLXgfaplVHgf2QKY=YoSi8phID=W$>=g;$ohC1PDD28b[R8"4mpcss1<Fk.cO<Q$p'>a*pLB4XF_(I]HH%1&5UBUd<K:WX5_
%Q4"$;NuLAIDWGf3oL\BN5+a+>5tY?*e:pKaDq^+qi>p?%'g8ZhBbmhZVZ56nC5*@$j)&XX&]jhr+ui4D=t"\EElujRrpB5t<A[IY
%+N[b128scFG)YgcHmk*0`dZ?\LH<_P0"++>)Oi#3CA(tX;3[YO$T.eZ<9BPYU3LN)o826JlArD6fiQ<EI(oHNk-5=uSnG'"lSO%K
%7jX2oMVQihFm#YKEj?nLC>'j$@"":#a,u14M<P\Q$NqQtSqdNAA\W!F6P3X]b7ERTnhgp?(%\pR?hTSMRi9d#ZHp!1S><'6F!"Zs
%&qVXO`P;+6-@odslC4[^Vnhs?-aXN6ag;=%*p;,Z6RQn]%Ajqr$Dn]^f]i@!jm2BoEj+]CmG3W8":Bkrc3?LN$:;*$J@61g:FYUr
%'\2InaRoIG%]'>6C$NS[1pEW.#$%g>T3bTa:K2[!A]=I#7r\a5=^rHr'k.,#ScA+0a#_dVGK,C^H2[gYIBu@i&fNY"rBjd7ZYOsg
%`!MNqB&5b'`Q['PV3C\&/GUbISHW\`"TR7MdQ!;+qT;B13L%+<2#jG0QOLb`64+\"rUQR]CrJUrj#(9k[b6ZIA$Ja@f6U3r<W+Gg
%C&;mBgF"I`2DHgC2pCrW+]2W=a>#*)/a?5VDVaqbW2'2VC/83]+oC;)f]$,_bW4!5:(J@Z=6ki+!=D!R5rQ/N%^+rh2V:s']Qbr2
%=I>2m?S@e(l;[\Z#o[5H@?^j^Fl)a'!;<?IXY8Q_U;4r&So*`tF4d4O;Ugk7[>&"$`&[/JF&mVQ49$T'kBEr9n#:VPSW+Vq*-l#s
%UkAs)5D'7$FATJa9Gg;SCR8rb^MiZl4IM*'-rJkpc>mr/Vlo!R?,rbrhOW:_H1uOGS]pnc)mq!!k1UHeH'VI3rtp:X;/mf0nO2cY
%HRR_2MCXTDN'/Dk+EPtR;GW]%8^U6-<7=QKk13:@=48Xcn_I%-k2p*?>0=:?n.3!#=LR"jl_l8`/ur4T]p]1/Oar^$GWG%Y-\nG,
%:Xd>Q%lS"5g#^^Umsir4RX@h9NqFfR2fHV+a.lAHrEK<mlL03"ZbDLsX'`R;k*uDKme[NEq"3AQJ,Aa"h=j-`pQ#h<hu3<p%4OL=
%AH1!!pRaYIr;#BN%kg0Ip#H(&fId!^hgG%-s7j'IrsQ1.H`6~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 410 1097 a Ft(C)8 b(S)51 b(C)8 b Fu(A)g(P)g(S)g(T)e(O)i(N)
g(E)93 b Ft(F)8 b Fu(I)g(N)g(A)g(L)50 b Ft(P)8 b Fu(R)g(O)g(G)g(R)g(E)g
(S)g(S)52 b Ft(R)8 b Fu(E)g(P)g(O)g(R)s(T)1632 1369 y
Fr(J)t Fs(U)t(N)t(E)33 b Fr(1)t(2)t(,)f(2)t(0)t(1)t(8)871
1941 y Fp(C)10 b(D)g(K)59 b(D)10 b Fq(A)-5 b(T)g(A)61
b Fp(S)10 b Fq(T)g(R)g(E)g(A)g(M)59 b Fp(A)10 b(I)1617
2789 y Fr(P)t Fs(R)t(E)t(P)m(A)t(R)5 b(E)g(D)36 b(F)t(O)t(R)1316
3094 y Fn(C)10 b(D)g(K)60 b(G)10 b Fo(L)g(O)g(B)g(A)g(L)1600
3350 y Fl(C)c Fm(H)g(R)g(I)g(S)34 b Fl(S)6 b Fm(M)g(I)g(T)g(H)1649
3655 y Fr(P)t Fs(R)t(E)t(P)m(A)t(R)f(E)g(D)35 b(B)t(Y)1492
3961 y Fn(G)10 b Fo(R)g(O)g(U)g(P)59 b Fn(6)10 b(5)1569
4266 y(S)g Fo(I)g(G)g Fn(F)g Fo(I)g(N)g(D)1487 4521 y
Fl(J)c Fm(A)g(C)g(O)g(B)34 b Fl(G)6 b Fm(E)g(D)g(D)g(I)g(N)g(G)g(S)1621
4735 y Fl(I)g Fm(N)g(H)g(Y)g(U)g(K)33 b Fl(L)6 b Fm(E)g(E)1566
4949 y Fl(J)g Fm(U)g(A)g(N)33 b Fl(M)6 b Fm(U)g(G)g(I)g(C)g(A)1815
5255 y Fk(Abstract)p 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fj(1)p 0 TeXcolorgray -148 -144 a Fh(C)t Fi(O)t(N)t(T)t(E)t(N)t
(T)t(S)-150 80 y Fg(1)178 b(Introduction)26 b(to)f(Project)3116
b Ff(4)68 224 y(1.1)197 b(Who)22 b(is)g(our)g(client)66
b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(4)p 0 TeXcolorgray 68 368 a(1.2)197
b(De\002ninf)22 b(the)g(pr)o(oblem)55 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)p 0 TeXcolorgray 135 w(4)p 0 TeXcolorgray
68 512 a(1.3)197 b(Why)22 b(this)g(is)f(important)81
b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(4)p 0 TeXcolorgray 68 657 a(1.4)197 b(Our)22 b(team)27
b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
p 0 TeXcolorgray 135 w(4)p 0 TeXcolorgray -150 880 a
Fg(2)178 b(Requirmentrs)25 b(Document)3040 b Ff(5)68
1024 y(2.1)197 b(Intr)o(oduction)46 b(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(5)p
0 TeXcolorgray 365 1168 a(2.1.1)196 b(Purpose)24 b(.)42
b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(5)p 0 TeXcolorgray 365 1313 a(2.1.2)196 b(Scope)47
b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(5)p 0 TeXcolorgray 365 1457 a(2.1.3)196
b(De\002nitions,)22 b(Acr)o(onyms,)f(and)h(Abbr)o(eviations)52
b(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(6)p 0 TeXcolorgray 365 1601 a(2.1.4)196 b(Refer)o(ences)61
b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(6)p 0 TeXcolorgray 365 1745 a(2.1.5)196 b(Overview)28
b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(7)p 0 TeXcolorgray 68 1890 a(2.2)197 b(Overall)22
b(Description)40 b(.)h(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(7)p 0 TeXcolorgray 365 2034 a(2.2.1)196
b(Pr)o(oduct)22 b(Perspective)40 b(.)h(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(7)p 0 TeXcolorgray 365 2178 a(2.2.2)196
b(Pr)o(oduct)22 b(Functions)37 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(7)p 0 TeXcolorgray 365 2322 a(2.2.3)196
b(User)21 b(Characteristics)40 b(.)h(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(8)p 0 TeXcolorgray 365 2467 a(2.2.4)196
b(Constraints)32 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(8)p 0 TeXcolorgray 365 2611 a(2.2.5)196
b(Assumptions)20 b(and)i(Dependencies)36 b(.)41 b(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(8)p 0 TeXcolorgray 68 2755 a(2.3)197 b(Speci\002c)21
b(Requir)o(ements)76 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(8)p 0 TeXcolorgray 365 2899 a(2.3.1)196
b(External)22 b(Interface)g(Requir)o(ements)41 b(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(8)p 0 TeXcolorgray 365 3044 a(2.3.2)196 b(System)21
b(Featur)o(es)48 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(9)p 0 TeXcolorgray 365 3188 a(2.3.3)196 b(Performance)22
b(r)o(equir)o(ements)56 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(11)p
0 TeXcolorgray 365 3332 a(2.3.4)196 b(Design)22 b(Constraints)71
b(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(11)p 0 TeXcolorgray
365 3476 a(2.3.5)196 b(Softwar)o(e)21 b(system)g(attributes)54
b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)p 0 TeXcolorgray 96 w(11)p 0 TeXcolorgray 68 3621
a(2.4)197 b(Appendix)71 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(12)p 0 TeXcolorgray
68 3765 a(2.5)197 b(Change)22 b(of)g(Requirments)82 b(.)41
b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(13)p
0 TeXcolorgray 68 3909 a(2.6)197 b(Final)21 b(Gantt)h(Chart)54
b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(13)p 0 TeXcolorgray -150 4133 a Fg(3)178
b(Design)24 b(Document)3243 b Ff(14)68 4277 y(3.1)197
b(Overview)77 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)p 0 TeXcolorgray 96 w(14)p 0 TeXcolorgray
365 4421 a(3.1.1)196 b(Scope)47 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(14)p 0 TeXcolorgray
365 4565 a(3.1.2)196 b(Purpose)21 b(and)h(Backgr)o(ound)35
b(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)p 0 TeXcolorgray 96 w(14)p 0 TeXcolorgray
365 4710 a(3.1.3)196 b(Intended)22 b(Audience)67 b(.)41
b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(15)p 0 TeXcolorgray
365 4854 a(3.1.4)196 b(Glossary)67 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)p 0 TeXcolorgray 96 w(15)p 0 TeXcolorgray
68 4998 a(3.2)197 b(Design)22 b(V)l(iewpoints)64 b(.)41
b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
96 w(15)p 0 TeXcolorgray 365 5142 a(3.2.1)196 b(Intr)o(oduction)57
b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
96 w(15)p 0 TeXcolorgray 365 5287 a(3.2.2)196 b(Context)22
b(V)l(iewpoints)46 b(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
96 w(16)p 0 TeXcolorgray 365 5431 a(3.2.3)196 b(Languages)21
b(of)i(OpenCV\(Composition\))48 b(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(16)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fj(2)p 0 TeXcolorgray 365 -144 a Ff(3.2.4)196
b(Image)21 b(Filtering\(Algorithm\))31 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
96 w(17)p 0 TeXcolorgray 365 0 a(3.2.5)196 b(Computer)22
b(V)l(ision)f(Library\(Composition\))k(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(18)p 0 TeXcolorgray
365 145 a(3.2.6)196 b(T)-7 b(ext)21 b(Recognition)h
(Method\(Algorithm\))51 b(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)p 0 TeXcolorgray 96 w(19)p 0 TeXcolorgray 365
289 a(3.2.7)196 b(User)21 b(Interface)h(T)-7 b(ype\(Logical)22
b(V)l(iewpoint\))35 b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(19)p 0 TeXcolorgray 365 433 a(3.2.8)196
b(Image)21 b(Converting)i(\(Dependency\))79 b(.)41 b(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 96
w(20)p 0 TeXcolorgray 365 577 a(3.2.9)196 b(Runtime)21
b(envir)o(onment)h(and)g(Neural)g(Net)g(\(Algorithm\))53
b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(21)p 0 TeXcolorgray
68 722 a(3.3)197 b(Conclusion)28 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(22)p
0 TeXcolorgray 68 866 a(3.4)197 b(Design)22 b(Changes)37
b(.)k(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(22)p 0 TeXcolorgray -150 1089 a Fg(4)178
b(T)-9 b(ech)24 b(Review)3439 b Ff(22)68 1234 y(4.1)197
b(Language)21 b(of)i(OpenCV)i(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
p 0 TeXcolorgray 96 w(22)p 0 TeXcolorgray 365 1378 a(4.1.1)196
b(Overview)28 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(22)p 0 TeXcolorgray 365 1522 a(4.1.2)196
b(Criteria)46 b(.)c(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(22)p 0 TeXcolorgray 365 1666 a(4.1.3)196
b(Options)32 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(22)p 0 TeXcolorgray 365 1811 a(4.1.4)196
b(Discussion)56 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(23)p 0 TeXcolorgray 365 1955 a(4.1.5)196
b(Conclusion)40 b(.)h(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(24)p 0 TeXcolorgray 68 2099 a(4.2)197
b(Filter)22 b(Algorithm)34 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)p 0 TeXcolorgray 96 w(24)p 0 TeXcolorgray
365 2243 a(4.2.1)196 b(Overview)28 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)p 0 TeXcolorgray 96 w(24)p 0 TeXcolorgray
365 2388 a(4.2.2)196 b(Criteria)46 b(.)c(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)p 0 TeXcolorgray 96 w(24)p 0 TeXcolorgray
365 2532 a(4.2.3)196 b(Options)32 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(24)p 0 TeXcolorgray
365 2676 a(4.2.4)196 b(Discussion)56 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)p 0 TeXcolorgray 96 w(25)p 0 TeXcolorgray
365 2820 a(4.2.5)196 b(Conclusion)40 b(.)h(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)p 0 TeXcolorgray 96 w(25)p 0 TeXcolorgray 68 2965
a(4.3)197 b(File)22 b(Conversion)g(Softwar)o(e)28 b(.)41
b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(25)p
0 TeXcolorgray 365 3109 a(4.3.1)196 b(Overview)28 b(.)41
b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
96 w(25)p 0 TeXcolorgray 365 3253 a(4.3.2)196 b(Criteria)46
b(.)c(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
96 w(25)p 0 TeXcolorgray 365 3397 a(4.3.3)196 b(Options)32
b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(25)p 0 TeXcolorgray 365 3542 a(4.3.4)196
b(Discussion)56 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(26)p 0 TeXcolorgray 365 3686 a(4.3.5)196
b(Conclusion)40 b(.)h(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(26)p 0 TeXcolorgray 68 3830 a(4.4)197
b(Refer)o(ences)49 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(26)p 0 TeXcolorgray
68 3974 a(4.5)197 b(The)21 b(algorithm)48 b(.)41 b(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(26)p
0 TeXcolorgray 365 4119 a(4.5.1)196 b(Overview)28 b(.)41
b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
96 w(26)p 0 TeXcolorgray 365 4263 a(4.5.2)196 b(Criteria)46
b(.)c(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
96 w(27)p 0 TeXcolorgray 365 4407 a(4.5.3)196 b(FeedForwar)o(d)23
b(Neural)e(Networks)65 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(27)p 0 TeXcolorgray
365 4551 a(4.5.4)196 b(Convolutional)22 b(Neural)f(Networks)31
b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(27)p 0 TeXcolorgray 365 4696 a(4.5.5)196
b(Genetic)22 b(algorithms)76 b(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(28)p 0 TeXcolorgray 365 4840 a(4.5.6)196
b(Discussion)56 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(28)p 0 TeXcolorgray 365 4984 a(4.5.7)196
b(Conclusion)40 b(.)h(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(28)p 0 TeXcolorgray 365 5128 a(4.5.8)196
b(Refer)o(ences)61 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(28)p 0 TeXcolorgray 68 5273 a(4.6)197
b(Container)22 b(Softwar)o(e)50 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)p 0 TeXcolorgray 96 w(29)p 0 TeXcolorgray 365
5417 a(4.6.1)196 b(Overview)28 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)p 0 TeXcolorgray 96 w(29)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fj(3)p 0 TeXcolorgray 365 -144 a Ff(4.6.2)196
b(Criteria)46 b(.)c(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(29)p 0 TeXcolorgray 365 0 a(4.6.3)196
b(LXC)35 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(29)p 0 TeXcolorgray 365 145 a(4.6.4)196
b(LXD)30 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(29)p 0 TeXcolorgray 365 289 a(4.6.5)196
b(Docker)62 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(30)p 0 TeXcolorgray 365 433 a(4.6.6)196
b(Discussion)56 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(30)p 0 TeXcolorgray 365 577 a(4.6.7)196
b(Conclusion)40 b(.)h(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(30)p 0 TeXcolorgray 365 722 a(4.6.8)196
b(Refer)o(ences)61 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(30)p 0 TeXcolorgray 68 866 a(4.7)197
b(Development)21 b(Platform)50 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(31)p 0 TeXcolorgray 365 1010 a(4.7.1)196
b(Overview)28 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(31)p 0 TeXcolorgray 365 1154 a(4.7.2)196
b(Criteria)46 b(.)c(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(31)p 0 TeXcolorgray 365 1299 a(4.7.3)196
b(Home-PC)29 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(31)p 0 TeXcolorgray 365 1443 a(4.7.4)196
b(OSU)21 b(\003ip)h(server)76 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(31)p 0 TeXcolorgray 365 1587 a(4.7.5)196
b(Other)22 b(r)o(esour)o(ces)f(/)h(paid)g(services)68
b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(31)p 0 TeXcolorgray 365 1731 a(4.7.6)196
b(Discussion)56 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(31)p 0 TeXcolorgray 365 1876 a(4.7.7)196
b(Conclusion)40 b(.)h(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(32)p 0 TeXcolorgray 68 2020 a(4.8)197
b(Deep)21 b(Learning)i(library)73 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)p 0 TeXcolorgray 96 w(32)p 0 TeXcolorgray 365 2164
a(4.8.1)196 b(Overview:)69 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(32)p 0 TeXcolorgray 365 2308 a(4.8.2)196
b(Criteria:)26 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(32)p 0 TeXcolorgray 365 2453 a(4.8.3)196
b(Potential)21 b(Choices:)53 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(32)p 0 TeXcolorgray 365 2597 a(4.8.4)196
b(Discussion,)21 b(compar)o(e)g(and)i(contrast:)29 b(.)41
b(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(33)p 0 TeXcolorgray 365 2741 a(4.8.5)196
b(Conclusion:)81 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(34)p 0 TeXcolorgray 68 2885 a(4.9)197
b(T)-7 b(ext)21 b(r)o(ecognition)h(method)h(for)g(detecting)f(signatur)
o(e)f(box)69 b(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(34)p 0 TeXcolorgray 365 3030 a(4.9.1)196
b(Overview:)69 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(34)p 0 TeXcolorgray 365 3174 a(4.9.2)196
b(Criteria:)26 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(34)p 0 TeXcolorgray 365 3318 a(4.9.3)196
b(Potential)21 b(Choices:)53 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(34)p 0 TeXcolorgray 365 3462 a(4.9.4)196
b(Discussion,)21 b(compar)o(e)g(and)i(contrast:)29 b(.)41
b(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(35)p 0 TeXcolorgray 365 3607 a(4.9.5)196
b(Conclusion:)81 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(35)p 0 TeXcolorgray 68 3751 a(4.10)157
b(User)21 b(interface)59 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(35)p 0 TeXcolorgray
365 3895 a(4.10.1)156 b(Overview:)69 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)p 0 TeXcolorgray 96 w(35)p 0 TeXcolorgray
365 4039 a(4.10.2)156 b(Criteria:)26 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(36)p 0 TeXcolorgray
365 4184 a(4.10.3)156 b(Potential)21 b(Choices:)53 b(.)42
b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(36)p 0 TeXcolorgray
365 4328 a(4.10.4)156 b(Discussion,)21 b(compar)o(e)g(and)i(contrast:)
29 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(36)p 0 TeXcolorgray 365 4472 a(4.10.5)156
b(Conclusion:)81 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 96 w(37)p 0 TeXcolorgray 68 4616 a(4.11)157
b(Refer)o(ences)49 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)p 0 TeXcolorgray 96 w(37)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fj(4)p 0 TeXcolorgray -148 -144 a Fh(1)96 b(I)t
Fi(N)t(T)t(R)s(O)t(D)t(U)t(C)t(T)t(I)t(O)t(N)36 b(T)q(O)30
b Fh(P)t Fi(R)s(O)t(J)t(E)t(C)t(T)-150 99 y Fe(1.1)79
b(Who)23 b(is)f(our)g(c)n(lient)-150 341 y Ff(CDK)34
b(Global)g(curr)o(ently)g(operates)e(with)i(thousands)e(of)i(dif)o(fer)
o(ent)g(dealerships)f(acr)o(oss)f(the)i(world)g(each)g(of)g(which)g
(using)f(their)-150 485 y(own)26 b(unique)g(forms,)g(servers,)f(and)h
(verication)g(methods)g(for)h(each)f(transaction.)f(The)g(company)h(is)
g(inter)o(ested)f(in)h(pr)o(oviding)g(new)-150 629 y(forwar)o
(d-thinking)e(solutions)f(to)g(the)g(various)g(logistical)f(pr)o
(oblems)g(that)h(surface)g(as)f(a)h(r)o(esult)f(of)i(permitting)f(such)
f(liberties)h(within)-150 774 y(their)i(various)g(branches.)f(Our)h
(dir)o(ect)h(corr)o(espondent)f(and)g(client)g(fr)o(om)h(CDK)g(Global)f
(is)g(Chris)g(Smith,)f(who)i(went)f(on)g(to)g(pr)o(ovide)-150
918 y(an)d(advisory)g(r)o(ole)g(for)h(the)f(pr)o(oject)f(as)h(it)g(pr)o
(ogr)o(essed)f(thr)o(ough)g(the)h(development)g(lifecycle.)-150
1264 y Fe(1.2)79 b(De\002ninf)24 b(the)f(pr)n(ob)o(lem)-150
1507 y Ff(As)k(mentioned,)h(the)f(curr)o(ent)h(system)e(has)h(allowed)h
(a)f(gr)o(eat)g(level)g(of)i(liberty)e(for)i(each)e(dealership)g(but)g
(has)g(made)h(it)f(a)h(logistical)-150 1651 y(nightmar)o(e)h(to)h
(quickly)g(coor)o(dinate)g(documents)f(and)h(to)g(ensur)o(e)f
(everything)h(submitted)e(is)i(actually)e(valid.)i(In)f(particular)-6
b(,)29 b(their)-150 1795 y(main)22 b(concern)g(is)g(nding)h(a)e(way)h
(to)g(quickly)g(verify)h(if)f(a)g(form)g(has)f(been)h(signed.)g(Beyond)
h(that)e(cor)o(e)h(issue)f(they)h(ar)o(e)f(also)h(inter)o(ested)-150
1939 y(in)i(r)o(eigning)f(in)h(their)g(various)f(servers)g(so)g(that)g
(this)g(verication)g(pr)o(ocess)g(is)g(done)h(under)g(one)g(r)o(oof)h
(and)e(with)h(a)f(singular)g(database.)-150 2084 y(T)-7
b(o)25 b(achieve)f(this)h(task,)f(CDK)i(Global)f(does)g(have)g(a)g(few)
g(gr)o(ound)h(r)o(ules)f(r)o(egar)o(ding)f(the)h(development)g(of)h
(any)f(potential)f(solutions.)-150 2228 y(They)d(ar)o(e)g(inter)o
(ested)f(in)i(an)f(open-sour)o(ce)g(design)g(with)g(no)h(licensing)f(r)
o(equir)o(ements)g(and)g(to)g(have)g(it)g(modular)h(in)f(natur)o(e)g
(to)g(ensur)o(e)-150 2372 y(upgrades)g(can)h(be)g(carried)h(out)f(as)f
(needed)i(should)f(our)g(solution)g(be)g(implemented.)-150
2718 y Fe(1.3)79 b(Wh)n(y)23 b(this)g(is)f(impor)r(tant)-150
2961 y Ff(The)g(curr)o(ent)f(model)i(being)f(used)f(to)i(tackle)e(this)
h(pr)o(oblem)f(is)h(to)g(have)f(dedicated)i(employees)e(devote)h(their)
g(entir)o(e)g(workday)g(to)g(the)-150 3105 y(manual)c(scanning)h(and)h
(veri\002cation)f(of)h(documents.)f(This)f(pr)o(ocess)g(is)h(not)h
(only)f(sluggish)g(in)g(natur)o(e)g(but)f(very)i(accident)f(pr)o(one)g
(with)-150 3249 y(an)g(extr)o(eme)f(dependency)h(on)g(human)f(err)o(or)
i(not)f(occurring.)g(Not)g(only)g(that)f(but)g(this)h(occurs)g(only)g
(after)g(the)g(fact)f(when)h(considering)-150 3394 y(potential)28
b(transactions.)f(A)i(worst-case)f(scenario)h(could)h(be)e(an)h(auto)f
(dealership)g(r)o(eleasing)g(a)h(car)g(to)g(a)f(potential)g(buyer)h(to)
g(only)-150 3538 y(r)o(ealize)24 b(ther)o(e)h(was)f(no)h(legally)g
(binding)h(signatur)o(e)d(pr)o(oving)i(the)g(pur)o(chase)f(of)h(the)g
(vehicle.)g(By)g(implementing)g(AI)f(assistance,)f(we)-150
3682 y(can)18 b(permit)f(quick)h(feedback)g(on)g(submitted)f(documents)
g(as)g(well)h(as)f(signi\002cantly)g(r)o(educe)h(the)f(cost)h(to)f(the)
h(company)f(in)h(veri\002cation)-150 3826 y(by)k(mitigating)f(err)o
(ors)i(and)f(r)o(educing)g(manpower)g(necessary)f(to)h(being)g(devoted)
h(to)f(this)g(fact-checking)h(pr)o(ocess.)-150 4173 y
Fe(1.4)79 b(Our)22 b(team)-150 4415 y Ff(Our)29 b(team,)e(Gr)o(oup)h
(65,)f(was)h(cr)o(eated)g(to)g(tackle)g(this)f(pr)o(oblem.)h(W)l(ithin)
g(our)h(team)e(is)h(thr)o(ee)g(members:)f(Jacob)i(Geddings,)f(Inhyuk)
-150 4559 y(Lee,)21 b(and)h(Juan)f(Mugica.)f(This)g(team)h(was)f
(assembled)g(based)h(on)g(the)g(common)h(inter)o(est)e(of)i(wanting)f
(to)g(explor)o(e)g(what)f(goes)h(into)h(AI)-150 4703
y(development)h(and)h(found)g(this)f(pr)o(oject)g(to)g(be)h(a)f
(perfect)g(opportunity)g(to)h(work)g(with)f(these)g(new)h(concepts.)f
(While)h(we)f(ultimately)-150 4848 y(named)c(our)h(pr)o(oject)f
(SigFind)h(we)f(also)g(would)h(use)f(the)g(term)h(to)f(r)o(efer)h(to)g
(our)g(gr)o(oup)f(instead)g(of)h(the)f(generic)h(number)f
(classi\002cation.)-150 4992 y(Overall,)27 b(our)h(gr)o(oup)f(was)f
(expected)h(to)h(spend)e(the)i(Fall)f(term)g(working)h(on)g(r)o(esear)o
(ch)e(and)i(documentation)f(for)h(the)g(pr)o(oject)e(with)-150
5136 y(W)l(inter)35 b(r)o(epr)o(esenting)f(the)h(coding)h(phase)e(and)h
(Spring)g(acting)f(as)h(our)g(debugging)g(and)g(\002nalization)f(of)i
(the)f(pr)o(oject)f(for)i(code)-150 5280 y(handof)o(f.)23
b(Jacob)h(Geddings)f(would)h(function)f(as)g(team)f(leader)h(for)h(the)
f(duration)g(of)h(this)e(pr)o(oject.)g(Most)h(notable)f(contributions)h
(can)-150 5425 y(be)e(found)i(in)f(documentation,)f(client)h
(communication,)f(and)h(or)o(ganization)f(of)h(the)f(pr)o(oject.)g
(This)g(meant)g(that)g(Fall)g(and)h(Spring)f(was)p 0
TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 6
TeXDict begin 5 5 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fj(5)p 0 TeXcolorgray -150 -144 a Ff(particularly)26
b(workload)h(heavy)e(for)j(Geddings)f(wher)o(eas)e(W)l(inter)i(was)e(a)
h(comparatively)g(lighter)g(workload)h(for)h(dedicated)f(tasks.)-150
0 y(During)22 b(the)f(coding)h(phase)e(of)i(W)l(inter)g(term,)f(he)g
(contributed)h(towar)o(ds)e(our)i(\002le)f(conversion)h(module)f(as)g
(his)g(dedicated)h(portion)f(of)-150 145 y(the)e(pr)o(oject.)f(Given)h
(that)f(the)h(\002le)g(conversion)g(was)f(a)g(quick)i(implementation)e
(he)g(would)i(spend)e(the)h(r)o(emainder)g(of)h(coding)f(working)-150
289 y(on)g(pr)o(oviding)g(assistance)e(with)i(OCR)h(T)-7
b(esseract)17 b(as)h(well)h(as)g(constr)o(ucting)g(training)g(sets)f
(for)i(our)f(Convolutional)g(Network.)g(Inhyuk)-150 433
y(Lee)j(functioned)g(as)e(second)i(in)f(command)h(for)g(the)f(team)g
(and,)g(when)g(able,)g(pr)o(ovided)g(a)g(second)h(set)e(of)i(notes)f
(on)h(most)e(interactions)-150 577 y(within)f(the)g(gr)o(oup)g(and)g
(with)g(our)h(client.)f(His)f(primary)h(task)f(was)h(to)g(develop)g
(the)g(OCR)g(T)-7 b(esseract)17 b(component)j(of)f(our)h(pr)o(oject.)e
(This)-150 722 y(meant)i(cr)o(eating)h(a)f(pr)o(ogram)g(that)h(could)g
(corr)o(ectly)g(analyze)f(any)h(arbitrary)f(page)g(and)h(locate)g
(potential)f(signatur)o(e)f(lines.)h(Once)i(that)-150
866 y(could)j(be)f(detected)h(he)f(was)g(then)h(tasked)e(with)i(cr)o
(opping)f(those)g(signatur)o(e)f(lines)h(out)g(to)h(submit)e(to)i(our)f
(convolutional)h(network.)-150 1010 y(Lastly)-9 b(,)28
b(Lee)h(also)f(pr)o(ovided)g(assistance)f(in)h(submitting)g(samples)e
(for)k(the)e(training)g(set)g(of)h(our)g(pr)o(ogram.)f(Juan)g(Mugica)g
(was)g(our)-150 1154 y(dedicated)20 b(convolutional)g(network)g(r)o
(esear)o(cher)f(and)h(implementer)-6 b(.)19 b(Due)h(to)g(the)f
(importance)g(of)i(this)e(module)h(it)g(was)f(deemed)h(best)-150
1299 y(to)i(have)f(at)h(least)f(one)h(member)g(be)g(completely)f
(focused)i(on)f(this)g(component)g(and)g(not)g(be)g(concerned)h(with)f
(the)g(other)g(modules)g(as)-150 1443 y(much.)k(During)g(the)g(Fall)g
(term,)g(Juan)g(explor)o(ed)g(potential)f(AI)g(platforms)h(for)h(our)f
(network.)g(Fr)o(om)h(then)f(on)g(his)g(entir)o(e)g(focus)g(was)-150
1587 y(towar)o(ds)c(the)h(corr)o(ect)g(cr)o(eation)f(of)i(the)e
(network)h(and)g(ensuring)g(pr)o(oper)f(judgement)g(capacity)g(of)h
(the)g(pr)o(ogram)f(when)h(interpr)o(eting)-150 1731
y(signatur)o(e)e(lines.)-148 2102 y Fh(2)96 b(R)t Fi(E)t(Q)s(U)t(I)t(R)
t(M)t(E)t(N)t(T)t(R)5 b(S)35 b Fh(D)t Fi(O)t(C)t(U)t(M)t(E)t(N)t(T)-150
2345 y Fe(2.1)79 b(Intr)n(oduction)-150 2587 y Fd(2.1.1)g(Pur)r(pose)
-150 2822 y Ff(The)26 b(purpose)g(of)i(this)e(r)o(equir)o(ements)g
(document)h(is)f(to)h(bring)g(clarity)g(to)g(the)f(pr)o(oject)g(by)h
(indicating)g(what)f(the)h(har)o(d-line)g(r)o(equir)o(e-)-150
2966 y(ments)32 b(ar)o(e)g(for)h(the)g(pr)o(oject)e(to)i(be)f(consider)
o(ed)h(a)f(success.)f(This)h(will)h(be)f(done)h(with)g(the)f
(consideration)h(that)f(the)g(desir)o(ed)h(end)-150 3110
y(pr)o(oduct)22 b(may)g(not)g(be)g(achievable)f(and)h(as)f(a)h(r)o
(esult)f(will)h(be)g(tr)o(eated)g(as)f(a)h(form)h(of)f(r)o(esear)o(ch)f
(pr)o(oject)h(or)g(pr)o(oof)h(of)f(concept.)-150 3327
y(Intended)34 b(tar)o(get)g(audience)g(for)h(this)e(document)i(is)e
(our)i(client)f(and)g(by)g(extension)g(CDK[1])h(given)f(this)g(is)g
(their)g(idea)g(and)g(the)-150 3471 y(success)24 b(of)i(the)f(pr)o
(oject)f(dir)o(ectly)h(assists)e(them.)i(In)g(addition,)g(our)g(instr)o
(uctors)h(and)f(teaching)g(assistant)d(ar)o(e)j(extensively)f(involved)
-150 3615 y(in)30 b(this)g(pr)o(oject)f(and)h(they)g(will)g(be)g(using)
g(this)f(as)g(a)h(grading)h(guideline.)f(The)f(assumption)f(is)i(that)g
(the)f(r)o(eader)h(is)g(familiar)g(with)-150 3760 y(general)19
b(concepts)f(within)h(computer)f(science)h(including)g(arti\002cial)f
(intelligence,)h(common)g(pr)o(ogramming)f(languages,)f(and)i(coding)
-150 3904 y(envir)o(onments.)-150 4213 y Fd(2.1.2)79
b(Scope)-150 4448 y Ff(The)25 b(pr)o(oduct)g(being)g(developed)g(will)g
(be)g(a)g(variant)f(of)i(open)f(sour)o(ce)f(AI)h(that)f(will)i(be)f
(tailor)o(ed)g(to)g(scanning)g(submitted)f(forms)h(by)-150
4592 y(CDK.)k(W)l(ith)g(the)g(inclusion)f(of)i(str)o(etch)e(goals)g
(this)g(platform)h(may)f(also)g(analyze)g(driver)i(licenses,)d(vehicle)
i(imaging,)f(or)i(name)e(to)-150 4736 y(vehicle)22 b(identi\002cation.)
-150 4953 y(This)28 b(pr)o(oject)h(will)g(be)g(capable)e(of)j
(analyzing)e(a)h(submitted)f(form)i(to)f(locate)g(its)f(signatur)o(e)g
(box)h(and)g(check)h(to)f(see)f(if)i(it)f(has)f(been)-150
5097 y(signed.)e(It)f(will)h(also)f(pr)o(ompt)f(the)i(operator)g(if)g
(it)f(is)h(not)g(certain)f(of)i(what)e(it)g(is)h(observing)f(and)h(if)g
(a)f(cosigner)h(box)g(is)f(also)g(pr)o(esent.)-150 5241
y(The)e(format)i(of)f(these)f(submissions)f(will)i(be)g(in)g(PDF)g
(format.)g(Str)o(etch)f(goals)g(include)i(the)e(capacity)g(to)h(detect)
g(expiration)g(dates)f(on)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 6 7
TeXDict begin 6 6 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fj(6)p 0 TeXcolorgray -150 -144 a Ff(drivers)19
b(licenses)g(and)g(determine)h(what)e(make)h(and)g(model)h(of)g(a)f
(vehicle)g(is)f(based)h(on)g(a)g(submitted)f(image.)h(Additional)g
(\002le)g(formats)-150 0 y(ar)o(e)j(also)f(being)h(consider)o(ed.)-150
217 y(Bene\002ts)g(fr)o(om)i(this)e(pr)o(oduct)h(include)g(r)o(educed)g
(costs)f(for)i(CDK)g(in)f(err)o(or)g(checking)g(forms,)g(rapid)g
(validation)f(of)i(a)e(document,)h(and)-150 361 y(a)h(singular)f
(platform)h(that)g(can)g(scan)f(the)h(various)f(form)i(styles)e(that)h
(CDK)h(possesses.)c(Another)j(goal)g(of)h(this)f(design)g(is)g(the)g
(ability)-150 505 y(for)30 b(it)g(to)g(expand)e(upon)i(itself)f(and)h
(adapt)e(to)i(new)f(forms)h(that)f(may)g(be)h(intr)o(oduced)g(by)f
(permitting)g(operator)h(con\002rmation)g(or)-150 650
y(override)23 b(on)f(its)g(assessment.)-150 959 y Fd(2.1.3)79
b(De\002nitions)o(,)21 b(Acron)o(yms)o(,)f(and)i(Ab)o(bre)n(viations)
-150 1194 y Ff(Open)38 b(sour)o(ce)g(AI)f(is)h(a)g(fr)o(ee)g(to)g
(access)f(platform)h(in)g(which)h(the)f(code)h(can)f(be)g(used)f(and)i
(implemented)e(as)h(seen)f(\002t)h(by)g(the)-150 1338
y(operator)-6 b(.)20 b(OpenCV[2])h(is)f(a)g(popular)f(image)h(pr)o
(ocessing)g(example)f(of)i(this)f(as)f(well)i(as)e(T)-7
b(ensorFlow[3])21 b(and)f(DL4j[4].)g(Pr)o(ogramming)-150
1482 y(languages)g(that)g(may)h(be)g(used)g(include)h(C++[5],)f
(Python[6],)h(and)f(Java[7].)g(The)f(use)h(of)h(an)f(IDE)g(is)g(likely)
-9 b(,)22 b(which)f(means)g(Integrated)-150 1626 y(Development)28
b(Envir)o(onment)h(which)g(pr)o(ovides)f(a)g(mor)o(e)h(convenient)g
(setup)e(for)j(coding.)f(Examples)f(of)h(IDEs)g(include)g(Micr)o(osoft)
-150 1771 y(V)l(isual)19 b(Studio[8])g(and)h(Eclipse[9].)g(Black)g(box)
f(design)h(means)f(that)g(the)g(user)h(does)g(not)f(need)h(to)g
(understand)g(the)f(internal)h(functions)-150 1915 y(of)j(the)f(pr)o
(ogram,)f(just)g(what)h(it)g(wants)f(as)g(input)h(and)g(what)f(the)h
(user)g(will)g(r)o(eceive)g(as)f(the)h(output.)-150 2224
y Fd(2.1.4)79 b(Ref)n(erences)-150 2459 y Ff([1])22 b(\224CDK)h
(Global\224)f(Internet:)f(https://www)-7 b(.cdkglobal.com/,)21
b(2017)f([Nov)-9 b(.)23 b(10,)e(2017].)-150 2675 y([2])h
(\224OpenCV\224)g(Internet:)f(https://opencv)-9 b(.or)o(g/,)21
b(Aug.)g(3,)h(2017)e([Nov)-9 b(.)22 b(11,)f(2017].)-150
2892 y([3])h(\224T)-7 b(ensorFlow\224)21 b(Internet:)h(https://www)-7
b(.tensor\003ow)g(.or)o(g/,)20 b([Nov)-9 b(.)22 b(12,)f(2017].)-150
3108 y([4])h(\224Deeplearning4j\224)f(Internet:)g
(https://deeplearning4j.or)o(g/,)e(2017)i([Nov)-9 b(.)22
b(11,)f(2017].)-150 3325 y([5])h(\224C++\224)g(Internet:)f(http://www)
-7 b(.cplusplus.com/,)19 b(2017)h([Nov)-9 b(.)23 b(12,)e(2017].)-150
3541 y([6])h(\224Python\224)g(Internet:)f(https://www)-7
b(.python.or)o(g/,)20 b(Oct.)i(17,)f(2017)g([Nov)-9 b(.)22
b(12,)f(2017].)-150 3757 y([7])h(\224Java\224)f(Internet:)h
(https://java.com/en/,)d(Apr)-6 b(.)21 b(22,)g(2016)g([Nov)-9
b(.)22 b(12,)f(2017].)-150 3974 y([8])h(\224Micr)o(osoft)g(V)l(isual)f
(Studio\224)h(Internet:)f(https://www)-7 b(.visualstudio.com/,)19
b(Oct.)j(2016)e([Nov)-9 b(.)23 b(10,)e(2017].)-150 4190
y([9])h(\224Eclipse\224)f(Internet:)h(https://www)-7
b(.eclipse.or)o(g/ide/,)19 b(2017)i([Nov)-9 b(.)22 b(9,)g(2017].)-150
4406 y([10])31 b(IEEE)g(Softwar)o(e)f(Engineering)i(Standar)o(ds)d
(Committee,)h(IEEE)i(Std)e(830-1998,)e(IEEE)j(Recommended)h(Practice)e
(for)i(Softwar)o(e)-150 4551 y(Requir)o(ements)21 b(Speci\002cations,)g
(June)h(25,)f(1998.)-150 4767 y([11])h(\224GCC\224)g(Internet:)g
(https://gcc.gnu.or)o(g/,)e(Nov)-9 b(.)22 b(3,)f(2017)g([Nov)-9
b(.)22 b(9,)g(2017].)-150 4983 y([12])g(\224CMake\224)f(Internet:)g
(https://cmake.or)o(g/,)f(Nov)-9 b(.)22 b(10,)f(2017)g([Nov)-9
b(.)22 b(9,)g(2017].)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 7 8
TeXDict begin 7 7 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fj(7)p 0 TeXcolorgray -150 -144 a Fd(2.1.5)79
b(Ov)n(er)r(vie)n(w)-150 91 y Ff(The)24 b(r)o(emainder)g(of)h(the)g(r)o
(equir)o(ements)e(document)i(will)f(contain)h(a)f(gr)o(eater)g(look)h
(into)f(what)g(pr)o(ecisely)g(the)g(pr)o(oject)f(entails.)h(This)f(is)
-150 235 y(going)c(to)f(involve)g(looking)g(at)g(wher)o(e)g(the)g(pr)o
(oject)f(stands)g(for)i(CDK)g(and)f(how)h(it)f(will)g(be)g(utilized)g
(as)f(well)h(as)g(the)g(pr)o(oducts)f(functions)-150
380 y(and)k(characteristics)f(for)h(a)g(user)-6 b(.)20
b(Mention)h(will)g(also)f(be)h(made)g(towar)o(ds)f(potential)g
(constraints)g(placed)h(upon)f(the)h(pr)o(ogram.)-150
596 y(The)d(following)i(section)f(will)g(be)f(a)g(general)h(overview)g
(and)f(description)h(of)h(the)e(pr)o(oject,)g(primary)g(focus)h(being)g
(placed)f(on)h(functions,)-150 740 y(characteristics,)25
b(constraints,)h(and)g(assumptions/dependencies.)e(After)i(that)g(ther)
o(e)g(will)g(be)g(a)g(section)h(on)f(speci\002c)g(r)o(equir)o(ements)
-150 884 y(that)21 b(will)h(bring)g(mention)g(to)g(potential)e
(interfacing)j(concerns)f(as)f(well)g(as)g(performance)h(metrics)g(and)
g(standar)o(ds)e(compliance.)h(The)-150 1029 y(document)h(is)g
(designed)h(to)f(follow)h(the)f(IEEE)h(Softwar)o(e)e(Engineering)i
(Standar)o(ds)e([10].)-150 1375 y Fe(2.2)79 b(Overall)22
b(Description)-150 1617 y Fd(2.2.1)79 b(Product)22 b(P)l(erspectiv)n(e)
-150 1852 y Ff(The)k(cor)o(e)g(objective)f(as)g(well)h(as)f(the)h(str)o
(etch)f(goals)h(all)f(conclude)i(that)e(this)h(pr)o(oduct)g(will)g(be)g
(an)f(independent)h(platform.)g(For)h(this)-150 1997
y(pr)o(oject,)21 b(we)h(will)g(explor)o(e)g(the)g(potential)f(of)i
(A.I.)e(and)h(cr)o(eate)g(the)f(foundation)i(of)g(CDKs)g(own)f(AI)f
(platform.)-150 2213 y(The)33 b(signatur)o(e)f(detection)i(and)f
(drivers)h(license)f(veri\002cation)g(softwar)o(e)g(must)g(support)f
(various)g(personal)h(computers)g(such)g(as)-150 2357
y(desktop,)25 b(laptop,)g(and)h(tablet)f(as)g(an)g(input)g(sour)o(ce.)g
(This)h(softwar)o(e)f(will)h(\002rst)f(r)o(eceive)h(a)f(PDF)h(\002le)g
(of)h(a)e(document)h(as)f(its)h(input.)f(It)-150 2501
y(will)18 b(then)g(compute)f(the)h(data)g(and)g(give)f(r)o(esult)g(or)i
(feedback)f(to)g(user)-6 b(.)18 b(W)l(ith)f(that)h(in)g(mind,)g(the)g
(softwar)o(e)f(needs)h(to)g(be)g(r)o(obust)f(enough)-150
2646 y(to)29 b(compute)g(lar)o(ge)g(set)g(of)h(data.)f(Similarly)-9
b(,)29 b(within)g(our)h(str)o(etch)e(goals,)h(vehicle)g(model)h
(detection)g(softwar)o(e)f(must)f(also)h(support)-150
2790 y(various)17 b(personal)h(computers)f(and)h(be)g(r)o(obust)f
(enough)i(to)f(evaluate)e(lar)o(ge)i(data.)f(However)-6
b(,)18 b(it)g(must)f(also)h(support)f(portable)g(devices)-150
2934 y(with)28 b(camera)f(such)g(as)g(phone)h(and)g(tablet.)e(Softwar)o
(e)h(should)h(\002rst)g(take)f(photo)g(fr)o(om)h(camera)g(then)f(it)h
(evaluates)e(the)h(photo)h(and)-150 3078 y(r)o(eturns)21
b(model)i(number)-6 b(.)-150 3388 y Fd(2.2.2)79 b(Product)22
b(Functions)-150 3623 y Ff(Main)34 b(goal)g(The)f(function)i(of)f(this)
g(softwar)o(e)f(is)h(detecting)g(the)g(location)g(of)h(the)e(signatur)o
(e)g(box)h(and)g(determine)g(whether)h(it)e(is)-150 3767
y(signed)28 b(or)g(unsigned.)f(If)h(document)f(is)h(unsigned:)f
(softwar)o(e)g(must)f(pr)o(ovide)i(information)g(of)g(location)g(and)g
(quantity)f(of)h(missing)-150 3911 y(components.)g(Also,)g(the)h(pr)o
(ogram)f(must)g(be)g(capable)g(of)h(making)f(a)h(r)o(easonable)e(guess)
h(on)h(whether)g(a)f(signatur)o(e)f(is)i(suf)o(\002ciently)-150
4055 y(binding.)24 b(This)f(entails)g(the)g(AI)g(must)g(be)g(capable)g
(of)h(distinguishing)f(between)h(a)f(simple)g(mark)g(in)h(the)g
(signatur)o(e)e(window)j(and)e(an)-150 4200 y(actual)e(signatur)o(e.)
-150 4416 y(Str)o(etch)e(goal)g(License)h(validation)f(softwar)o(e:)f
(This)h(softwar)o(e)g(must)f(validate)h(whether)g(given)h(photo)f(is)g
(drivers)h(license)f(or)h(not.)g(First,)-150 4560 y(it)i(must)f
(validate)g(the)h(format)h(of)f(drivers)h(license)f(and)g(check)g
(legal)g(information)h(such)f(as)f(expiration)g(date.)-150
4777 y(V)-9 b(ehicle)18 b(model)g(detection)g(softwar)o(e:)f(V)-9
b(ehicle)18 b(model)g(detection)g(softwar)o(e)f(must)f(be)i(able)f(to)g
(determine)h(the)f(speci\002c)g(model)h(number)-150 4921
y(fr)o(om)30 b(appearance)e(of)i(the)f(vehicle.)g(Softwar)o(e)g(will)h
(\002rst)f(take)f(photos)h(or)h(video)g(of)g(vehicle)g(taken)e(fr)o(om)
i(dif)o(fer)o(ent)g(angle.)f(It)g(will)-150 5065 y(determine)22
b(vehicle)g(model)h(by)f(narr)o(owing)g(down)g(the)g(information.)h
(For)f(example,)f(softwar)o(e)g(will)i(sear)o(ch)e(sequentially)g(for)i
(make,)-150 5209 y(model,)f(and)h(year)-6 b(.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 8 9
TeXDict begin 8 8 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fj(8)p 0 TeXcolorgray -150 -144 a Fd(2.2.3)79
b(User)22 b(Char)o(acter)q(istics)-150 91 y Ff(The)36
b(intended)g(user)g(of)h(the)e(softwar)o(e)h(is)g(vehicle)f(r)o
(etailers.)g(W)-7 b(e)36 b(can)g(assume)e(a)i(low)g(degr)o(ee)h(of)f
(understanding)g(on)h(arti\002cial)-150 235 y(intelligence.)26
b(Ther)o(efor)o(e,)g(softwar)o(e)f(must)h(be)f(designed)i(as)e(black)h
(box)g(model.)h(T)-7 b(o)25 b(accompany)h(this)g(str)o(uctur)o(e)f(the)
h(user)g(interface)-150 380 y(must)e(be)g(agr)o(eeable)g(for)h(them.)g
(Lastly)-9 b(,)24 b(the)g(pr)o(ogram)g(must)g(not)h(overbur)o(den)g
(the)f(operator)-6 b(,)25 b(it)g(will)g(take)f(a)g(single)g(\002le)h
(as)f(input)g(to)-150 524 y(scan)e(and)g(r)o(eturn)g(a)f(conclusion)i
(to)f(the)g(user)-6 b(.)-150 832 y Fd(2.2.4)79 b(Constr)o(aints)-150
1067 y Ff(Ther)o(e)26 b(ar)o(e)f(few)i(constraints)f(on)g(CDK)i(A.I.)d
(data)h(str)o(eam)f(pr)o(oject.)g(First,)h(softwar)o(e)g(must)f(be)h
(standalone.)g(The)f(futur)o(e)h(goal)h(of)g(this)-150
1211 y(pr)o(oject)i(is)h(to)g(build)g(CDKs)g(own)h(platform,)e(so)h
(softwar)o(e)g(must)f(be)h(independent.)g(In)f(addition,)i(pr)o(oject)e
(must)g(be)h(kept)f(in)h(open)-150 1355 y(sour)o(ce.)f(The)h(softwar)o
(e)f(must)g(be)h(made)g(in)g(such)f(a)h(way)f(that,)g(once)i(our)f
(team)f(has)g(completed)h(its)g(work,)g(the)g(pr)o(oject)f(be)h(taken)
-150 1499 y(over)21 b(by)f(a)h(new)f(team)g(within)h(CDK.)g(T)-7
b(o)20 b(meet)h(this)f(demand)h(the)f(need)h(for)h(thor)o(ough)e
(documentation)h(of)g(implementation)f(is)g(vital.)-150
1644 y(This)k(pr)o(oject)g(will)h(also)f(have)h(limits)f(on)h(testing)f
(due)h(to)g(the)g(privacy)f(issue)g(surr)o(ounding)h(actual)f(consumer)
g(data.)g(Since)h(the)g(data)-150 1788 y(that)f(signatur)o(e)f
(detecting)i(and)f(license)h(validation)f(softwar)o(e)f(compute)h
(contains)g(personal)g(data,)g(testing)g(data)g(must)f(be)i(done)g(on)
-150 1932 y(dummy)20 b(documents)h(and)f(licenses.)g(The)g(last)f
(constraint)h(is)g(that)g(pr)o(oduct)g(must)f(function)i(on)g(its)f
(own)h(without)f(the)g(additional)h(use)-150 2076 y(or)g(maintenance)f
(of)i(outside)e(softwar)o(e.)g(Since)g(the)h(users)f(of)h(the)g(pr)o
(oduct)f(ar)o(e)g(unlikely)h(to)g(be)f(familiar)h(with)g(the)f
(internal)h(workings)-150 2221 y(the)27 b(interface)h(for)g(them)f
(must)g(suf)o(\002ciently)f(mask)h(the)g(technical)g(workings)h(of)g
(the)f(pr)o(ogram)g(only)h(pr)o(ovide)f(a)g(clean)g(and)h(simple)-150
2365 y(menu.)-150 2673 y Fd(2.2.5)79 b(Assumptions)20
b(and)i(Dependencies)-150 2908 y Ff(All)31 b(images)e(pr)o(ovided)i(by)
g(the)g(client)g(ar)o(e)f(sanitized)g(and)h(fr)o(ee)f(of)i(legal)e
(con\003icts.)h(Cloud)g(based)g(deployment)f(services)g(will)h(be)-150
3052 y(pr)o(ovided)25 b(by)g(the)g(client.)g(Fr)o(om)g(a)f(developing)h
(and)g(testing)f(standpoint,)g(this)h(pr)o(oject)f(will)h(be)g
(developped)g(in)g(C++)g(utilizing)f(the)-150 3196 y(OpenCV)29
b(pictur)o(e)e(formatting)i(library)-9 b(.)29 b(This)f(library)g
(assumes)f(that)h(the)g(system)g(is)g(r)o(unning)h(GCC)h(4.4.x[11])d
(or)i(later)f(as)g(well)h(as)-150 3340 y(CMake)22 b(2.8.7[12])e(or)j
(higher)-6 b(.)-150 3684 y Fe(2.3)79 b(Speci\002c)23
b(Requirements)-150 3927 y Fd(2.3.1)79 b(Exter)r(nal)22
b(Interf)n(ace)f(Requirements)-150 4162 y Ff(The)f(focus)g(of)h(this)f
(pr)o(oject)g(is)f(building)i(signatur)o(e)e(detecting)h(arti\002cial)g
(intelligence)h(r)o(un)f(on)h(the)f(CDK)h(server)-6 b(.)20
b(It)g(must)g(be)g(designed)-150 4306 y(as)i(black)g(box)g(model,)h(so)
f(user)g(interface)h(must)e(be)h(simple)g(.)g(Since)h(softwar)o(e)e(r)o
(uns)i(on)g(the)f(CDK)h(server)-6 b(,)22 b(communication)h(interface)
-150 4450 y(must)e(be)h(secur)o(e)f(and)i(durable.)-150
4667 y(The)28 b(str)o(uctur)o(e)h(of)g(user)f(interface)h(is)g(very)g
(simple.)f(Ther)o(e)g(ar)o(e)g(two)h(functions)g(in)g(user)f
(interface.)h(Softwar)o(e)f(simply)g(takes)g(set)g(of)-150
4811 y(documents)21 b(fr)o(om)h(the)f(user)-6 b(,)20
b(and)i(it)f(displays)f(r)o(esult)g(of)i(the)f(signatur)o(e)f
(detection)i(to)f(the)g(user)-6 b(.)21 b(Result)f(of)i(the)f(signatur)o
(e)f(will)h(be)g(any)-150 4955 y(pages)g(of)i(the)f(document)g(wher)o
(e)g(err)o(or)h(is)e(detected.)-150 5172 y(Communication)32
b(between)g(our)h(softwar)o(e)f(and)g(the)g(CDK)i(server)e(database)f
(is)h(important;)f(however)-6 b(,)33 b(focus)f(on)h(this)f(pr)o(oject)f
(is)-150 5316 y(making)c(accurate)f(and)i(r)o(eliable)e(arti\002cial)h
(intelligence.)g(W)-7 b(e)27 b(ar)o(e)g(considering)h(the)f(use)g(of)h
(docker)g(and)f(amazon)f(web)h(services)g(to)-150 5460
y(constr)o(uct)22 b(a)g(r)o(eliable)f(communication)h(str)o(uctur)o(e)g
(but)f(this)h(is)g(a)f(str)o(etch)h(goal)g(of)h(the)f(pr)o(oject.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 9 10
TeXDict begin 9 9 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fj(9)p 0 TeXcolorgray -150 -144 a Fd(2.3.2)79
b(System)21 b(F)n(eatures)-150 209 y Ff(2.3.2.1)77 b(Signatur)o(e)21
b(detecting)h(capability:)p 0 TeXcolorgray 0 TeXcolorgray
257 475 a(Intr)o(oduction/Purpose)29 b(of)i(featur)o(e:)f(The)g(pr)o
(ogram)g(must)f(be)h(able)g(to)h(detect)f(if)h(a)f(document)g(contains)
g(a)g(signatur)o(e)257 620 y(r)o(egar)o(dless)21 b(of)h(the)g
(documents)g(formatting.)p 0 TeXcolorgray 0 TeXcolorgray
257 764 a(Stimulus/Response)h(sequence:)i(The)h(pr)o(ogram)f(will)h
(parse)f(a)h(PDF)g(image)f(of)i(a)f(document,)g(or)g(a)g(document)g(in)
g(PDF)257 908 y(format,)c(and)g(output)f(a)h(per)o(centage)f(based)g
(estimation)g(as)h(to)g(whether)g(it)g(contains)g(a)g(signatur)o(e.)p
0 TeXcolorgray 0 TeXcolorgray 257 1052 a(Functional)i(Requir)o(ements:)
f(Signatur)o(e)f(detection)j(must)e(be)h(functional)g(for)h(all)f
(types)f(of)i(document)f(formats)g(r)o(egar)o(d-)257
1197 y(less)d(of)i(the)f(type)f(so)h(long)h(as)e(they)h(ar)o(e)g(pr)o
(esented)f(in)h(PDF)g(\002le)g(format.)-150 1581 y(2.3.2.2)77
b(Missing)21 b(signatur)o(e)g(detection:)p 0 TeXcolorgray
0 TeXcolorgray 257 1847 a(Intr)o(oduction/Purpose)h(of)i(featur)o(e:)e
(The)h(pr)o(ogram)g(must)f(be)h(able)g(to)g(detect)g(if)h(a)f(document)
g(contains)g(a)g(space)f(wher)o(e)257 1991 y(ther)o(e)g(should)g(be)g
(a)f(signatur)o(e)g(r)o(egar)o(dless)g(of)i(the)f(format)g(of)h(the)f
(form.)p 0 TeXcolorgray 0 TeXcolorgray 257 2136 a(Stimulus/Response)f
(sequence:)j(The)g(pr)o(ogram)g(will)h(parse)e(a)h(PDF)h(image)f(of)h
(a)f(document)g(,)h(or)g(a)f(document)g(in)h(PDF)257
2280 y(format,)31 b(and)f(output)g(a)g(per)o(centage)g(based)g
(estimation)g(as)g(to)g(whether)h(it)g(contains)f(a)h(space)e(wher)o(e)
i(a)f(signatur)o(e)f(is)257 2424 y(missing.)p 0 TeXcolorgray
0 TeXcolorgray 257 2568 a(Functional)24 b(Requir)o(ements:)f(Signatur)o
(e)f(detection)j(must)e(be)h(functional)g(for)h(all)f(types)f(of)i
(document)f(formats)g(r)o(egar)o(d-)257 2713 y(less)d(of)i(the)f(type)f
(so)h(long)h(as)e(they)h(ar)o(e)g(pr)o(esented)f(in)h(PDF)g(\002le)g
(format.)-150 3097 y(2.3.2.3)77 b(Multiple)21 b(signatur)o(e)g(and)h
(multiple)f(missing)h(signatur)o(e)e(capability:)p 0
TeXcolorgray 0 TeXcolorgray 257 3363 a(Intr)o(oduction/Purpose)31
b(of)j(featur)o(e:)d(The)h(pr)o(ogram)g(must)g(be)g(able)g(to)g
(perform)h(featur)o(e)f(3.2.1)f(for)i(every)f(signatur)o(e)257
3507 y(contained)22 b(within)f(the)g(document.)h(The)f(pr)o(ogram)g
(must)g(also)f(be)i(able)f(to)g(perform)h(featur)o(e)f(3.2.2)f(for)i
(every)f(space)g(that)257 3652 y(is)h(missing)f(a)h(signatur)o(e)e
(within)j(the)f(document.)p 0 TeXcolorgray 0 TeXcolorgray
257 3796 a(Stimulus/Response)h(sequence:)i(The)h(pr)o(ogram)f(will)h
(parse)f(a)h(PDF)g(image)f(of)i(a)f(document,)g(or)g(a)g(document)g(in)
g(PDF)257 3940 y(format,)c(and)g(output)f(per)o(cent)h(estimates)e(for)
j(featur)o(es)e(3.2.1)f(and)j(3.2.2)d(at)i(every)g(instance)f(deemed)i
(applicable.)p 0 TeXcolorgray 0 TeXcolorgray 257 4084
a(Functional)e(Requir)o(ements:)g(Multiple)g(signatur)o(e)f(and)i
(multiple)f(missing)f(signatur)o(e)h(capabilities)f(must)g(be)i
(functional)257 4229 y(for)h(all)f(types)f(of)h(document)h(formats)f(r)
o(egar)o(dless)f(of)h(the)g(type)g(so)g(long)g(as)g(they)g(ar)o(e)f(pr)
o(esented)g(in)i(PDF)f(\002le)g(format.)-150 4672 y Fc(The)28
b(following)h(featur)o(es)e(ar)o(e)g(part)g(of)h(the)g(gr)o(oups)e(str)
o(etch)h(goals)h(and)f(ar)o(e)g(to)h(be)f(completed)h(once)g(the)f
(afor)o(ementioned)h(featur)o(es)-150 4816 y(work)c(to)g(the)g
(satisfaction)h(of)g(the)f(client.)-150 5328 y Ff(2.3.2.4)77
b(Car)22 b(detection)h(within)f(image:)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 10 11
TeXDict begin 10 10 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(10)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
257 -144 a Ff(Intr)o(oduction/Purpose)21 b(of)i(featur)o(e:)e(The)h(pr)
o(ogram)f(must)g(detect)i(if)f(a)g(given)g(pictur)o(e)f(contains)h(a)g
(car)g(within)g(it.)p 0 TeXcolorgray 0 TeXcolorgray 257
0 a(Stimulus/Response)c(sequence:)j(The)g(pr)o(ogram)g(will)g(parse)g
(a)g(PDF)g(image)g(and)g(output)g(a)g(per)o(centage)f(based)g(estimate)
257 145 y(as)h(to)h(whether)h(it)f(contains)f(a)h(car)-6
b(.)p 0 TeXcolorgray 0 TeXcolorgray 257 289 a(Functional)31
b(Requir)o(ements:)g(The)g(pr)o(ogram)h(must)f(be)g(able)g(to)h(detect)
g(cars)g(within)g(any)f(pictur)o(e)g(pr)o(esented)g(in)h(PDF)257
433 y(format.)-150 817 y(2.3.2.5)77 b(License)22 b(and)g(Permit)g
(detection)h(within)f(document:)p 0 TeXcolorgray 0 TeXcolorgray
257 1084 a(Intr)o(oduction/Purpose)32 b(of)h(featur)o(e:)f(The)g(pr)o
(ogram)h(must)f(detect)h(if)g(a)f(document)h(contains)g(a)f(license)h
(or)g(a)f(permit)257 1228 y(r)o(egar)o(dless)21 b(of)h(the)g(format)h
(of)f(the)g(form.)p 0 TeXcolorgray 0 TeXcolorgray 257
1372 a(Stimulus/Response)f(sequence:)j(The)g(pr)o(ogram)g(will)h(parse)
e(a)h(PDF)h(image)f(of)h(a)f(document)g(,)h(or)g(a)f(document)g(in)h
(PDF)257 1516 y(format,)d(and)g(output)f(a)h(per)o(centage)f(based)g
(estimation)g(as)h(to)g(whether)g(it)g(contains)g(a)g(license,)f(or)i
(a)f(permit.)p 0 TeXcolorgray 0 TeXcolorgray 257 1661
a(Functional)28 b(Requir)o(ements:)g(The)g(pr)o(ogram)h(must)f(be)g
(able)g(to)h(detect)g(permits)f(and)h(licenses)f(within)h(any)g
(document)257 1805 y(pr)o(esented)21 b(in)h(PDF)h(format.)-150
2189 y(2.3.2.6)77 b(Parse)21 b(license)h(plate,)f(license,)h(and)g
(permit)f(text)h(into)g(machine)g(r)o(eadable)f(format:)p
0 TeXcolorgray 0 TeXcolorgray 257 2455 a(Intr)o(oduction/Purpose)i(of)h
(featur)o(e:)e(Once)i(the)g(pr)o(ogram)f(can)g(perform)i(featur)o(es)d
(3.2.3)g(and)i(3.2.4,)d(it)j(must)f(then)g(parse)257
2600 y(the)e(contents)g(of)h(these)f(forms)h(into)g(machine)f(r)o
(eadable)g(format.)g(This)g(will)g(allow)h(the)f(user)g(to)h(utilize)e
(this)h(information)257 2744 y(to)h(validate)f(a)h(clients)g(identity)
-9 b(,)22 b(ties)g(to)g(the)g(vehicle,)f(etc..)h(For)h(this)e(task,)g
(we)h(will)h(utilize)e(Googles)i(V)l(ision)f(API.)p 0
TeXcolorgray 0 TeXcolorgray 257 2888 a(Stimulus/Response)16
b(sequence:)j(The)f(pr)o(ogram)h(will)g(parse)f(a)h(license,)g(permit,)
f(or)i(license)f(plate)f(image)g(in)i(PDF)f(format)257
3032 y(and)j(extract)g(the)g(information)g(pr)o(esented)f(into)i(a)f
(machine)f(r)o(eadable)h(format.)p 0 TeXcolorgray 0 TeXcolorgray
257 3177 a(Functional)e(Requir)o(ements:)f(The)h(pr)o(ogram)g(must)g
(be)g(able)g(to)h(r)o(ead)f(information)h(within)g(any)f(license)g
(plate,)f(license,)i(or)257 3321 y(permit)h(r)o(egar)o(dless)e(of)j
(the)f(origin)h(so)f(long)g(as)g(they)g(ar)o(e)f(pr)o(esented)g(in)i(a)
e(PDF)i(format.)-150 3705 y(2.3.2.7)77 b(Damage)21 b(r)o(ecognition:)p
0 TeXcolorgray 0 TeXcolorgray 257 3971 a(Intr)o(oduction/Purpose)c(of)h
(featur)o(e:)f(The)g(pr)o(ogram)g(must)g(be)g(able)g(to)h(parse)e(a)i
(pictur)o(e)e(of)j(a)e(vehicle)h(and)f(detect)h(whether)257
4116 y(this)25 b(vehicle)g(has)g(sustained)f(damage.)g(Often)i(CDK)h
(employees)d(must)h(go)g(thr)o(ough)g(pictur)o(es)f(of)i(vehicles)f(in)
h(or)o(der)g(to)257 4260 y(assess)19 b(if)j(they)f(have)g(been)g
(damaged.)h(This)e(featur)o(e)h(aims)g(at)g(discar)o(ding)g(all)g
(vehicles)g(with)h(no)g(damage)e(lessening)h(the)257
4404 y(amount)g(of)i(pictur)o(es)e(that)g(must)h(be)f(assessed)g(for)i
(damage.)p 0 TeXcolorgray 0 TeXcolorgray 257 4548 a(Stimulus/Response)
36 b(sequence:)i(The)h(pr)o(ogram)g(will)g(parse)f(a)g(pictur)o(e)g(of)
i(a)f(car)g(in)g(PDF)g(format)g(and)g(output)f(a)257
4693 y(per)o(centage)21 b(estimate)g(as)g(to)h(whether)g(the)g(car)g
(has)g(been)g(damaged.)p 0 TeXcolorgray 0 TeXcolorgray
257 4837 a(Functional)f(Requir)o(ements:)f(The)h(pr)o(ogram)g(must)f
(be)h(able)g(to)g(detect)g(damage)g(within)g(any)g(pictur)o(e)g(of)h(a)
f(car)g(so)g(long)h(as)257 4981 y(it)g(is)g(submitted)f(in)h(PDF)g
(format.)-150 5365 y(2.3.2.8)77 b(Make)21 b(and)i(Model)f(detection:)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 11 12
TeXDict begin 11 11 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(11)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
257 -144 a Ff(Intr)o(oduction/Purpose)31 b(of)h(featur)o(e:)e(The)h(pr)
o(ogram)g(will)h(parse)e(the)i(pictur)o(e)e(of)i(a)g(car)f(and)h
(attempt)e(to)h(discern)h(the)257 0 y(make)21 b(and)i(the)f(model.)p
0 TeXcolorgray 0 TeXcolorgray 257 145 a(Stimulus/Response)e(sequence:)j
(The)g(pr)o(ogram)g(will)g(parse)g(an)g(image)g(of)h(car)f(in)h(PDF)f
(format)h(and)f(output)f(a)h(number)257 289 y(of)g(per)o(centages)d
(assessing)g(what)i(the)g(possible)f(make)g(and)h(model)h(combination)f
(might)g(be)g(for)h(the)f(vehicle.)p 0 TeXcolorgray 0
TeXcolorgray 257 433 a(Functional)e(Requir)o(ements:)f(The)i(pr)o
(ogram)f(must)f(be)h(able)g(to)h(detect)f(the)h(make)f(and)g(model)h
(of)h(a)e(vehicle)g(r)o(egar)o(dless)f(of)257 577 y(the)j(make)f(and)i
(model)f(so)g(long)h(as)e(the)h(pictur)o(e)f(is)h(of)h(a)e(car)-6
b(,)23 b(and)f(is)g(submitted)f(in)h(PDF)g(format.)-150
887 y Fd(2.3.3)79 b(P)l(erf)n(or)r(mance)22 b(requirements)-150
1122 y Ff(This)i(pr)o(ogram)h(will)g(utilize)g(deep)g(learning)g
(algorithms)g(to)g(achieve)f(all)h(featur)o(es)f(except)h(for)h(3.2.5.)
d(T)-7 b(o)25 b(do)h(so,)e(the)h(pr)o(ogram)g(must)-150
1266 y(r)o(un)h(continuously)g(for)g(extended)h(periods)e(of)i(time)e
(in)h(or)o(der)h(to)e(ensur)o(e)g(optimal)g(learning)h(time)g(frames.)f
(The)g(pr)o(ogram)g(must)g(be)-150 1410 y(able)19 b(to)i(catch)e(err)o
(ors)i(and)f(continue)g(r)o(unning)h(unless)e(the)h(err)o(or)g(is)g
(fatal.)f(Segmentation)g(faults,)g(memory)i(depletion)f(and)g(har)o
(dwar)o(e)-150 1554 y(err)o(ors)i(ar)o(e)g(all)g(consider)o(ed)g
(fatal,)g(all)f(other)i(err)o(ors)f(must)f(be)h(caught,)f(handled,)i
(and)f(noti\002ed)h(to)f(the)g(user)-6 b(.)-150 1863
y Fd(2.3.4)79 b(Design)22 b(Constr)o(aints)-150 2098
y Ff(The)29 b(pr)o(ogram)f(is)h(fr)o(ee)g(of)g(design)g(constraints)g
(so)g(long)g(as)f(the)h(interface)g(ensur)o(es)f(ease)g(of)i(access)e
(and)h(interaction)g(between)f(the)-150 2243 y(dif)o(fer)o(ent)18
b(components)g(for)h(all)f(end)g(users.)f(This)h(pertains)f(to)h(the)g
(ease)f(of)i(submission)d(of)j(pictur)o(es)e(and)h(documents)g(to)g
(the)g(softwar)o(e,)-150 2387 y(as)j(well)i(as)e(the)h(pr)o(esentation)
e(of)j(all)f(r)o(esults)f(in)h(a)g(r)o(eadable)f(and)h(compr)o
(ehensive)f(manner)-6 b(.)-150 2696 y Fd(2.3.5)79 b(Softw)o(are)22
b(system)f(attr)q(ib)n(utes)-150 2931 y Ff(The)28 b(pr)o(ogram)f(will)h
(r)o(equir)o(e)g(a)f(platform)h(in)g(which)g(to)g(r)o(un)h(uninterr)o
(upted)f(for)h(extended)f(periods)g(of)g(time.)g(The)f(platform)h(must)
-150 3075 y(be)e(accessible)g(to)h(ensur)o(e)f(that)g(modi\002cation)h
(can)f(be)h(made)f(whenever)h(deemed)g(necessary)-9 b(.)26
b(The)g(platform)h(must)f(be)g(portable)g(to)-150 3220
y(ensur)o(e)20 b(that)f(the)h(softwar)o(e)g(can)h(be)f(deployed)h(in)f
(a)g(wide)h(range)f(of)h(envir)o(onments.)f(Finally)-9
b(,)20 b(the)g(platform)g(must)g(be)g(able)g(to)g(support)-150
3364 y(heavy)h(usage)g(of)i(memory)g(r)o(esour)o(ces)e(to)h(ensur)o(e)f
(the)h(softwar)o(e)f(does)i(not)f(encounter)g(depletion)g(of)h(memory)g
(issues.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 12 13
TeXDict begin 12 12 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(12)p 0 TeXcolorgray -150 -144 a Fe(2.4)79
b(Appendix)-150 99 y Ff(This)24 b(section)g(details)g(the)g(gr)o(oups)f
(schedule)h(in)h(or)o(der)g(to)f(complete)g(the)h(tasks)e(per)h(the)g
(school)h(year)f(of)h(2017.)e(Included)h(is)g(a)g(Gantt)-150
243 y(chart)e(detailing)g(what)g(the)g(speci\002c)f(task)g(is)h(and)g
(the)g(time)g(frame)g(over)h(which)f(they'r)o(e)g(scheduled)g(to)g
(take)g(place.)p 0 TeXcolorgray 1607 417 a

 1607 417 a
1607 417 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 255.12126 340.16153 0.0 -255.12126 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 170.08076 -127.56062 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 14.17339 -56.69362 moveto

 14.17339 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 28.34679 -56.69362 moveto

 28.34679 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 42.52019 -56.69362 moveto

 42.52019 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 56.69359 -56.69362 moveto

 56.69359 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 70.86697 -56.69362 moveto

 70.86697 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 85.04037 -56.69362 moveto

 85.04037 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 99.21378 -56.69362 moveto

 99.21378 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 113.38718 -56.69362 moveto

 113.38718 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 127.56056 -56.69362 moveto

 127.56056 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 141.73396 -56.69362 moveto

 141.73396 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 155.90736 -56.69362 moveto

 155.90736 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 170.08076 -56.69362 moveto

 170.08076 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 184.25415 -56.69362 moveto

 184.25415 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 198.42755 -56.69362 moveto

 198.42755 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 212.60095 -56.69362 moveto

 212.60095 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 226.77435 -56.69362 moveto

 226.77435 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 240.94775 -56.69362 moveto

 240.94775 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 255.12114 -56.69362 moveto

 255.12114 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 269.29454 -56.69362 moveto

 269.29454 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 283.46794 -56.69362 moveto

 283.46794 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 297.64134 -56.69362 moveto

 297.64134 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 311.81473 -56.69362 moveto

 311.81473 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 325.98813 -56.69362 moveto

 325.98813 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -56.69362 moveto

 340.16153 -56.69362 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -85.04042 moveto

 340.16153 -85.04042 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -113.38724 moveto

 340.16153 -113.38724 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -141.73404 moveto

 340.16153 -141.73404 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -170.08086 moveto

 340.16153 -170.08086 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -198.42766 moveto

 340.16153 -198.42766 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -226.77448 moveto

 340.16153 -226.77448 lineto

 pgfstr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 0.0 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 21.26009 -8.50412 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 16.76004 -11.61813 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(11)1607
417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 42.52019 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 63.78027 -8.50412 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 59.28023 -11.61813 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(12)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 85.04037 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 106.30046 -8.50412 ] concat

 pgfs



 0 setgray
 1607 417
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 104.05045 -11.61813 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(1)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 127.56056 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 148.82066 -8.50412 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 146.57065 -11.55064 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(2)1607
417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 170.08076 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 191.34085 -8.50412 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 189.09084 -11.50563 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(3)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 212.60095 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 233.86104 -8.50412 ] concat

 pgfs



 0 setgray
 1607 417
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 231.61102 -11.61813 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(4)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 255.12114 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 276.38123 -8.50412 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 274.13123 -11.50563 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(5)1607
417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 297.64134 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 318.90143 -8.50412 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 316.65141 -11.50563 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(6)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 0.0 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 7.08669 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 4.83667 -39.96495 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(1)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 14.17339 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 21.26009 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 19.01007 -39.89745 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(2)1607
417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 28.34679 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 35.43347 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 33.18346 -39.85243 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(3)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 42.52019 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 49.60687 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 47.35686 -39.96495 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(4)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 56.69359 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 63.78027 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 61.53026 -39.85243 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(5)1607
417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 70.86697 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 77.95367 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 75.70366 -39.85243 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(6)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 85.04037 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 92.12706 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 89.87706 -39.89745 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(7)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 99.21378 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 106.30046 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 104.05045 -39.85243 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(8)1607
417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 113.38718 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 120.47386 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 118.22385 -39.85243 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(9)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 127.56056 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 134.64726 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 130.14722 -39.91994 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(10)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 141.73396 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 148.82066 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 144.32062 -39.96495 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(11)1607
417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 155.90736 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 162.99405 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 158.494 -39.96495 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(12)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 170.08076 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 177.16745 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 172.6674 -39.91994 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(13)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 184.25415 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 191.34085 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 186.8408 -39.96495 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(14)1607
417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 198.42755 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 205.51425 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 201.0142 -39.91994 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(15)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 212.60095 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 219.68764 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 215.1876 -39.91994 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(16)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 226.77435 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 233.86104 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 229.361 -39.96495 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(17)1607
417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 240.94775 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 248.03444 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 243.5344 -39.91994 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(18)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 255.12114 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 262.20784 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 257.7078 -39.91994 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(19)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 269.29454 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 276.38123 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 271.8812 -39.85243 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(20)1607
417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 283.46794 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 290.55463 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 286.05458 -39.96495 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(21)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 297.64134 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 304.72803 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 300.22798 -39.89745 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(22)1607 417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 311.81473 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 318.90143 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 314.40138 -39.85243 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(23)1607
417 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 325.98813 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 333.07483 -36.85092 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 328.57478 -39.96495 ] concat

 pgfs



 0 setgray
 1607 417 a Fb(24)1607 417 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0 1 0 setrgbcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0 1 0 setrgbcolor}def

 11.33855 56.69359 0.0 -76.53629 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 28.34679 -70.867 ] concat

 pgfs



 0 setgray
 1607 417
a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -153.64613 -73.175 ] concat

 pgfs



 0 setgray
 1607 417 a Ff(Study)g(machine)g(learning)g(framework)1607
417 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 0 setcmykcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 0 setcmykcolor}def

 11.33855 42.52017 14.17339 -104.88309 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 35.43347 -99.21382 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -164.6182 -101.52182 ] concat

 pgfs



 0 setgray
 1607 417 a Ff(Build)h(small)e(textur)o(e)g(detecting)i
(pr)o(ogram)1607 417 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{1 0.5 0 setrgbcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{1 0.5 0 setrgbcolor}def

 11.33855 283.46794 56.69359 -133.2299 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 198.42755 -127.56062 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -175.16307 -129.86862 ] concat

 pgfs



 0 setgray
 1607 417 a Ff(Study)f(on)g(textur)o
(e)f(detecting)i(A.I)e(algorithm)1607 417 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 setrgbcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 setrgbcolor}def

 11.33855 99.21376 70.86697 -161.5767 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 120.47386 -155.90744 ] concat

 pgfs



 0 setgray
 1607 417
a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -207.71027 -158.21544 ] concat

 pgfs



 0 setgray
 1607 417 a Ff(Build)i(handwritten)f(signatur)o(es)f(detecting)h
(softwar)o(e)1607 417 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.75 0 0.25 setrgbcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.75 0 0.25 setrgbcolor}def

 11.33855 113.38718 170.08076 -189.92352 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 226.77435 -184.25424 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -206.23804 -186.56224 ] concat

 pgfs



 0 setgray
 1607 417 a Ff(Adapt)f(pr)o(ogram)h
(to)g(dif)o(fer)o(ent)h(format)f(of)h(document)1607 417
y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.75 0.5 0.25 setrgbcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.75 0.5 0.25 setrgbcolor}def

 11.33855 141.73396 198.42755 -218.27034 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 269.29454 -212.60106 ] concat

 pgfs



 0 setgray
 1607 417 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -98.00449 -214.90906 ] concat

 pgfs



 0 setgray
 1607 417 a Ff(Optimize)f(the)g(pr)o(ogram)1607
417 y


 pgfr

 restore

 restore

 56.89284 -70.867 moveto

 61.56581 -70.867 lineto

 62.11606 -70.867 62.56209 -71.31305 62.56209 -71.86328 curveto

 62.56209 -98.21753 lineto

 62.56209 -98.76776 62.11606 -99.2138 61.56581 -99.2138 curveto

 51.82135 -99.2138 lineto

 51.27112 -99.2138 50.82507 -99.65985 50.82507 -100.21008 curveto

 50.82507 -126.56435 lineto

 50.82507 -127.1146 51.27112 -127.56062 51.82135 -127.56062 curveto

 52.90779 -127.56062 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 52.90779 -127.56062 ] concat

 save 3.58653 0.0 moveto 2.52383 0.19925 0.797 0.797 -0.3985 1.49438
curveto -0.3985 -1.49438 lineto 0.797 -0.797 2.52383 -0.19925 3.58653
0.0 curveto pgffill restore

 restore

 56.89282 -99.21382 moveto

 62.784 -99.21382 lineto

 63.33423 -99.21382 63.78027 -99.65987 63.78027 -100.2101 curveto

 63.78027 -154.91116 lineto

 63.78027 -155.4614 64.22632 -155.90744 64.77655 -155.90744 curveto

 67.08119 -155.90744 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 67.08119 -155.90744 ] concat

 save 3.58653 0.0 moveto 2.52383 0.19925 0.797 0.797 -0.3985 1.49438
curveto -0.3985 -1.49438 lineto 0.797 -0.797 2.52383 -0.19925 3.58653
0.0 curveto pgffill restore

 restore

 170.28 -155.90744 moveto

 174.95297 -155.90744 lineto

 175.50322 -155.90744 175.94925 -156.35349 175.94925 -156.90372 curveto

 175.94923 -169.08456 lineto

 175.94923 -169.6348 175.5032 -170.08084 174.95296 -170.08084 curveto

 165.20853 -170.08084 lineto

 164.6583 -170.08084 164.21225 -170.52687 164.21225 -171.07712 curveto

 164.21225 -183.25797 lineto

 164.21225 -183.80821 164.6583 -184.25424 165.20853 -184.25424 curveto

 166.29497 -184.25424 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 166.29497 -184.25424 ] concat

 save 3.58653 0.0 moveto 2.52383 0.19925 0.797 0.797 -0.3985 1.49438
curveto -0.3985 -1.49438 lineto 0.797 -0.797 2.52383 -0.19925 3.58653
0.0 curveto pgffill restore

 restore

 170.28 -155.90744 moveto

 183.25786 -155.90744 lineto

 183.8081 -155.90744 184.25414 -156.35349 184.25414 -156.90372 curveto

 184.25414 -211.60478 lineto

 184.25414 -212.15501 184.70018 -212.60106 185.25041 -212.60106 curveto

 194.64175 -212.60106 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 194.64175 -212.60106 ] concat

 save 3.58653 0.0 moveto 2.52383 0.19925 0.797 0.797 -0.3985 1.49438
curveto -0.3985 -1.49438 lineto 0.797 -0.797 2.52383 -0.19925 3.58653
0.0 curveto pgffill restore

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray -150 2787 a Ff(Practice)p 0 1 0
TeXcolorrgb 0 1 0 TeXcolorrgb -31 3052 a(\226)p 0 1 0
TeXcolorrgb 248 w(Study)f(machine)h(learning)h(framework)p
0 0 1 0 TeXcolorcmyk 0 0 1 0 TeXcolorcmyk -31 3197 a(\226)p
0 0 1 0 TeXcolorcmyk 248 w(Build)g(Small)e(textur)o(e)g(detecting)h(pr)
o(ogram)p 0 1 0 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
-150 3461 a(Main:)g(Build)g(\002rst)g(pr)o(ototype)p
1 0.648 0 TeXcolorrgb 1 0.648 0 TeXcolorrgb -31 3726
a(\226)p 1 0.648 0 TeXcolorrgb 248 w(Study)f(on)i(textur)o(e)e
(detecting)h(A.I.)f(algorithm)p 0 0 1 TeXcolorrgb 0 0 1
TeXcolorrgb -31 3871 a(\226)p 0 0 1 TeXcolorrgb 248 w(Build)i(pr)o
(ogram)e(that)h(detects)f(handwritten)h(signatur)o(es)f(fr)o(om)h
(document)p 0.75 0 0.25 TeXcolorrgb 0.75 0 0.25 TeXcolorrgb
-31 4015 a(\226)p 0.75 0 0.25 TeXcolorrgb 248 w(Adapt)f(pr)o(ogram)h
(to)g(accept)f(ranging)h(document)h(formats)p 0 TeXcolorgray
0 TeXcolorgray 346 4208 a(\226)p 0 TeXcolorgray 248 w(Data)e(feeding)p
0 TeXcolorgray 346 4352 a(\226)p 0 TeXcolorgray 248 w(Check)h(License)h
(information)p 0 TeXcolorgray 346 4496 a(\226)p 0 TeXcolorgray
248 w(Check)f(permit)g(information)p 0.75 0 0.25 TeXcolorrgb
0.75 0.5 0.25 TeXcolorrgb 0.75 0.5 0.25 TeXcolorrgb -31
4689 a(\226)p 0.75 0.5 0.25 TeXcolorrgb 248 w(Optimize)f(the)h(pr)o
(ogram)p 0 TeXcolorgray 0 TeXcolorgray 346 4882 a(\226)p
0 TeXcolorgray 248 w(Debugging)p 0.75 0.5 0.25 TeXcolorrgb
0.75 0 0.25 TeXcolorrgb 0 0 1 TeXcolorrgb 1 0.648 0 TeXcolorrgb
0 TeXcolorgray -150 5195 a(Str)o(etch)f(Goals)h(\(to)h(be)f(scheduled)g
(after)g(completion)g(of)h(original)f(goals\))p 0 TeXcolorgray
-31 5460 a(\226)p 0 TeXcolorgray 248 w(Detect)g(the)g(model)g(of)h(a)f
(vehicle)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 13 14
TeXDict begin 13 13 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(13)p 0 TeXcolorgray 0 TeXcolorgray -31
-144 a Ff(\226)p 0 TeXcolorgray 248 w(Detect)22 b(the)g(make)f(of)i(a)f
(vehicle)p 0 TeXcolorgray -31 0 a(\226)p 0 TeXcolorgray
248 w(Detect/r)o(ead)g(license)f(plate)h(information)p
0 TeXcolorgray -31 145 a(\226)p 0 TeXcolorgray 248 w(Detect/r)o(ead)g
(license)f(and)i(permit)e(information)p 0 TeXcolorgray
-31 289 a(\226)p 0 TeXcolorgray 248 w(Gather)h(information)h(of)g(the)f
(condition)h(of)f(the)g(vehicle)g(\(e.g.:)g(dents,)g(cracks)g(and)g
(scratches\))-150 635 y Fe(2.5)79 b(Chang)q(e)23 b(of)g(Requirments)
-150 878 y Ff(Ther)o(e)e(ar)o(e)h(no)g(r)o(equirment)g(changes)g(made.)
-150 1224 y Fe(2.6)79 b(Final)23 b(Gantt)g(Char)r(t)-150
1466 y Ff(The)f(following)h(shows)f(pr)o(ogr)o(esses)e(on)i(our)h(pr)o
(oject.)p 0 TeXcolorgray 343 1646 a

 343 1646 a 343 1646
a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 377.01201 382.6817 0.0 -377.01201 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 191.34085 -188.506 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 14.17339 -22.6771 moveto

 14.17339 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 28.34679 -22.6771 moveto

 28.34679 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 42.52019 -22.6771 moveto

 42.52019 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 56.69359 -22.6771 moveto

 56.69359 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 70.86697 -22.6771 moveto

 70.86697 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 85.04037 -22.6771 moveto

 85.04037 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 99.21378 -22.6771 moveto

 99.21378 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 113.38718 -22.6771 moveto

 113.38718 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 127.56056 -22.6771 moveto

 127.56056 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 141.73396 -22.6771 moveto

 141.73396 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 155.90736 -22.6771 moveto

 155.90736 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 170.08076 -22.6771 moveto

 170.08076 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 184.25415 -22.6771 moveto

 184.25415 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 198.42755 -22.6771 moveto

 198.42755 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 212.60095 -22.6771 moveto

 212.60095 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 226.77435 -22.6771 moveto

 226.77435 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 240.94775 -22.6771 moveto

 240.94775 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 255.12114 -22.6771 moveto

 255.12114 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 269.29454 -22.6771 moveto

 269.29454 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 283.46794 -22.6771 moveto

 283.46794 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 297.64134 -22.6771 moveto

 297.64134 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 311.81473 -22.6771 moveto

 311.81473 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 325.98813 -22.6771 moveto

 325.98813 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 340.16153 -22.6771 moveto

 340.16153 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 354.33493 -22.6771 moveto

 354.33493 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 368.50832 -22.6771 moveto

 368.50832 -377.01202 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -22.6771 moveto

 382.68172 -22.6771 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -36.85048 moveto

 382.68172 -36.85048 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -51.02388 moveto

 382.68172 -51.02388 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -65.19728 moveto

 382.68172 -65.19728 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -79.37068 moveto

 382.68172 -79.37068 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -93.54407 moveto

 382.68172 -93.54407 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -107.71747 moveto

 382.68172 -107.71747 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -121.89087 moveto

 382.68172 -121.89087 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -136.06427 moveto

 382.68172 -136.06427 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -150.23767 moveto

 382.68172 -150.23767 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -164.41106 moveto

 382.68172 -164.41106 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -178.58446 moveto

 382.68172 -178.58446 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -192.75786 moveto

 382.68172 -192.75786 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -206.93126 moveto

 382.68172 -206.93126 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -221.10464 moveto

 382.68172 -221.10464 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -235.27805 moveto

 382.68172 -235.27805 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -249.45145 moveto

 382.68172 -249.45145 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -263.62485 moveto

 382.68172 -263.62485 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -277.79823 moveto

 382.68172 -277.79823 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -291.97163 moveto

 382.68172 -291.97163 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -306.14503 moveto

 382.68172 -306.14503 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -320.31844 moveto

 382.68172 -320.31844 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -334.49182 moveto

 382.68172 -334.49182 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -348.66522 moveto

 382.68172 -348.66522 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -362.83862 moveto

 382.68172 -362.83862 lineto

 pgfstr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 41.10277 0.7087 -11.33855 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 21.26009 -5.66927 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 16.76004 -8.73827 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(10)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 41.10277 43.22888 -11.33855 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 63.78027 -5.66927 ] concat

 pgfs



 0 setgray
 343
1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 59.28023 -8.78328 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(11)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 41.10277 85.74908 -11.33855 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 106.30046 -5.66927 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 101.80042 -8.78328 ] concat

 pgfs



 0 setgray
 343 1646
a Fb(12)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 41.10277 128.26927 -11.33855 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 148.82066 -5.66927 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 146.57065 -8.78328 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(1)343 1646
y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 41.10277 170.78946 -11.33855 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 191.34085 -5.66927 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 189.09084 -8.71579 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(2)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 41.10277 213.30965 -11.33855 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 233.86104 -5.66927 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 231.61102 -8.67078 ] concat

 pgfs



 0 setgray
 343
1646 a Fb(3)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 41.10277 255.82985 -11.33855 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 276.38123 -5.66927 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 274.13123 -8.78328 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(4)343
1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 41.10277 298.35004 -11.33855 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 318.90143 -5.66927 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 316.65141 -8.67078 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(5)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 41.10277 340.87022 -11.33855 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 361.42162 -5.66927 ] concat

 pgfs



 0 setgray
 343 1646
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 359.1716 -8.67078 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(6)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 0.7087 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 7.08669 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 4.83667 -20.12183 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(1)343
1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 14.8821 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 21.26009 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 19.01007 -20.05434 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(2)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 29.05548 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 35.43347 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 33.18346 -20.00932 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(3)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 43.22888 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 49.60687 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 47.35686 -20.12183 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(4)343
1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 57.40228 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 63.78027 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 61.53026 -20.00932 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(5)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 71.57568 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 77.95367 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 75.70366 -20.00932 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(6)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 85.74908 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 92.12706 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 89.87706 -20.05434 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(7)343
1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 99.92247 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 106.30046 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 104.05045 -20.00932 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(8)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 114.09587 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 120.47386 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 118.22385 -20.00932 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(9)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 128.26927 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 134.64726 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 130.14722 -20.07681 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(10)343
1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 142.44267 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 148.82066 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 144.32062 -20.12183 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(11)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 156.61606 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 162.99405 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 158.494 -20.12183 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(12)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 170.78946 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 177.16745 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 172.6674 -20.07681 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(13)343
1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 184.96286 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 191.34085 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 186.8408 -20.12183 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(14)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 199.13626 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 205.51425 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 201.0142 -20.07681 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(15)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 213.30965 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 219.68764 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 215.1876 -20.07681 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(16)343
1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 227.48305 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 233.86104 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 229.361 -20.12183 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(17)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 241.65645 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 248.03444 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 243.5344 -20.07681 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(18)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 255.82985 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 262.20784 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 257.7078 -20.07681 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(19)343
1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 270.00325 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 276.38123 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 271.8812 -20.00932 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(20)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 284.17664 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 290.55463 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 286.05458 -20.12183 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(21)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 298.35004 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 304.72803 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 300.22798 -20.05434 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(22)343
1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 312.52344 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 318.90143 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 314.40138 -20.00932 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(23)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 326.69684 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 333.07483 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 328.57478 -20.12183 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(24)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 340.87022 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 347.24821 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 342.74817 -20.00932 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(25)343
1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 355.04362 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 361.42162 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 356.92157 -20.00932 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(26)343 1646 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 12.75597 369.21703 -22.6771 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 375.59502 -17.00781 ] concat

 pgfs



 0 setgray
 343 1646
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 371.09497 -20.05434 ] concat

 pgfs



 0 setgray
 343 1646 a Fb(27)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{0 setgray}def

 save

 /pgffc{0 setgray}def

 -1.4174 -31.18121 moveto

 99.21378 -31.18121 lineto

 99.21378 -35.43326 lineto

 96.37915 -36.85068 lineto

 93.54451 -35.43326 lineto

 4.25183 -35.43326 lineto

 1.41719 -36.85068 lineto

 -1.4174 -35.43326 lineto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 48.89818 -33.30724 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -42.6766 -35.61523 ] concat

 pgfs



 0 setgray
 343 1646 a Fg(Fall)i(term)343
1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 9.92133 28.34679 0.0 -51.02386 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 14.17339 -46.0632 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -16.56116 -48.3712 ] concat

 pgfs



 0 setgray
 343 1646 a Ff(F-1)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 9.92133 56.69359 28.34679 -65.19727 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 56.69359 -60.2366 ] concat

 pgfs



 0 setgray
 343 1646
a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -16.56116 -62.5446 ] concat

 pgfs



 0 setgray
 343 1646 a Ff(F-2)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 9.92133 14.17337 28.34679 -79.37067 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 35.43347 -74.41 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -16.56116 -76.71799 ] concat

 pgfs



 0 setgray
 343 1646 a
Ff(F-3)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 9.92133 28.34679 28.34679 -93.54405 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 42.52019 -88.58339 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -16.56116 -90.89139 ] concat

 pgfs



 0 setgray
 343 1646 a Ff(F-4)343 1646
y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 9.92133 28.34679 42.52019 -107.71745 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 56.69359 -102.75679 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -16.56116 -105.06479 ] concat

 pgfs



 0 setgray
 343 1646 a Ff(F-5)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 9.92133 42.52017 56.69359 -121.89085 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 77.95367 -116.93019 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -16.56116 -119.23819 ] concat

 pgfs



 0 setgray

343 1646 a Ff(F-6)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{0 setgray}def

 save

 /pgffc{0 setgray}def

 126.14314 -130.39499 moveto

 240.94775 -130.39499 lineto

 240.94775 -134.64705 lineto

 238.11313 -136.06447 lineto

 235.27849 -134.64705 lineto

 131.8124 -134.64705 lineto

 128.97775 -136.06447 lineto

 126.14314 -134.64705 lineto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 183.54544 -132.52103 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -56.04323 -134.82901 ] concat

 pgfs



 0 setgray
 343 1646 a Fg(W)m(inter)g(term)
343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0 1 0 setrgbcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0 1 0 setrgbcolor}def

 9.92133 42.52017 127.56056 -150.23766 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 148.82066 -145.27698 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -20.25682 -147.58498 ] concat

 pgfs



 0 setgray
 343 1646 a Ff(W)l(-1)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 setrgbcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 setrgbcolor}def

 9.92133 56.69359 127.56056 -164.41104 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 155.90736 -159.45038 ] concat

 pgfs



 0 setgray

343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -20.25682 -161.75838 ] concat

 pgfs



 0 setgray
 343 1646 a Ff(W)l(-2)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 setrgbcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 setrgbcolor}def

 9.92133 56.69359 184.25415 -178.58444 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 212.60095 -173.62378 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -20.25682 -175.93178 ] concat

 pgfs



 0 setgray

343 1646 a Ff(W)l(-3)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 0 setcmykcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 0 setcmykcolor}def

 9.92133 42.52017 170.08076 -192.75784 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 191.34085 -187.79718 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -20.25682 -190.10516 ] concat

 pgfs



 0 setgray
 343 1646 a
Ff(W)l(-4)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 0 setcmykcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 0 setcmykcolor}def

 9.92133 28.34679 212.60095 -206.93124 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 226.77435 -201.97058 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -20.25682 -204.27856 ] concat

 pgfs



 0 setgray
 343 1646 a Ff(W)l(-5)343
1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 9.92133 14.17337 170.08076 -221.10463 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 177.16745 -216.14397 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -20.25682 -218.45197 ] concat

 pgfs



 0 setgray
 343 1646 a Ff(W)l(-6)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 9.92133 28.34679 170.08076 -235.27803 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 184.25415 -230.31737 ] concat

 pgfs



 0 setgray
 343
1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -20.25682 -232.62537 ] concat

 pgfs



 0 setgray
 343 1646 a Ff(W)l(-7)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 9.92133 28.34679 212.60095 -249.45143 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 226.77435 -244.49077 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -20.25682 -246.79877 ] concat

 pgfs



 0 setgray
 343
1646 a Ff(W)l(-8)343 1646 y


 pgfr

 restore

 restore

 170.28 -145.27698 moveto

 174.95297 -145.27698 lineto

 175.50322 -145.27698 175.94925 -145.72302 175.94925 -146.27325 curveto

 175.94923 -165.5408 lineto

 175.94923 -166.09103 175.5032 -166.53708 174.95296 -166.53708 curveto

 165.20853 -166.53708 lineto

 164.6583 -166.53708 164.21225 -166.98311 164.21225 -167.53336 curveto

 164.21225 -186.8009 lineto

 164.21225 -187.35114 164.6583 -187.79718 165.20853 -187.79718 curveto

 166.29497 -187.79718 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 166.29497 -187.79718 ] concat

 save 3.58653 0.0 moveto 2.52383 0.19925 0.797 0.797 -0.3985 1.49438
curveto -0.3985 -1.49438 lineto 0.797 -0.797 2.52383 -0.19925 3.58653
0.0 curveto pgffill restore

 restore

 184.45341 -159.45038 moveto

 189.12639 -159.45038 lineto

 189.67662 -159.45038 190.12267 -159.89642 190.12267 -160.44666 curveto

 190.12265 -165.5408 lineto

 190.12265 -166.09103 189.6766 -166.53708 189.12637 -166.53708 curveto

 179.38191 -166.53708 lineto

 178.83168 -166.53708 178.38564 -166.98311 178.38564 -167.53336 curveto

 178.38565 -172.6275 lineto

 178.38565 -173.17773 178.8317 -173.62378 179.38193 -173.62378 curveto

 180.46837 -173.62378 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 180.46837 -173.62378 ] concat

 save 3.58653 0.0 moveto 2.52383 0.19925 0.797 0.797 -0.3985 1.49438
curveto -0.3985 -1.49438 lineto 0.797 -0.797 2.52383 -0.19925 3.58653
0.0 curveto pgffill restore

 restore

 212.80019 -187.79718 moveto

 217.47318 -187.79718 lineto

 218.0234 -187.79718 218.46945 -188.24323 218.46945 -188.79346 curveto

 218.46945 -193.88759 lineto

 218.46945 -194.43782 218.0234 -194.88387 217.47318 -194.88387 curveto

 207.7287 -194.88387 lineto

 207.17847 -194.88387 206.73242 -195.32991 206.73242 -195.88014 curveto

 206.73244 -200.9743 lineto

 206.73244 -201.52454 207.17848 -201.97058 207.72871 -201.97058 curveto

 208.81516 -201.97058 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 208.81516 -201.97058 ] concat

 save 3.58653 0.0 moveto 2.52383 0.19925 0.797 0.797 -0.3985 1.49438
curveto -0.3985 -1.49438 lineto 0.797 -0.797 2.52383 -0.19925 3.58653
0.0 curveto pgffill restore

 restore

 save

 save

 /pgffc{0 setgray}def

 save

 /pgffc{0 setgray}def

 253.7037 -257.95557 moveto

 368.50832 -257.95557 lineto

 368.50832 -262.20763 lineto

 365.6737 -263.62505 lineto

 362.83907 -262.20763 lineto

 259.37297 -262.20763 lineto

 256.53833 -263.62505 lineto

 253.7037 -262.20763 lineto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 311.10602 -260.08159 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -55.87218 -262.38959 ] concat

 pgfs



 0 setgray
 343 1646 a Fg(Spring)h(term)343
1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0 1 0 setrgbcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0 1 0 setrgbcolor}def

 9.92133 70.86696 255.12114 -277.79822 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 290.55463 -272.83755 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -16.26671 -275.14555 ] concat

 pgfs



 0 setgray
 343 1646 a Ff(S-1)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 setrgbcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 setrgbcolor}def

 9.92133 56.69359 269.29454 -291.97162 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 297.64134 -287.01096 ] concat

 pgfs



 0 setgray
 343 1646
a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -16.26671 -289.31895 ] concat

 pgfs



 0 setgray
 343 1646 a Ff(S-2)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 0 setcmykcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 0 setcmykcolor}def

 9.92133 28.34679 269.29454 -306.14502 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 283.46794 -301.18436 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -16.26671 -303.49236 ] concat

 pgfs



 0 setgray
 343 1646 a
Ff(S-3)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 0 setcmykcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 0 setcmykcolor}def

 9.92133 42.52017 283.46794 -320.31842 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 304.72803 -315.35776 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -16.26671 -317.66574 ] concat

 pgfs



 0 setgray
 343 1646 a Ff(S-4)343 1646
y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 9.92133 14.17337 283.46794 -334.4918 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 290.55463 -329.53114 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -16.26671 -331.83914 ] concat

 pgfs



 0 setgray
 343 1646 a Ff(S-5)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 9.92133 14.17337 325.98813 -348.6652 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 333.07483 -343.70454 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -16.26671 -346.01254 ] concat

 pgfs



 0 setgray

343 1646 a Ff(S-6)343 1646 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.5 setgray}def

 9.92133 28.34679 340.16153 -362.83861 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 354.33493 -357.87794 ] concat

 pgfs



 0 setgray
 343 1646 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -16.26671 -360.18594 ] concat

 pgfs



 0 setgray
 343 1646 a Ff(S-7)343
1646 y


 pgfr

 restore

 restore

 326.18736 -272.83755 moveto

 330.86035 -272.83755 lineto

 331.41058 -272.83755 331.85663 -273.2836 331.85663 -273.83383 curveto

 331.85663 -278.92798 lineto

 331.85663 -279.47821 331.41058 -279.92426 330.86035 -279.92426 curveto

 264.42229 -279.92426 lineto

 263.87206 -279.92426 263.42601 -280.37029 263.42601 -280.92053 curveto

 263.42603 -286.01468 lineto

 263.42603 -286.56491 263.87207 -287.01096 264.4223 -287.01096 curveto

 265.50874 -287.01096 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 265.50874 -287.01096 ] concat

 save 3.58653 0.0 moveto 2.52383 0.19925 0.797 0.797 -0.3985 1.49438
curveto -0.3985 -1.49438 lineto 0.797 -0.797 2.52383 -0.19925 3.58653
0.0 curveto pgffill restore

 restore

 326.18736 -272.83755 moveto

 330.86035 -272.83755 lineto

 331.41058 -272.83755 331.85663 -273.2836 331.85663 -273.83383 curveto

 331.85663 -286.01468 lineto

 331.85663 -286.56491 331.41058 -287.01096 330.86035 -287.01096 curveto

 264.42229 -287.01096 lineto

 263.87206 -287.01096 263.42601 -287.457 263.42601 -288.00723 curveto

 263.42603 -300.18808 lineto

 263.42603 -300.73831 263.87207 -301.18436 264.4223 -301.18436 curveto

 265.50874 -301.18436 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 265.50874 -301.18436 ] concat

 save 3.58653 0.0 moveto 2.52383 0.19925 0.797 0.797 -0.3985 1.49438
curveto -0.3985 -1.49438 lineto 0.797 -0.797 2.52383 -0.19925 3.58653
0.0 curveto pgffill restore

 restore

 297.84059 -301.18436 moveto

 302.51357 -301.18436 lineto

 303.06381 -301.18436 303.50984 -301.6304 303.50984 -302.18063 curveto

 303.50983 -307.27477 lineto

 303.50983 -307.82501 303.0638 -308.27104 302.51355 -308.27104 curveto

 278.5957 -308.27104 lineto

 278.04547 -308.27104 277.59943 -308.71709 277.59943 -309.26732 curveto

 277.59943 -314.36148 lineto

 277.59943 -314.91171 278.04547 -315.35776 278.5957 -315.35776 curveto

 279.68214 -315.35776 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 279.68214 -315.35776 ] concat

 save 3.58653 0.0 moveto 2.52383 0.19925 0.797 0.797 -0.3985 1.49438
curveto -0.3985 -1.49438 lineto 0.797 -0.797 2.52383 -0.19925 3.58653
0.0 curveto pgffill restore

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 257
5084 a Ff(Fall)c(term)p 0 TeXcolorgray 340 5278 a(1)p
0 TeXcolorgray 95 w(Pr)o(oblem)g(statement)e(document)p
0 TeXcolorgray 340 5422 a(2)p 0 TeXcolorgray 95 w(Resear)o(ch)h(on)h
(Image)g(learning)g(API,)f(and)h(handwritten)g(r)o(ecognition)h
(algorithm)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 14 15
TeXDict begin 14 14 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(14)p 0 TeXcolorgray 0 TeXcolorgray 340
-144 a Ff(3)p 0 TeXcolorgray 95 w(Formating)22 b(github)g(page)p
0 TeXcolorgray 340 0 a(4)p 0 TeXcolorgray 95 w(Requirments)g(document)p
0 TeXcolorgray 340 145 a(5)p 0 TeXcolorgray 95 w(T)-7
b(echnology)22 b(r)o(eview)p 0 TeXcolorgray 340 289 a(6)p
0 TeXcolorgray 95 w(Design)g(document)g(and)h(Pr)o(ogr)o(ess)d(r)o
(eport)p 0 TeXcolorgray 0 TeXcolorgray 257 483 a(W)l(inter)i(term)p
0 TeXcolorgray 340 677 a(1)p 0 TeXcolorgray 95 w(OpenCV)g(and)g(T)-7
b(esseract)21 b(OCR)h(setup)p 0 TeXcolorgray 340 821
a(2)p 0 TeXcolorgray 95 w(Convolutional)g(Neural)f(Network:)i
(Implimenting)e(convolutional)h(neural)g(network)p 0
TeXcolorgray 340 966 a(3)p 0 TeXcolorgray 95 w(Convolutional)g(Neural)f
(Network:)i(Impr)o(oving)e(and)h(training)g(convolutional)g(neural)g
(network)p 0 TeXcolorgray 340 1110 a(4)p 0 TeXcolorgray
95 w(T)-7 b(essract)20 b(OCR:)i(Locating)h(the)f(signatur)o(e)f(fr)o
(om)h(the)g(image)p 0 TeXcolorgray 340 1254 a(5)p 0 TeXcolorgray
95 w(T)-7 b(essract)20 b(OCR:)i(Cr)o(opping)g(the)g(signatur)o(e)f(box)
h(based)f(on)i(sign)e(line)p 0 TeXcolorgray 340 1398
a(6)p 0 TeXcolorgray 95 w(Poster)h(design)p 0 TeXcolorgray
340 1543 a(7)p 0 TeXcolorgray 95 w(Mid-pr)o(ogr)o(ess)f(r)o(eport)p
0 TeXcolorgray 340 1687 a(8)p 0 TeXcolorgray 95 w(Pr)o(ogr)o(ess)g(r)o
(eport)p 0 TeXcolorgray 0 TeXcolorgray 257 1881 a(Spring)h(term)p
0 TeXcolorgray 340 2075 a(1)p 0 TeXcolorgray 95 w(T)-7
b(esting)21 b(and)h(debugging)p 0 TeXcolorgray 340 2219
a(2)p 0 TeXcolorgray 95 w(Convolutional)g(Neural)f(Network:)i
(Debugging)f(signatur)o(e)e(r)o(ecognition)j(algorithm)p
0 TeXcolorgray 340 2363 a(3)p 0 TeXcolorgray 95 w(T)-7
b(essract)20 b(OCR:)i(Debugging)g(on)h(line)f(detection)p
0 TeXcolorgray 340 2508 a(4)p 0 TeXcolorgray 95 w(T)-7
b(essract)20 b(OCR:)i(Debugging)g(on)h(page)e(segmentation)p
0 TeXcolorgray 340 2652 a(5)p 0 TeXcolorgray 95 w(Final)h(poster)p
0 TeXcolorgray 340 2796 a(6)p 0 TeXcolorgray 95 w(Expo)p
0 TeXcolorgray 340 2940 a(7)p 0 TeXcolorgray 95 w(Final)g(r)o(eport)g
(and)g(video)-148 3311 y Fh(3)96 b(D)t Fi(E)t(S)t(I)t(G)t(N)33
b Fh(D)t Fi(O)t(C)t(U)t(M)t(E)t(N)t(T)-150 3554 y Fe(3.1)79
b(Over)q(vie)o(w)-150 3796 y Fd(3.1.1)g(Scope)-150 4031
y Ff(This)35 b(document)h(will)h(cover)f(nine)g(pieces)f(of)i(the)f(pr)
o(oject)f(including)h(our)h(chosen)f(technology)g(to)g(accomplish)g
(that)f(task)g(and)-150 4175 y(pr)o(ojected)24 b(plans)g(r)o(egar)o
(ding)h(that)f(technology)-9 b(.)26 b(This)e(will)h(include)h(plans)d
(for)j(if)g(the)f(technology)g(fails)g(to)g(be)g(what)f(we)h
(anticipated)-150 4319 y(as)20 b(well)h(as)f(plans)g(of)h(dr)o(opping)g
(the)f(piece)h(down)g(the)g(line)g(should)g(it)f(no)h(longer)h(be)e(r)o
(elevant)g(to)h(our)g(needs.)f(These)g(pieces)g(will)h(each)-150
4464 y(be)26 b(discussed)h(fr)o(om)g(a)f(de\002ned)h(perspective)f(or)h
(viewpoint)f(that)g(best)g(de\002nes)h(the)f(technology)i(in)f
(question.)f(Some)g(examples)f(of)-150 4608 y(viewpoints)c(include)i(a)
e(dependency)i(viewpoint,)e(algorithmic)i(viewpoint,)e(and)h
(composition)g(viewpoint.)-150 4917 y Fd(3.1.2)79 b(Pur)r(pose)22
b(and)g(Bac)n(kg)o(round)-150 5152 y Ff(Planning)g(is)g(vital)f(to)h
(the)g(success)f(of)i(this)e(pr)o(oject.)g(Each)h(component)h(should)f
(be)g(consider)o(ed)g(and)g(have)g(backups)e(in)j(place)e(should)-150
5296 y(our)27 b(pr)o(edictions)g(go)h(awry)-9 b(.)27
b(As)f(such,)g(this)h(design)g(document)h(helps)e(illustrate)g(our)h
(pr)o(ojected)g(plans)f(and)h(security)g(pr)o(ecautions.)-150
5441 y(This)h(will)h(help)f(give)h(clarity)f(for)i(our)f(client)f(as)g
(well)h(as)f(ourselves)g(in)g(seeing)h(how)g(we)f(intend)h(to)g(pr)o
(ogr)o(ess)e(and)i(gives)f(us)g(clear)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 15 16
TeXDict begin 15 15 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(15)p 0 TeXcolorgray -150 -144 a Ff(markers)25
b(for)g(when)g(we)g(have)g(achieved)f(a)h(given)g(task.)f(While)h(this)
f(document)h(will)g(not)h(exhaustively)d(cover)i(every)g(edge)g(case,)f
(it)-150 0 y(does)e(touch)g(upon)g(nine)g(vital)g(ar)o(eas)e(our)j(gr)o
(oup)e(has)h(been)g(concerned)h(about)e(for)i(completing)f(the)g(pr)o
(oject.)-150 310 y Fd(3.1.3)79 b(Intended)22 b(A)n(udience)-150
545 y Ff(The)d(primary)g(audience)g(for)i(this)e(document)g(will)h(be)f
(our)h(instr)o(uctors)f(and)h(client)f(who)h(have)f(moderate)g(to)h
(high)f(levels)g(of)h(expertise)-150 689 y(within)g(this)e(\002eld.)i
(This)f(document)g(will)h(help)f(in)g(giving)h(clarity)f(r)o(egar)o
(ding)g(our)h(intended)g(actions)f(in)h(the)f(following)h(months)f(as)g
(we)-150 833 y(enter)i(the)f(coding)i(and)e(development)h(phase)e(of)i
(the)g(pr)o(oject.)e(In)i(addition,)g(this)f(document)h(will)g(operate)
f(as)f(a)i(checklist)f(within)h(our)-150 977 y(own)f(gr)o(oup)f(to)h
(ensur)o(e)f(we)h(ar)o(e)f(staying)g(consistent)g(with)h(our)g
(documented)h(plans)d(and)i(with)g(what)f(we)h(actually)f(pr)o(oduced.)
-150 1286 y Fd(3.1.4)79 b(Glossar)r(y)-150 1521 y Ff([1])22
b(\224OpenCV)g(T)-7 b(utorial)22 b(C++\224)f(Internet:)h
(https://opencv-srf.blogspot.com,)e([Nov)-9 b(.)22 b(21,)f(2017].)-150
1738 y([2])h(\224LearnOpenCV\224)g(Internet:)g(https://www)-7
b(.learnopencv)e(.com,)20 b(Oct.)i(30,)f(2015)f([Nov)-9
b(.)23 b(14,)e(2017].)-150 1954 y([3])h(\224CDK)h(Global\224)f
(Internet:)f(https://www)-7 b(.cdkglobal.com/,)21 b(2017)f([Nov)-9
b(.)23 b(10,)e(2017].)-150 2171 y([4])h(\224Python\224)g(Internet:)f
(https://www)-7 b(.python.or)o(g/,)20 b(Oct.)i(17,)f(2017)g([Nov)-9
b(.)22 b(12,)f(2017].)-150 2387 y([5])h(\224Smoothing)g(Images\224)f
(Internet:)g(https://docs.opencv)-9 b(.or)o(g,)20 b([Nov)-9
b(.)23 b(21,)e(2017].)-150 2603 y([6])h(\224OpenCV)g(T)-7
b(utorial)22 b(C++\224)f(Internet:)h(https://opencv-srf.blogspot.com,)e
([Nov)-9 b(.)22 b(21,)f(2017].)-150 2820 y([7])h(\224Filters)g(B\224)g
(Internet:)g(http://www)-7 b(.bogotobogo.com,)21 b(2016)f([Nov)-9
b(.)22 b(20,)g(2017].)-150 3036 y([8])g(\224Image)f(Magick\224)h
(Internet:)f(https://www)-7 b(.imagemagick.or)o(g,)19
b(2017)i([Nov)-9 b(.)22 b(21,)f(2017].)-150 3252 y([9])h
(\224Ghostscript\224)f(Internet:)h(https://www)-7 b(.ghostscript.com,)
19 b(2016)i([Nov)-9 b(.)22 b(20,)f(2017].)-150 3469 y([10])h
(\224MuPDF\224)f(Internet:)h(https://mupdf.com/,)e(2017)h([Nov)-9
b(.)22 b(21,)f(2017].)-150 3685 y([11])c(\224OCR)33 b(Optical)16
b(Character)g(Recognition)h(Internet:)f(http://www)-7
b(.r)o(ecogniform.net/eng/ocr)o(-optical-character)o(-r)o
(ecognition.html,)-150 3829 y(2016)20 b([Dec.)j(1,)f(2017].)-150
4046 y([12])17 b(\224System)e(softwar)o(e:)g(User)h(interfaces\224)g
(Internet:)g(https://en.wikibooks.or)o
(g/wiki/A-levelComputing/CIE/Computersystems,communicationsandsoftwa)p
(r)o(e/Sys)o(tems)o(oftwar)o(e/Us)o(erinterfaces,)-150
4190 y(2017)k([Dec.)j(1,)f(2017].)-150 4536 y Fe(3.2)79
b(Design)23 b(Vie)o(wpoints)-150 4779 y Fd(3.2.1)79 b(Introduction)-150
5014 y Ff(The)29 b(viewpoints)f(model)h(of)h(depicting)f(our)g(various)
g(pieces)f(for)i(this)e(pr)o(oject)h(gives)f(the)h(opportunity)f(to)h
(plan)g(for)h(that)e(piece)h(in)-150 5158 y(r)o(egar)o(ds)e(to)h(what)f
(r)o(ole)h(it)f(must)g(serve.)g(The)g(various)g(viewpoints)g(depicted)h
(below)f(show)h(what)f(the)h(intended)g(function)g(for)h(that)-150
5302 y(technology)i(is)e(for)i(the)f(gr)o(oup)g(and)g(how)g(it)g(will)g
(be)g(used)g(to)g(serve)f(the)h(pr)o(oject)f(as)h(a)f(whole.)i(Each)f
(viewpoint)f(carries)h(its)g(own)-150 5446 y(distinct)22
b(subset)f(of)h(r)o(ules)g(as)g(well)g(to)g(help)g(clarify)g(the)g
(particular)g(function)g(it)g(needs)g(to)h(carry)f(out.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 16 17
TeXDict begin 16 16 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(16)p 0 TeXcolorgray -150 -144 a Fd(3.2.2)79
b(Conte)n(xt)22 b(Vie)n(wpoints)-150 91 y Ff(3.2.2.1)77
b(Design)32 b(Concerns:)45 b(Each)32 b(piece)f(of)h(technology)h(is)e
(outlined)h(in)g(its)f(purpose)g(as)g(well)g(as)g(its)g(potential)g
(shortcomings.)-150 235 y(Depending)22 b(on)f(the)g(viewpoint)g(being)g
(utilized)g(for)h(that)f(given)g(piece,)g(the)g(exact)f
(speci\002cations)g(of)i(this)f(section)g(vary)-9 b(,)21
b(but)g(the)g(cor)o(e)-150 380 y(of)31 b(it)f(r)o(emains)f(the)h(same.)
e(W)-7 b(e)30 b(pr)o(esent)f(the)h(pr)o(oblem,)f(the)h(potential)f(r)o
(estrictions)h(that)f(exist,)g(and)h(our)h(intended)f(technology)h(to)
-150 524 y(r)o(emedy)24 b(this)f(while)i(not)f(violating)f(the)h(r)o
(estrictions)f(in)h(place.)f(In)h(addition,)h(it)e(will)h(include)h
(alternatives)d(should)i(our)g(pr)o(edictions)-150 668
y(be)e(wr)o(ong.)-150 884 y(3.2.2.2)77 b(Design)19 b(Elements:)32
b(In)18 b(this)h(section)g(of)h(a)e(pr)o(ovided)i(viewpoint)e(the)h
(technology)h(in)f(question)g(will)g(be)g(described)g(in)h(gr)o(eater)
-150 1029 y(detail.)33 b(Indications)f(of)i(what)e(str)o(engths)g(or)h
(weaknesses)f(an)g(item)h(may)f(have)h(ar)o(e)f(described)h(her)o(e)g
(as)f(well)h(as)f(the)h(alternative)-150 1173 y(technologies)38
b(abilities.)f(Beyond)j(this)d(portion,)i(depending)f(on)h(the)f
(viewpoint)g(being)g(used)g(ther)o(e)g(ar)o(e)f(additional)i(potential)
-150 1317 y(subsections)21 b(that)g(may)h(follow)-7 b(.)-150
1626 y Fd(3.2.3)79 b(Languages)22 b(of)g(OpenCV\(Composition\))-150
1861 y Ff(3.2.3.1)77 b(Design)28 b(Concerns:)41 b(The)27
b(lar)o(gest)g(concern)i(in)f(this)f(design)h(is)g(the)f(fact)h(that)f
(OpenCV)h(is)g(primarily)g(r)o(estricted)f(to)h(only)g(a)-150
2006 y(few)c(languages.)f(C++,)h(Python,)g(and)g(Java)f(ar)o(e)g(the)h
(thr)o(ee)g(candidates)f(worth)i(considering,)f(and)h(ther)o(e)e(ar)o
(e)h(signi\002cant)f(dif)o(fer)o(ences)-150 2150 y(between)k(them.)f
(When)i(choosing)f(the)g(language)f(for)j(our)e(pr)o(oject,)f(we)h
(have)g(to)g(consider)h(two)f(major)g(factors:)g(AI)f(is)h(a)g
(computa-)-150 2294 y(tionally)e(heavy)f(pr)o(ocess,)g(and)h(we)g(need)
g(to)g(primarily)g(pr)o(ove)g(that)f(the)h(task)f(can)h(be)f(done)i
(\(not)g(necessarily)e(in)h(the)g(most)f(ef)o(\002cient)-150
2438 y(manner\).)e(After)f(consideration)h(of)g(these)f(factors,)g(we)h
(decided)g(to)g(go)g(with)f(C++)h(as)e(our)i(primary)f(focus)h(given)f
(its)g(documentation)-150 2583 y(and)h(optimization)f([1],)i(but)e(a)h
(backup)f(plan)g(has)h(been)f(made)h(for)h(Python)g(migration.)-150
2799 y(3.2.3.2)77 b(Design)22 b(Elements:)35 b(Design)22
b(entities:)-150 2943 y(The)k(primary)h(entity)f(is)g(the)h(language)f
(itself,)g(C++,)h(with)f(its)g(supported)g(libraries)h(as)e(an)i
(extension)f(of)h(that.)f(C++)h(is)f(the)h(leading)-150
3087 y(language)c(in)h(extensive)e(library)i(support)e(which)i(helped)g
(lead)g(to)g(its)f(design)g(choice.)i(Python)e(is)h(the)f(backup)g(her)
o(e)g(with)h(a)f(weaker)-150 3232 y(overall)i(support,)f(but)g(it)h
(maintains)f(a)h(competent)f(package)g(for)i(AI)f(usage)f([2].)h(In)g
(either)g(case)f(the)h(envir)o(onment)g(for)h(working)g(on)-150
3376 y(the)k(pr)o(oject)f(will)h(not)h(change;)e(both)h(function)h(in)f
(the)g(same)f(space)g(and)i(will)f(not)g(r)o(equir)o(e)g(special)f
(equipment)g(to)i(complete)e(the)-150 3520 y(coding.)-150
3881 y(Design)22 b(r)o(elationships:)-150 4025 y(The)c(language)f(will)
h(de\002ne)g(how)g(the)g(entir)o(e)g(pr)o(oject)f(pr)o(oceeds.)g(It)h
(will)g(be)g(involved)g(in)g(all)g(components)f(of)i(our)f(pr)o(oject.)
f(Peripherals)-150 4169 y(to)32 b(this)f(pr)o(oject)g(such)h(as)f
(Docker)i(support)e(and)h(cloud)g(storage)g(ar)o(e)f(consider)o(ed)h
(low)h(priority;)f(CDK)g(can)g(easily)f(handle)h(those)-150
4314 y(portions)c(on)h(their)g(own)g([3].)f(The)g(pr)o(ogram)g(will)h
(be)f(designed)h(with)f(modularity)h(in)f(mind,)h(however)g(should)f
(this)g(pr)o(ogram)g(be)-150 4458 y(expanded)22 b(upon,)f(we)i(will)f
(need)g(to)g(r)o(educe)h(the)f(dif)o(\002culties)f(involved)h(with)h
(accomplishing)e(that)h(task.)-150 4818 y(Design)g(attributes:)-150
4963 y(C++)37 b(operates)e(in)h(a)g(pr)o(edictable,)g(expected)g
(manner)-6 b(.)36 b(Maintaining)f(an)h(up-to-date)h(grasp)e(on)i(its)f
(functionality)g(is)g(r)o(elatively)-150 5107 y(dif)o(\002cult)27
b(due)f(to)h(its)f(memory)h(allocation)f(and)h(syntax)f(r)o(equir)o
(ements,)f(but)h(it)g(does)h(r)o(esult)f(in)g(some)h(of)g(the)f(best)g
(performances)h(at)-150 5251 y(r)o(untime.)d(Python)h(\(as)e(a)h
(backup\))g(does)g(carry)h(some)f(dif)o(fer)o(ences)g(fr)o(om)h(what)f
(might)g(be)g(traditionally)g(expected.)g(For)h(OpenCV)f(to)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 17 18
TeXDict begin 17 17 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(17)p 0 TeXcolorgray -150 -144 a Ff(function)30
b(pr)o(operly)f(on)h(Python,)g(it)f(will)h(utilize)f(C++)g
(signi\002cantly)g(just)g(out)g(of)h(view)g(of)g(the)f(pr)o(ogrammer)h
(thr)o(ough)f(the)h(use)e(of)-150 0 y(library)22 b(packages)f(like)h
(numpy)f([4].)-150 217 y(3.2.3.3)77 b(Data)27 b(Attributes:)39
b(The)28 b(internal)f(functions)h(of)h(C++)f(ar)o(e)f(very)h
(\003exible)g(by)f(natur)o(e)g(despite)g(the)h(syntactic)f(dif)o
(\002culties)g(of)-150 361 y(writing)g(in)g(it.)f(A)g(fair)h(bit)f(of)h
(this)f(pr)o(ogram)g(will)h(be)f(dynamic)h(in)g(natur)o(e;)e(the)h(AI)g
(will)h(be)f(learning)h(fr)o(om)g(a)f(constantly)g(changing)-150
505 y(database)18 b(of)i(images)e(and)h(as)g(such)g(must)f(be)h
(\003exible)g(in)h(its)f(capacity)f(to)h(interpr)o(et)g(the)g(data.)g
(Ther)o(e)f(will)i(be)f(some)g(static)f(elements)h(to)-150
650 y(this)k(pr)o(ogram)g(as)g(well,)h(including)g(image)f(conversion)h
(and)g(image)f(\002ltering.)h(All)f(r)o(eceived)h(\002les)f(will)h(be)f
(in)h(PDF)g(format)g(and)g(will)-150 794 y(be)d(text)f(documents)h
(that)g(will)g(need)g(to)g(be)g(scanned.)g(This)f(allows)h(for)h(the)f
(afor)o(ementioned)g(components)g(to)g(r)o(emain)f(static.)-150
1010 y(In)25 b(the)g(event)g(Python)g(is)g(incorporated)h(into)f(the)g
(pr)o(oject,)f(pr)o(esumably)g(due)h(to)g(complications)g(with)g(C++,)g
(the)g(attributes)f(will)h(be)-150 1154 y(mostly)f(the)f(same)g(as)h
(well.)f(The)h(pr)o(ocess)f(will)h(be)g(identical,)g(but)f(the)h
(functions)g(used)g(will)g(have)f(to)h(be)g(dif)o(fer)o(ent.)g(If)g
(this)g(dir)o(ection)-150 1299 y(is)c(taken)h(with)g(the)f(pr)o(oject)g
(ther)o(e)h(will)g(be)f(a)h(notable)f(slowdown)i(in)f(performance)g(r)o
(egar)o(ding)f(all)h(aspects)e(of)i(our)g(pr)o(oject)f(due)h(to)g(the)
-150 1443 y(natur)o(e)g(of)i(Python.)-150 1752 y Fd(3.2.4)79
b(Image)22 b(Filter)q(ing\(Algor)q(ithm\))-150 1987 y
Ff(3.2.4.1)77 b(Design)30 b(Concerns:)43 b(The)30 b(leading)g(concern)h
(for)f(this)g(pr)o(oject)f(is)h(whether)g(the)f(task)g(assigned)g(to)i
(us)e(can)h(be)f(completed.)-150 2131 y(As)d(such,)f(the)i(focus)f(for)
h(image)f(\002ltering)h(is)f(placed)g(on)h(how)f(ef)o(fective)h(it)f
(is)g(at)g(assisting)f(the)h(pr)o(ogram)g(in)g(\002nding)h(the)f
(signatur)o(e)-150 2276 y(windows.)17 b(It)f(is)h(not)g(a)f(primary)h
(concern)g(at)g(pr)o(esent)e(to)i(have)f(the)h(most)f(optimal)g
(algorithm)h(used)g(for)g(the)g(smoothing)g(of)g(our)g(images,)-150
2420 y(just)j(one)i(that)f(will)h(be)f(most)g(likely)h(to)f(succeed.)g
(Should)h(we)f(be)h(incorr)o(ect)g(in)f(our)h(assumptions)d(for)k(what)
e(would)h(work)g(best,)e(ther)o(e)-150 2564 y(ar)o(e)28
b(another)h(two)g(functions)g(that)g(could)g(be)g(used)f(as)h
(substitute.)d(Should)j(the)g(pr)o(oject)f(be)h(pr)o(oven)f(possible,)g
(consideration)h(will)-150 2708 y(be)f(made)g(for)h(using)f(mor)o(e)g
(ef)o(\002cient)g(functions)g(without)g(losing)h(accuracy)f(on)g(pr)o
(ogram)g(r)o(eadouts.)f(Median)h(will)h(be)f(the)g(second)-150
2853 y(choice)c(due)g(to)f(the)h(fact)f(that)g(it)h(carries)f(slightly)
g(str)o(onger)h(pr)o(operties)e(at)h(shape)f(r)o(etention)i(thr)o(ough)
f(the)g(blurring)h(pr)o(ocess.)e(If)i(both)-150 2997
y(pr)o(eceding)e(options)g(fail)g(then)g(Gaussian)f(is)g(unlikely)i(to)
f(impr)o(ove)f(the)h(situation)f(but)h(will)g(be)g(attempted)f(r)o
(egar)o(dless)f([5].)-150 3213 y(3.2.4.2)77 b(Design)17
b(Elements:)30 b(For)18 b(this)f(portion)h(of)g(the)f(pr)o(oject)f(we)i
(ar)o(e)e(inter)o(ested)h(in)g(impr)o(oving)g(r)o(eadability)g(for)h
(the)f(AI)g(in)g(the)h(event)-150 3357 y(the)f(submitted)e(images)h(ar)
o(e)g(\002lled)h(with)g(too)g(much)g(noise)g(and)g(it)f(cannot)h(corr)o
(ectly)g(interpr)o(et)f(what)h(is)f(being)h(fed)g(to)g(it.)f(T)-7
b(o)17 b(accomplish)-150 3502 y(this,)i(ther)o(e)g(exist)f(several)h
(dif)o(fer)o(ent)h(functions)f(that)g(seek)g(to)g(smooth)h(out)f(a)g
(pr)o(ovided)h(image)f(at)f(varying)i(computational)e(costs.)g(The)-150
3646 y(leading)24 b(choice)h(for)g(our)f(needs)g(is)g(bilateral)f
(\002ltering,)h(a)g(method)g(that)g(r)o(etains)f(edges)h(very)g(well)g
(while)g(blurring)h(everything)f(else.)-150 3790 y(Fallback)d(options)g
(in)h(the)g(event)f(of)h(failur)o(e)f(include)h(median)g(and)g
(Gaussian)e(which)i(ar)o(e)f(cheaper)g(to)h(r)o(un)g(on)g(a)g(system)e
(but)h(pr)o(ovide)-150 3934 y(a)28 b(signi\002cantly)g(str)o(onger)h
(blur)f(that)g(can)h(disr)o(upt)f(the)h(original)g(shape)f(of)h(an)f
(object)g(within)h(the)g(image.)f(Median)g(still)h(makes)e(an)-150
4079 y(ef)o(fort)g(to)g(pr)o(eserve)f(object)g(form)h(while)g(r)o
(emoving)g(static-like)f(noise)g(in)h(an)g(image,)f(but)g(it)h(doesnt)f
(make)g(shape)g(r)o(etention)g(a)h(high)-150 4223 y(priority)-9
b(.)27 b(Gaussian)e(by)i(itself)f(is)h(a)f(very)h(harsh)f(method)h(of)h
(blurring)f(for)g(our)g(purposes)e(in)i(that)f(it)h(does)g(not)g(car)o
(e)f(about)g(original)-150 4367 y(form)d(of)g(the)f(image;)f(it)h(ef)o
(fectively)g(passes)e(a)i(thick)g(br)o(ush)g(acr)o(oss)f(the)h(image)g
(and)g(that)f(is)h(it)g([6].)-150 4584 y(3.2.4.3)77 b(Pr)o(ocessing)17
b(Attribute:)30 b(Bilateral)18 b(\002ltering)g(can)f(ef)o(fectively)h
(r)o(emove)g(noise)g(whilst)f(r)o(etaining)h(the)f(object)h(within)g
(the)g(image.)-150 4728 y(It)25 b(is)g(a)h(costly)f(function)h(call)g
(however;)g(bilateral)e(\002ltering)i(functions)g(via)f(calling)g(two)h
(unique)g(gaussian)e(\002lters)h(and)g(designating)-150
4872 y(one)h(to)f(sweep)g(thr)o(ough)g(the)g(space)f(of)i(the)g(image)f
(and)g(sear)o(ch)g(for)h(sharp)f(changes)f(in)i(pixel)f(intensity)g
(which)h(indicates)f(the)g(edge)-150 5016 y(of)30 b(an)e(object.)h(The)
f(other)i(\002lter)f(will)g(move)g(thr)o(ough)g(the)g(image)f(and)h
(blur)g(whatever)g(does)g(not)g(show)g(a)g(steep)e(change)i(in)h(pixel)
-150 5161 y(intensity)-9 b(.)20 b(For)i(this)f(pr)o(ocess)e(to)j(work)f
(in)g(a)g(r)o(easonable)e(manner)-6 b(,)21 b(it)g(will)g(be)g
(implemented)g(with)g(the)g(same)f(language)g(as)g(the)h(AI)f(and)-150
5305 y(be)h(handed)h(the)f(image)f(conversion)i(of)g(our)f(PDFs.)g(The)
g(output)f(should)h(enable)g(the)g(AI)f(pr)o(ogram)h(to)g(mor)o(e)g(r)o
(eadily)g(see)g(the)g(distinct)-150 5449 y(objects)27
b(on)g(the)h(image)f(and,)g(most)g(importantly)-9 b(,)27
b(determine)h(the)f(locations)g(of)i(signatur)o(e)d(windows.)h(In)h
(the)f(event)g(that)g(bilateral)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 18 19
TeXDict begin 18 18 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(18)p 0 TeXcolorgray -150 -144 a Ff(does)21
b(not)g(accomplish)f(the)h(task,)e(the)i(use)f(of)h(a)g(median)g
(\002lter)f(is)h(our)g(next)f(best)g(option.)h(Median)g(functions)g
(under)g(a)f(r)o(elatively)g(new)-150 0 y(method)27 b(for)h(OpenCV)f
(in)g(which)g(it)g(pr)o(ocesses)e(all)h(channels)h(of)g(the)g(image)f
(input)g(independently)-9 b(.)27 b(This)f(pr)o(ocess)g(as)g(a)g(r)o
(esult)g(can)-150 145 y(fr)o(equently)c(blur)g(any)g(salt-and-pepper)f
(like)h(noise)g(on)g(an)g(image)g(without)g(br)o(eaking)f(up)h(object)f
(form)i([7].)-150 454 y Fd(3.2.5)79 b(Computer)23 b(Vision)d(Libr)o(ar)
r(y\(Composition\))-150 689 y Ff(3.2.5.1)77 b(Design)19
b(Concerns:)33 b(Choosing)19 b(computer)g(vision)g(library)g(is)g
(critical)g(for)h(designing)f(signatur)o(e)f(detecting)h(softwar)o(e.)g
(Using)-150 833 y(a)e(r)o(obust)g(library)g(will)h(impr)o(ove)f(the)h
(functionality)f(of)h(the)g(softwar)o(e)f(and)g(r)o(educe)h(the)f
(development)h(time.)f(T)-7 b(o)17 b(select)g(good)h(quality)f(of)-150
977 y(library)-9 b(,)20 b(thr)o(ee)f(common)i(computer)e(vision)h
(libraries)f(ar)o(e)h(compar)o(ed.)f(These)g(libraries,)g(T)-7
b(ensorFlow)g(,)19 b(Deep)h(Learning)g(4)g(Java\(DL4J\),)-150
1122 y(and)36 b(OpenCV)h(ar)o(e)e(evaluated)g(based)h(on:)g
(\003exibility)g(of)h(envir)o(onment)f(and)g(language,)f(variety)h(of)h
(functions,)f(weight)g(of)h(the)-150 1266 y(functions,)25
b(and)h(the)f(size)f(of)i(the)f(community)-9 b(.)26 b(When)f
(considering)h(these)f(factors,)g(OpenCV)h(library)f(was)f(chosen)i
(for)g(this)f(pr)o(oject)-150 1410 y(as)c(the)h(str)o(ongest)f
(candidate.)-150 1626 y(3.2.5.2)77 b(Design)22 b(Elements:)35
b(Design)22 b(entities:)-150 1771 y(OpenCV)30 b(is)g(an)g(Open)f(Sour)o
(ce)h(Computer)f(V)l(ision)h(Library)h(that)e(pr)o(ovides)g(various)h
(functions)g(r)o(elated)f(to)h(digital)g(imagery)g(and)-150
1915 y(video.)24 b(Since)g(the)g(main)f(goal)h(of)h(this)e(pr)o(oject)g
(is)h(r)o(ecognizing)g(signatur)o(es)e(on)i(a)g(document,)g(this)f
(library)h(will)h(be)e(vital)g(in)i(corr)o(ectly)-150
2059 y(analyzing)c(any)i(submitted)e(form.)i(OpenCV)g(supports)d(many)i
(languages)f(such)h(as)g(C++,)g(C,)h(Python)f(and)h(Java)e(but)h(it)g
(is)h(optimized)-150 2203 y(primarily)c(for)h(C)f(and)h(C++.)f(Also,)f
(it)h(is)g(executable)f(on)h(both)h(desktop)e(\(W)l(indows,)i(Linux,)f
(Andr)o(oid,)g(MacOS,)g(Fr)o(eeBSD,)g(OpenBSD\))-150
2348 y(and)j(mobile)g(\(Andr)o(oid,)h(Maemo,)f(iOS\))g([10].)-150
2708 y(Design)g(r)o(elationships:)-150 2853 y(Computer)34
b(vision)g(library)h(have)f(high)g(r)o(elationship)g(with)g(design)h
(and)f(ef)o(\002ciency)h(of)g(the)f(algorithm.)h(Each)f(computer)g
(vision)-150 2997 y(library)c(supports)f(dif)o(fer)o(ent)h(functions)h
(to)f(solve)g(the)g(same)f(pr)o(oblem.)h(Based)g(on)g(what)g(library)g
(that)g(softwar)o(e)g(is)f(using,)h(design)-150 3141
y(of)36 b(the)f(algorithm)h(will)g(change.)f(In)g(addition,)h(since)f
(each)g(library)h(supports)e(dif)o(fer)o(ent)i(functions,)f(the)g
(performance)h(of)g(each)-150 3285 y(functions)21 b(varies.)e(Ther)o
(efor)o(e,)h(choosing)h(a)g(good)g(library)g(will)g(incr)o(ease)f(the)g
(performance)h(of)g(the)g(entir)o(e)f(softwar)o(e.)g(The)g(interaction)
-150 3430 y(between)h(envir)o(onment)h(and)g(library)g(is)f(also)h
(important.)e(Since)i(dif)o(fer)o(ent)g(libraries)g(supports)e(dif)o
(fer)o(ent)i(languages)f(and)g(operating)-150 3574 y(systems,)i(our)i
(choice)h(will)f(signi\002cantly)f(impact)g(our)i(options)e(when)h
(developing)g(the)g(pr)o(oject.)f(OpenCV)h(has)f(high)h(\003exibility)g
(on)-150 3718 y(envir)o(onment.)d(It)f(supports)g(four)h(languages)f
(and)h(r)o(unnable)g(on)h(nine)f(operating)g(systems.)-150
4079 y(3.2.5.3)77 b(Design)23 b(Attributes:)36 b(Unlike)23
b(other)h(computer)f(vision)h(libraries,)f(OpenCV)h(been)f(functioning)
h(for)h(years)e(with)h(continued)-150 4223 y(support.)17
b(Because)g(of)i(this,)e(OpenCV)h(carries)g(with)g(it)g(a)g(lar)o(ge)f
(and)h(diverse)g(community)g(of)h(supporters.)d(Accor)o(ding)j(to)f
(the)g(OpenCV)-150 4367 y(website,)28 b(ther)o(e)h(ar)o(e)g(47)f
(thousand)h(people)g(in)g(the)g(user)g(community)-9 b(,)29
b(and)g(mor)o(e)h(than)e(14)h(million)h(downloads)f([10].)g(Since)g
(ther)o(e)-150 4511 y(is)35 b(such)f(a)h(lar)o(ge)f(community)-9
b(,)35 b(learning)g(OpenCV)g(and)g(\002xing)g(issues)f(will)h(likely)g
(be)g(easier)f(than)h(with)g(less)f(documented)i(or)-150
4656 y(supported)29 b(formats.)h(OpenCV)g(is)g(very)g(fast)g(at)g(r)o
(untime)g(when)g(compar)o(ed)g(to)g(other)h(AI)e(platforms.)h(This)f
(is)h(because)f(OpenCV)-150 4800 y(library)h(is)h(written)f(in)h(C)f
(and)h(C++.)f(It)g(also)g(supports)f(500)g(impr)o(oved)h(algorithms)g
(to)g(accelerate)g(the)h(original)f(algorithms)g([10].)-150
4944 y(OpenCV)d(do)g(this)f(by)g(using)g(CUDA)h(which)g(is)f(modern)h
(GPU)g(accelerators)f(that)g(incr)o(ease)f(GPU)i(performance,)f(so)h
(an)f(algorithm)-150 5088 y(can)c(be)g(computed)g(in)g(a)g(short)g
(period)g(of)h(time.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 19 20
TeXDict begin 19 19 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(19)p 0 TeXcolorgray -150 -144 a Fd(3.2.6)79
b(T)-9 b(e)n(xt)21 b(Recognition)g(Method\(Algor)q(ithm\))-150
91 y Ff(3.2.6.1)77 b(Design)19 b(Concerns:)33 b(Choosing)19
b(computer)g(vision)g(library)g(is)g(critical)g(for)h(designing)f
(signatur)o(e)f(detecting)h(softwar)o(e.)g(Using)-150
235 y(a)e(r)o(obust)g(library)g(will)h(impr)o(ove)f(the)h
(functionality)f(of)h(the)g(softwar)o(e)f(and)g(r)o(educe)h(the)f
(development)h(time.)f(T)-7 b(o)17 b(select)g(good)h(quality)f(of)-150
380 y(library)-9 b(,)20 b(thr)o(ee)f(common)i(computer)e(vision)h
(libraries)f(ar)o(e)h(compar)o(ed.)f(These)g(libraries,)g(T)-7
b(ensorFlow)g(,)19 b(Deep)h(Learning)g(4)g(Java\(DL4J\),)-150
524 y(and)36 b(OpenCV)h(ar)o(e)e(evaluated)g(based)h(on:)g
(\003exibility)g(of)h(envir)o(onment)f(and)g(language,)f(variety)h(of)h
(functions,)f(weight)g(of)h(the)-150 668 y(functions,)25
b(and)h(the)f(size)f(of)i(the)f(community)-9 b(.)26 b(When)f
(considering)h(these)f(factors,)g(OpenCV)h(library)f(was)f(chosen)i
(for)g(this)f(pr)o(oject)-150 812 y(as)c(the)h(str)o(ongest)f
(candidate.)-150 1029 y(3.2.6.2)77 b(Design)22 b(Elements:)35
b(Design)22 b(entities:)-150 1173 y(Intelligent)40 b(Character)h
(Recognition\(ICR\))g(is)g(a)f(text)g(r)o(ecognition)i(algorithm.)e(It)
h(converts)f(text)g(images)g(to)h(electr)o(onical)g(text)-150
1317 y(documents)32 b(by)g(taking)g(thr)o(ee)g(steps.)e(It)i(\002rst)g
(analyzes)f(the)h(image,)g(r)o(ecognizes)f(the)h(paragraphs,)f(text)g
(lines,)h(and)g(wor)o(ds)h(fr)o(om)-150 1461 y(the)e(image.)g(Then,)f
(it)h(splits)f(the)h(images)g(into)g(individual)g(characters.)g(On)g
(the)g(last)g(step,)f(it)h(compar)o(es)f(image)g(characters)h(with)-150
1606 y(characters)22 b(in)g(the)g(dictionary)-9 b(,)23
b(and)f(converts)g(the)g(characters)f([11].)-150 1966
y(Design)h(r)o(elationships:)-150 2111 y(ICR)k(dir)o(ectly)h(impacts)f
(the)g(performance)h(and)g(speed)f(of)h(the)g(softwar)o(e.)e(Since)i
(ICR)f(is)h(the)f(algorithm)h(that)f(is)g(used)g(for)i(detecting)-150
2255 y(the)i(signatur)o(e)e(box,)i(the)f(higher)h(accuracy)g(of)g(the)g
(character)f(r)o(ecognition)i(will)f(lead)f(to)h(the)g(higher)g
(accuracy)g(for)g(detecting)g(the)-150 2399 y(signatur)o(e)23
b(box.)i(It)f(also)g(impacts)g(the)g(speed)g(of)i(the)e(softwar)o(e.)g
(If)h(the)f(algorithm)h(is)f(heavy)-9 b(,)25 b(speed)f(of)h(the)g
(softwar)o(e)f(will)h(go)g(down.)-150 2543 y(ICR)d(algorithm)g(does)g
(have)g(comparatively)f(high)h(accuracy)g(and)g(high-speed)g(when)g
(looking)h(at)f(its)f(competitors.)-150 2904 y(3.2.6.3)77
b(Design)20 b(Attributes:)31 b(For)20 b(detecting)g(characters,)g(ICR)f
(has)g(thr)o(ee)h(featur)o(es)f(to)g(incr)o(ease)h(the)f(accuracy)h(of)
g(the)g(function.)g(First)-150 3048 y(it)f(compar)o(es)f(the)h(image)f
(character)h(with)h(character)e(in)i(dictionary)-9 b(.)19
b(Second,)h(it)f(evaluates)e(the)i(characteristics)f(of)i(the)f
(character)f(such)-150 3192 y(as)23 b(number)g(of)h(lines)f(and)h
(angles)e(between)h(lines)h(to)f(determine)h(which)g(character)f(is)g
(it.)g(Last)g(featur)o(e)g(is)g(the)g(self-learning)h(featur)o(e.)-150
3337 y(ICR)f(learns)g(thr)o(ough)h(its)f(experience)g(to)h(incr)o(ease)
f(accuracy)-9 b(.)23 b(Also,)g(since)g(it)g(can)h(learn)f(dif)o(fer)o
(ent)h(font)g(and)g(style,)f(it)g(can)h(determine)-150
3481 y(handwritten)e(texts)f(fr)o(om)i(the)f(image.)-150
3790 y Fd(3.2.7)79 b(User)22 b(Interf)n(ace)g(T)-9 b(ype\(Logical)21
b(Vie)n(wpoint\))-150 4025 y Ff(3.2.7.1)77 b(Design)39
b(Concerns:)53 b(Selecting)39 b(pr)o(oper)f(user)h(interface)g(is)g
(important)g(to)g(draw)h(full)f(functionality)g(of)h(the)f(signatur)o
(e)-150 4169 y(detection)17 b(softwar)o(e)g(by)f(user)-6
b(.)17 b(T)-7 b(o)16 b(choose)h(the)g(best)f(user)h(interface)g(for)g
(the)g(softwar)o(e,)f(characteristics)g(of)i(the)f(user)f(and)h
(characteristics)-150 4314 y(of)37 b(the)g(softwar)o(e)f(wer)o(e)h
(consider)o(ed.)g(Determining)g(who)g(is)g(the)f(user)h(and)g
(characteristics)e(of)j(them)e(is)h(the)f(one)h(of)h(the)e(most)-150
4458 y(important)29 b(factor)-6 b(.)30 b(Based)g(on)g(their)g
(knowledge)h(and)f(experience,)f(ef)o(\002ciency)h(of)h(the)e(user)h
(interface)g(will)g(change)g(dramatically)-9 b(.)-150
4602 y(Also,)21 b(softwar)o(e)g(characteristics)g(such)g(as)g(input)f
(constraints)h(and)h(har)o(dwar)o(e)f(constraints)g(also)g(in\003uence)
g(user)h(interface.)f(Based)h(on)-150 4746 y(the)g(two)g
(characteristics,)f(menu)h(driven)g(interface)h(has)e(been)h(chosen)g
(among)g(command)h(line)f(and)g(form)h(based)e(interface.)-150
4963 y(3.2.7.2)77 b(Design)22 b(Elements:)35 b(Design)22
b(entities:)-150 5107 y(Menu)f(Driven)h(interface)f(interacts)g(with)g
(user)g(by)g(pr)o(oviding)g(simple)g(selectable)f(menus)g(to)i(user)-6
b(.)20 b(It)h(will)h(show)f(a)g(small)f(number)h(of)-150
5251 y(selectable)j(menus)g(to)g(the)h(user)-6 b(,)24
b(and)h(when)g(user)g(select)f(the)g(menu,)h(it)f(will)h(perform)h(the)
e(task)g(that)g(was)g(written)h(on)g(the)g(menu)g(or)-150
5395 y(gives)e(the)g(other)g(selectable)g(menus)f([12].)h(Menu)g
(driven)h(interface)f(is)g(similar)g(as)g(tr)o(ee)f(str)o(uctur)o(e.)h
(First)g(menus)f(act)h(as)g(a)g(r)o(oot)g(of)h(the)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 20 21
TeXDict begin 20 20 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(20)p 0 TeXcolorgray -150 -144 a Ff(tr)o(ee,)21
b(and)i(on)f(each)g(menu,)g(they)g(may)f(or)i(may)f(not)g(have)f
(branch)h(menus.)-150 217 y(Design)g(r)o(elationships:)-150
361 y(As)i(it)g(mentioned)h(on)f(design)h(concerns)g(section,)f
(selecting)g(pr)o(oper)g(user)g(interface)g(will)h(incr)o(ease)e(the)i
(chance)f(of)h(user)f(to)g(perform)-150 505 y(pull)32
b(functionality)g(of)g(the)g(softwar)o(e,)g(and)g(considering)h
(characteristics)e(of)h(user)g(and)g(softwar)o(e)g(will)g(make)g
(higher)g(chance)g(for)-150 650 y(user)e(to)h(do)g(this.)f(Potential)g
(user)g(of)h(the)f(signatur)o(e)g(detection)h(softwar)o(e)f(is)g
(employee)g(of)h(the)f(car)h(dealers.)f(They)g(have)g(little)h(or)-150
794 y(no)f(knowledge)h(on)f(arti\002cial)f(intelligence)h(or)h(image)e
(r)o(ecognition)i(pr)o(ocess.)d(Ther)o(efor)o(e,)i(user)f(interface)h
(must)f(be)h(simple)f(to)h(use)-150 938 y(without)d(backgr)o(ound)g
(knowledge)h(of)g(image)f(r)o(ecognition.)g(Signatur)o(e)f(detection)i
(softwar)o(e)e(need)i(to)f(take)g(the)g(image)g(document)-150
1082 y(and)g(give)f(r)o(esult)g(of)h(the)f(signatur)o(e)f(detection,)i
(so)f(user)h(interface)f(does)h(not)g(need)g(to)f(pr)o(ovide)h
(unnecessary)e(ability)h(to)h(user)-6 b(.)26 b(This)-150
1227 y(will)c(only)h(draw)f(confusion)h(to)f(user)-6
b(,)22 b(and)g(it)g(might)g(lead)g(to)g(malicious)g(code.)-150
1587 y(Design)g(constraints:)-150 1731 y(Since)36 b(menu)g(driven)h
(interface)g(limits)e(the)i(users)e(action,)h(it)g(also)g(constraints)g
(the)g(functionality)g(of)h(the)g(softwar)o(e.)e(However)-6
b(,)-150 1876 y(signatur)o(e)22 b(r)o(ecognition)i(softwar)o(e)f(has)f
(simple)h(functionality)-9 b(,)23 b(so)g(limiting)h(softwar)o(e)f
(contr)o(ol)g(will)h(not)g(af)o(fect)f(the)g(ef)o(\002ciency)g(of)i
(this)-150 2020 y(softwar)o(e.)-150 2381 y(3.2.7.3)77
b(Design)21 b(Attributes:)32 b(The)21 b(str)o(uctur)o(e)f(of)i(the)f
(menu)g(driven)h(interface)f(is)g(simple)f(and)h(intuitive.)f(User)h
(simply)f(have)g(to)i(click)-150 2525 y(on)29 b(the)f(menu)g(that)g(is)
g(pr)o(ovided,)h(so)f(it)g(doesnt)h(r)o(equir)o(e)f(any)g(backgr)o
(ound)g(knowledge.)h(In)f(addition,)h(this)f(interface)h(constraints)
-150 2669 y(the)c(ability)g(of)h(the)f(user)g(by)g(giving)g(limited)h
(option)f(to)h(user)-6 b(.)24 b(This)h(will)h(r)o(educe)f(the)g
(confusion)h(of)g(the)f(user)g(and)g(avoid)h(malicious)-150
2813 y(code.)-150 3122 y Fd(3.2.8)79 b(Image)22 b(Con)n(v)n(er)s(ting)h
(\(Dependency\))-150 3357 y Ff(3.2.8.1)77 b(Design)22
b(Concerns:)36 b(The)22 b(pr)o(ogram)g(will)h(need)f(to)h(begin)f
(operations)g(using)g(PDF)g(\002les,)g(which)h(ar)o(e)f(not)g(a)g
(valid)h(\002le)f(format)-150 3502 y(when)g(operating)f(with)h(OpenCV)
-10 b(.)21 b(T)-7 b(o)21 b(r)o(esolve)g(this)h(issue,)e(the)h(use)g(of)
i(an)e(external)g(image)g(conversion)h(pr)o(ogram)g(will)f(be)h
(necessary)-9 b(.)-150 3646 y(Functionality)25 b(is)f(the)h(priority)g
(in)h(design)f(and)g(consideration)g(for)h(ef)o(\002ciency)f(will)g(be)
g(made)g(after)g(we)g(can)g(con\002rm)g(the)g(pr)o(oject)f(is)-150
3790 y(doable.)-150 4007 y(3.2.8.2)77 b(Design)21 b(Elements:)34
b(The)21 b(leading)g(candidate)h(for)g(image)f(conversion)g(is)g
(ImageMagick,)f(which)i(operates)e(as)h(a)g(standalone)-150
4151 y(image)k(converter)h(within)f(C++)h(that)f(is)g(open)g(sour)o
(ce.)g(W)l(ith)g(command)g(line)h(support,)e(the)h(pr)o(ogram)g(can)g
(convert)h(our)g(PDFs)f(into)-150 4295 y(JPEG)f(which)g(OpenCV)f(can)h
(then)f(corr)o(ectly)g(interpr)o(et)g([8].)g(It)g(does)h(r)o(equir)o(e)
f(mor)o(e)g(computer)g(r)o(esour)o(ces)f(to)h(function)h(compar)o(ed)f
(to)-150 4439 y(some)k(competitors)f(such)h(as)f(GhostScript)g(and)h
(MuPDF[9][10].)g(However)-6 b(,)27 b(it)g(is)g(important)f(to)h(note)g
(that)f(ImageMagick)g(will)h(do)-150 4584 y(the)21 b(entir)o(e)g
(conversion)g(in)h(one)f(go)h(unlike)f(MuPDF)g([10],)g(and)g(it)g(is)g
(fr)o(ee)g(to)h(use)e(unlike)h(GhostScript[9].)g(As)g(it)g(stands,)f
(the)h(existence)-150 4728 y(of)k(an)f(image)f(converter)i(is)f
(necessary)f(for)i(us)f(when)g(handling)h(the)f(various)f(example)g
(inputs)g(pr)o(ovided)i(to)f(us,)f(but)h(the)g(longevity)-150
4872 y(of)32 b(this)f(portion)g(in)g(our)h(pr)o(oject)e(is)h
(questionable.)f(It)h(is)g(possible)f(that)g(our)i(client)f(will)g
(want)g(to)g(incorporate)h(their)f(own)h(image)-150 5016
y(conversion)22 b(pr)o(ocess)f(so)h(plans)f(to)i(make)e(this)h(section)
g(of)h(our)f(pr)o(oject)f(easily)g(r)o(emovable)h(have)f(been)h(made.)
-150 5233 y(3.2.8.3)77 b(Dependency)30 b(attributes:)42
b(In)30 b(the)g(\002nal)f(stages)g(of)i(this)e(pr)o(oject,)g(the)h
(dependencies)g(on)g(\002le)g(conversion)h(may)e(go)i(away)-150
5377 y(when)22 b(handing)h(the)f(AI)f(pr)o(ogram)h(of)o(f)g(to)h(our)f
(client.)g(However)-6 b(,)22 b(it)g(is)g(vital)f(until)h(we)g(r)o(each)
g(that)g(point.)f(W)l(ithout)h(this)g(softwar)o(e,)f(we)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 21 22
TeXDict begin 21 21 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(21)p 0 TeXcolorgray -150 -144 a Ff(ar)o(e)18
b(unable)g(to)h(corr)o(ectly)h(build)f(a)f(library)h(fr)o(om)g(which)h
(our)f(pr)o(oject)f(can)h(r)o(ead)f(to)h(make)g(its)f(assessments.)e
(As)i(pr)o(eviously)g(mentioned)-150 0 y(as)24 b(well,)g(OpenCV)g(does)
h(not)f(r)o(ead)g(PDFs)g(in)h(any)f(capacity)-9 b(,)23
b(and)h(so)h(to)f(corr)o(ectly)h(analyze)e(a)h(document)g(it)h(must)e
(\002rst)h(be)g(pr)o(ovided)-150 145 y(in)e(a)g(legible)g(format)g(for)
h(the)f(pr)o(ogram.)-150 454 y Fd(3.2.9)79 b(Runtime)22
b(en)n(vironment)g(and)g(Neur)o(al)g(Net)h(\(Algor)q(ithm\))-150
689 y Ff(3.2.9.1)77 b(Design)26 b(Concerns:)39 b(The)26
b(pr)o(oject)f(being)h(designed)g(must)f(be)h(hosted)g(in)h(a)e(r)o
(untime)h(envir)o(onment)g(that)f(is)h(continuous)g(as)-150
833 y(well)32 b(as)f(r)o(eliable.)f(Given)i(that)f(we)h(ar)o(e)f
(taking)g(an)g(unsupervised)f(learning)i(appr)o(oach)e(to)i(complete)f
(our)h(task,)e(it)i(is)f(imperative)-150 977 y(that)j(it)g(be)g(able)g
(to)h(r)o(un)g(concurr)o(ently)f(with)h(instances)e(of)i(itself.)f(The)
g(pr)o(ogram)g(must)g(be)g(designed)h(in)f(such)g(a)g(way)g(that)g(the)
-150 1122 y(ideal)24 b(envir)o(onment)f(can)g(host)h(it)f(and)h(r)o(un)
g(it)f(for)i(extended)f(periods)f(of)i(time.)e(When)h(taking)f(this)g
(design)h(paradigm)f(into)g(account,)-150 1266 y(the)32
b(algorithm)h(r)o(unning)g(on)g(this)f(envir)o(onment)g(pr)o(esents)f
(itself)i(as)e(the)i(biggest)e(design)i(constraint.)f(It)g(must)g(be)g
(optimized)g(to)-150 1410 y(be)26 b(as)g(noninvasive)g(to)g(the)h(r)o
(untime)f(envir)o(onment)g(as)g(possible,)f(while)i(also)f(ef)o
(\002ciently)g(making)g(pr)o(ogr)o(ess)g(towar)o(ds)g(the)g(desir)o(ed)
-150 1554 y(outcome.)-150 1771 y(3.2.9.2)77 b(Design)22
b(Elements:)35 b(Design)22 b(entities:)-150 1915 y(The)k(\002rst)g
(thing)h(to)f(take)g(into)h(account)f(is)g(what)g(speci\002c)g(r)o
(untime)h(envir)o(onments)e(can)i(be)f(chosen)g(to)h(perform)g(this)f
(task.)f(Car)o(eful)-150 2059 y(consideration)f(has)e(landed)i(our)f
(gr)o(oup)g(to)g(opt)g(for)h(OSUs)e(\003ip)h(server)g(as)f(opposed)h
(to)g(other)h(paid)e(servers)h(or)g(personal)g(machines.)-150
2203 y(The)18 b(second)h(design)g(entity)f(is)g(the)h(algorithm)f
(itself.)g(For)i(this)e(speci\002c)g(pr)o(oject)f(we)i(will)g(be)f
(implementing)g(a)g(Convolutional)h(Neural)-150 2348
y(Network)24 b(algorithm)h(speci\002cally)e(suited)g(for)j(the)e(pr)o
(ocessing)f(of)i(images,)e(and)h(qualities)f(within)i(them.)f(Design)g
(wise,)f(the)h(neural)-150 2492 y(net)g(must)g(be)g(instantiated)g(to)g
(r)o(un)h(continuously)-9 b(,)25 b(but)e(in)i(such)f(a)g(manner)h(that)
f(does)g(not)h(exhaust)e(our)i(student)f(r)o(esour)o(ces)f(on)i(the)
-150 2636 y(OSU)30 b(\003ip)h(server)-6 b(.)31 b(\(e.g.)g(utilize)f
(our)h(allotted)g(amount)f(of)i(memory\))g(This)e(will)h(pr)o(ove)f(to)
h(be)g(a)g(key)g(challenge)g(since)f(CNNs)h(ar)o(e)-150
2780 y(extr)o(emely)22 b(memory)h(intensive)e(algorithms,)h(often)h
(handled)g(by)g(Graphical)f(Pr)o(ocessing)g(Units)f(as)h(opposed)g(to)h
(normal)f(Computer)-150 2925 y(Pr)o(ocessing)f(ar)o(chitectur)o(es.)
-150 3285 y(Design)h(r)o(elationships:)-150 3430 y(How)27
b(often)g(we)g(can)g(deploy)g(our)g(algorithm,)f(as)g(well)h(as)f(how)h
(ef)o(\002ciently)g(we)g(can)g(allow)f(it)h(to)g(r)o(un)g(on)g(the)g
(given)g(envir)o(onment,)-150 3574 y(pr)o(esents)21 b(itself)i(as)e(a)i
(critical)g(constraint)f(in)h(r)o(egar)o(ds)f(to)h(the)f(\002nal)h
(outcome)f(of)i(our)f(ef)o(forts.)f(If)h(either)g(of)g(these)f(aspects)
f(ar)o(e)i(handled)-150 3718 y(sub-optimally)e(it)h(will)g(inevitably)f
(af)o(fect)h(how)h(well)f(our)g(algorithm)g(learns,)g(as)f(well)h(as)g
(its)f(performance)i(as)e(an)h(end)g(pr)o(oduct.)-150
4079 y(Design)g(attributes:)-150 4223 y(OSUs)f(\003ip)i(server)f(is)g
(monitor)o(ed)g(24/7)g(as)f(well)i(as)e(available)g(24/7.)g(It)h(has)f
(high)i(memory)g(constraints)e(for)j(students)d(and)h(excellent)-150
4367 y(support)e(if)i(ther)o(e)e(wer)o(e)h(to)h(be)f(unexpected)f(pr)o
(oblems.)g(Convolutional)h(Neural)g(Nets)f(ar)o(e)h(excellent)g(at)f
(discerning)i(patterns)e(within)-150 4511 y(pixel)h(image)g(data.)g
(The)g(various)f(layers)h(can)h(be)f(dissected)g(as)g(levels)g(of)h
(depth)f(r)o(egar)o(ding)g(the)h(images)e(attributes.)g(It)h(r)o(equir)
o(es)g(high)-150 4656 y(memory)h(usage)-150 5016 y(3.2.9.3)77
b(Data)21 b(Attributes:)34 b(Data)21 b(Attributes:)-150
5161 y(The)k(data)f(being)i(fed)g(into)f(the)g(algorithm)g(is)g(of)h
(numerical)f(3-dimensional)g(natur)o(e.)f(This)h(is)g(essentially)f
(what)g(an)h(image)g(is)g(when)-150 5305 y(pr)o(ocessed)c(in)i(its)f
(raw)g(form.)h(The)f(convolutional)g(network)h(that)e(will)i(be)f
(instantiated)f(will)h(handle)h(numbers)e(ranging)i(fr)o(om)f(1-255)
-150 5449 y(per)i(channel,)g(\(RGB\),)h(per)f(pixel.)g(The)f(handling)i
(and)f(pr)o(ocessing)f(of)i(all)f(these)f(dif)o(fer)o(ent)i(ranges)e
(is)h(the)g(culprit)g(for)h(convolutional)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 22 23
TeXDict begin 22 22 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(22)p 0 TeXcolorgray -150 -144 a Ff(networks)32
b(extr)o(emely)e(heavy)h(memory)h(load.)g(Our)g(design)f(must)g
(combine)h(the)f(pr)o(ocessing)g(of)h(these)f(numbers)g(with)g(the)h
(right)-150 0 y(amount)21 b(of)i(hidden)g(neural)f(layers)g(so)g(that)f
(the)h(network)g(functions)h(pr)o(operly)-9 b(,)21 b(but)h(does)g(not)g
(overload)h(the)f(system.)-150 491 y Fe(3.3)79 b(Conc)n(lusion)-150
733 y Ff(For)28 b(each)f(piece)g(of)h(the)f(pr)o(oject)f(mentioned,)h
(the)g(pr)o(oblem)g(has)f(been)h(de\002ned)h(and)f(a)g(technology)h(to)
f(r)o(emedy)h(that)e(pr)o(oblem)h(has)-150 878 y(been)f(identi\002ed.)h
(In)g(addition,)g(alternatives)e(have)h(been)g(listed)h(in)f(the)h
(event)f(we)h(misjudged)f(a)g(given)h(technology)-9 b(.)27
b(Also,)f(thanks)-150 1022 y(to)j(the)g(viewpoints)f(model)i(being)f
(used,)g(we)g(now)g(have)g(gr)o(eater)f(clarity)h(on)h(how)f(these)g
(various)f(pr)o(oblems)g(play)h(in)g(the)g(bigger)-150
1166 y(pictur)o(e)23 b(of)i(the)e(pr)o(oject)g(and)h(how)h(best)e(to)h
(appr)o(oach)e(them.)i(While)g(ther)o(e)f(ar)o(e)h(likely)g(mor)o(e)g
(parts)e(to)i(this)g(pr)o(oject)f(of)h(which)h(we)f(ar)o(e)-150
1310 y(curr)o(ently)e(unawar)o(e,)f(this)i(pr)o(ovides)e(a)h(str)o(ong)
h(enough)f(foundation)h(to)g(move)f(forwar)o(d)h(into)g(the)f
(development)g(and)h(coding)g(phase)-150 1455 y(of)g(the)f(pr)o(oject.)
-150 1801 y Fe(3.4)79 b(Design)23 b(Chang)q(es)-150 2043
y Ff(Ther)o(e)e(is)h(no)h(design)f(changes)f(on)i(our)f(pr)o(oject)-148
2414 y Fh(4)96 b(T)t Fi(E)t(C)t(H)32 b Fh(R)t Fi(E)t(V)t(I)t(E)t(W)-150
2656 y Fe(4.1)79 b(Langua)o(g)q(e)24 b(of)f(OpenCV)-150
2899 y Fd(4.1.1)79 b(Ov)n(er)r(vie)n(w)-150 3134 y Ff(This)16
b(portion)i(of)f(the)g(document)h(will)f(go)g(into)h(a)e(technical)h(r)
o(eview)g(of)h(thr)o(ee)f(potential)f(options)g(for)i(OpenCV)g
(supporting)e(languages.)-150 3278 y(The)24 b(options)f(ar)o(e)h(C++,)g
(Python,)g(and)g(Java;)g(the)g(pr)o(os)f(and)h(cons)h(of)f(each)g(will)
h(be)f(noted.)g(Once)h(all)f(options)f(ar)o(e)h(consider)o(ed,)g(ther)o
(e)-150 3422 y(will)33 b(be)f(a)g(discussion)g(that)f(dir)o(ectly)i
(compar)o(es)e(these)h(thr)o(ee)g(choices.)h(Lastly)-9
b(,)31 b(a)h(conclusion)h(will)g(be)f(drawn)h(fr)o(om)g(these)e(thr)o
(ee)-150 3567 y(choices)22 b(r)o(egar)o(ding)g(the)g(leader)g(that)g
(we)g(will)g(utilize)g(going)g(forwar)o(d.)-150 3876
y Fd(4.1.2)79 b(Cr)q(iter)q(ia)-150 4111 y Ff(Our)26
b(pr)o(oject)f(has)g(a)h(har)o(d)f(r)o(equir)o(ement)h(that)f(the)g(AI)
h(be)f(open)h(sour)o(ced.)f(As)g(such,)g(we)h(ar)o(e)f(r)o(estricted)h
(to)g(utilizing)f(established)g(AI)-150 4255 y(platforms.)30
b(W)l(ith)h(this)g(in)h(mind,)f(OpenCV)h(is)e(the)i(leading)f
(candidate)g(primarily)g(due)g(to)h(its)e(\003exibility)h(and)h
(popularity)e(when)-150 4399 y(wanting)23 b(to)g(handle)g(image)f(pr)o
(ocessing.)g(When)h(factoring)g(in)g(that)g(OpenCV)g(is)f(our)h(AI)g
(of)g(choice,)g(ther)o(e)g(ar)o(e)f(only)i(thr)o(ee)e(language)-150
4543 y(options)27 b(that)f(ar)o(e)g(viable:)g(C++,)h(Python,)g(and)g
(Java.)f(Thus)g(at)g(pr)o(esent)g(our)h(only)h(feasible)e(options)h
(for)h(supporting)d(the)i(AI)g(ar)o(e)f(to)-150 4688
y(choose)c(between)g(these)f(thr)o(ee)h(pr)o(ogramming)g(languages.)
-150 4997 y Fd(4.1.3)79 b(Options)-150 5232 y Ff(4.1.3.1)e(C++:)34
b(C++)21 b(is)g(the)f(primary)h(language)f(used)h(by)g(OpenCV)g(and)g
(the)g(most)f(r)o(obust)g(in)h(general.)g(C++)g(is)g(widely)g(r)o(egar)
o(ded)g(as)-150 5376 y(one)26 b(of)g(the)g(most)f(ef)o(\002cient)g
(languages)f(when)i(it)g(comes)f(to)h(r)o(untime)f(r)o(esour)o(ces.)g
(It)g(also)g(carries)g(the)h(lar)o(gest)e(selection)i(of)g(tutorials)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 23 24
TeXDict begin 23 23 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(23)p 0 TeXcolorgray -150 -144 a Ff(and)31
b(guides)g(to)g(use)f(for)i(picking)e(up)h(and)g(using)f(OpenCV)-10
b(.)31 b(The)f(library)h(supported)f(under)i(C++)f(is)f(massive)f(when)
i(compar)o(ed)-150 0 y(to)d(most)g(other)h(languages.)d(Lastly)-9
b(,)28 b(the)g(community)g(backing)g(it)h(is)e(extensive.)g(This)h
(option)g(has)g(been)g(available)e(for)k(years,)d(and)-150
145 y(thanks)35 b(to)g(its)g(status)e(as)i(fr)o(ee-to-use)g(and)h(its)e
(ef)o(\002ciency)-9 b(,)36 b(many)f(users)f(have)h(taken)g(to)g
(working)h(with)g(it.)f(As)f(a)h(r)o(esult,)f(many)-150
289 y(questions)27 b(have)g(been)h(answer)o(ed)f(alr)o(eady)h(r)o(egar)
o(ding)f(the)h(usage)f(of)h(OpenCV)g(within)g(a)g(C++)g(language.)e
(Some)i(issues)e(do)j(arise)-150 433 y(with)c(the)g(C++)h(variant)e
(with)h(the)g(lar)o(gest)f(being)h(poor)h(documentation.)f(Another)g
(complaint)f(is)h(that)g(while)g(it)g(supports)f(a)g(str)o(ong)-150
577 y(library)-9 b(,)21 b(its)f(actual)g(pool)h(of)h(machine)f
(learning)g(components)f(is)h(rather)g(limited)g(by)g(comparison.)f
(This)h(r)o(esults)e(in)i(dif)o(\002culties)g(when)-150
722 y(attempting)g(to)h(use)f(multiple)g(dif)o(fer)o(ent)i(learning)f
(r)o(outines)f(on)i(a)e(pr)o(ogram.)h(Another)g(issue)f(is)g(the)h
(challenge)g(of)h(interpr)o(eting)e(code)-150 866 y(and)30
b(the)h(debugging)f(pr)o(ocess.)f(While)i(this)f(is)g(a)f(normal)i
(issue)e(for)i(any)g(pr)o(ogramming)e(language,)g(for)j(C++)e(it)g(is)g
(compounded)-150 1010 y(when)22 b(attempting)e(to)h(make)g(use)g(of)h
(machine)f(learning)h(algorithms.)e(If)i(the)f(pr)o(ogrammer)g(needs)g
(to)h(write)f(any)h(code)g(fr)o(om)g(scratch,)-150 1154
y(this)g(method)g(becomes)g(a)f(nightmar)o(e)h(for)h(compr)o(ehension.)
-150 1371 y(4.1.3.2)77 b(Python:)42 b(Python)28 b(is)h(the)f(leading)h
(rival)f(of)i(C++)e(in)h(language)f(pr)o(efer)o(ences.)f(The)i(most)f
(popular)g(str)o(ength)f(of)j(Python)e(is)-150 1515 y(the)j(simple)g
(ease)f(of)i(use)f(associated)f(with)i(it.)f(The)g(language)f(is)i
(straightforwar)o(d)f(and)g(easy)g(to)g(write)h(in.)f(Another)h(inter)o
(esting)-150 1659 y(fact)c(about)g(Python)g(is)g(that)g(its)f(often)i
(r)o(egar)o(ded)f(as)g(a)g(language)f(of)i(scienti\002c)f(computing,)g
(with)g(support)f(for)i(packages)e(such)h(as)-150 1804
y(OpenCV)-10 b(,)31 b(numpy)-9 b(,)30 b(scipy)-9 b(,)30
b(scikit-learn,)h(and)g(matplotlib[1].)f(In)g(dir)o(ect)h(contrast)g
(to)g(C++,)g(the)g(debugging)f(and)h(visualization)e(of)-150
1948 y(Python)23 b(is)f(consider)o(ed)h(very)g(good)g(which)g(is)g
(primarily)f(the)h(r)o(esult)e(of)j(its)e(pr)o(eviously)f(mentioned)i
(simple-to-understand)f(syntax.)-150 2092 y(Also,)i(portability)h(is)f
(something)h(that)f(should)h(be)g(consider)o(ed)h(with)f(our)g(pr)o
(ogram,)f(and)h(as)f(such)h(popularity)f(and)h(use)f(of)i(Python)-150
2236 y(means)i(that)g(most)h(systems)e(alr)o(eady)i(have)f(support)g
(for)i(this)e(language.)g(However)-6 b(,)29 b(the)g(documentation)g(is)
f(lacking)h(even)g(mor)o(e)-150 2381 y(than)d(the)h(C++)g(option.)g
(Ther)o(e)f(ar)o(e)g(concerns)h(including)h(dif)o(\002culty)e
(discerning)i(what)e(a)h(function)g(does)g(on)g(a)f(deeper)h(level,)g
(what)-150 2525 y(the)22 b(various)f(parameters)g(do)i(to)f(impact)f
(the)h(pr)o(ogram,)f(and)i(r)o(elatively)e(weak)g(guides)h(in)g(the)g
(usage)f(of)i(this)f(version.)-150 2741 y(4.1.3.3)77
b(Java:)43 b(Java)30 b(is)g(the)h(\002nal)f(language)g(being)g
(consider)o(ed)i(for)f(use)f(within)h(OpenCV)-10 b(.)30
b(This)g(language)g(as)g(a)g(choice)i(is)e(a)g(bit)-150
2885 y(dif)o(fer)o(ent)e(fr)o(om)g(others)f(being)g(consider)o(ed)h(in)
g(that,)e(while)i(all)f(lack)g(documentation,)g(this)g(one)h(takes)e
(it)h(to)h(the)f(furthest)g(extr)o(eme.)-150 3030 y(Having)e(not)g
(existed)g(until)g(version)g(2.4.4)f(of)i(OpenCV)-10
b(,)25 b(Javas)f(intr)o(oduction)i(is)f(the)g(latest)g(of)h(the)f
(bunch.)g(Its)f(primary)h(focus)h(is)f(on)-150 3174 y(its)f(usage)f(in)
i(Andr)o(oid)g(devices[2].)f(When)h(attempting)e(to)h(r)o(esear)o(ch)f
(this)h(language)g(in)g(particular)-6 b(,)24 b(ther)o(e)g(was)f(very)i
(little)f(mention)-150 3318 y(of)i(it)f(at)g(all,)g(with)g(tutorials)f
(and)i(guides)f(being)g(few)h(and)f(far)h(between.)e(While)i(Java)f
(itself)g(is)g(a)g(r)o(eliable)f(enough)h(language,)g(it)g(has)-150
3462 y(failed)d(to)g(gain)f(traction)g(when)h(placed)f(in)h(an)f
(OpenCV)h(envir)o(onment)f(primarily)h(due)f(to)h(its)f
(middle-of-the-gr)o(ound)j(natur)o(e.)c(What)-150 3607
y(this)25 b(means)f(is)h(that)f(its)h(r)o(untime)h(performance)f(is)g
(generally)g(in-between)g(C++)h(and)f(Python.)g(This)f(means)h(if)g
(performance)h(was)e(a)-150 3751 y(concern,)c(then)f(C++)g(is)g(the)g
(better)g(option.)f(When)i(considering)g(ease)e(of)i(coding,)g(then)f
(Python)g(wins,)f(with)i(Java)e(falling)h(into)h(second)-150
3895 y(place)27 b(for)i(either)f(category)-9 b(.)27 b(This)g(is)h(only)
g(made)g(worse)f(by)h(the)g(pr)o(eviously)e(mentioned)i(lack)g(of)g
(documentation,)g(which)g(means)-150 4039 y(it)e(is)g(extr)o(emely)g
(dif)o(\002cult)g(to)h(make)e(pr)o(oper)h(use)g(of)h(this)f(language.)f
(While)h(other)h(languages)e(also)h(suf)o(fer)g(fr)o(om)g(this,)g(they)
g(at)g(least)-150 4184 y(have)g(several)f(years)h(of)h(exposur)o(e)e
(in)i(which)g(the)f(documentation)g(has)g(been)g(impr)o(oved)g(or)h
(added.)g(Java)e(on)i(the)f(other)h(hand)g(has)-150 4328
y(had)22 b(minimal)g(additions.)-150 4637 y Fd(4.1.4)79
b(Discussion)-150 4872 y Ff(These)24 b(thr)o(ee)h(choices)g(ar)o(e)f
(lar)o(gely)h(dif)o(fer)o(ent)g(fr)o(om)h(one)f(another)g(with)g(the)g
(only)g(considerable)g(common)h(gr)o(ound)f(being)g(that)f(they)-150
5016 y(all)33 b(have)g(poor)h(documentation)g(in)g(general.)f(The)g
(discr)o(epancy)g(however)-6 b(,)34 b(is)f(that)g(of)i(the)e(thr)o(ee)g
(options)h(C++)f(does)h(carry)g(the)-150 5161 y(str)o(ongest)29
b(online)i(support)e(and)i(Java)f(is)g(at)g(the)g(bottom)g(by)g(a)g
(signi\002cant)g(mar)o(gin.)g(Next)g(for)h(consideration)g(is)f(ease)f
(of)i(use)f(for)-150 5305 y(coding)23 b(purposes.)d(In)h(this)h
(aspect,)e(Python)i(is)f(the)h(str)o(ongest)f(candidate)h(and)g(Java)f
(and)h(C++)g(ar)o(e)f(the)g(ones)h(trailing)g(behind.)g(When)-150
5449 y(considering)h(code)g(ef)o(\002ciency)f(at)g(r)o(untime,)g(then)g
(C++)g(is)g(the)g(clear)g(winner)-6 b(.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 24 25
TeXDict begin 24 24 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(24)p 0 TeXcolorgray -150 -144 a Fd(4.1.5)79
b(Conclusion)-150 91 y Ff(Given)28 b(what)f(is)g(known)i(about)d(the)i
(thr)o(ee)f(choices)h(at)f(pr)o(esent,)g(the)g(curr)o(ent)h(leader)g
(that)f(will)g(be)h(selected)f(is)h(C++.)f(Ther)o(e)g(is)h(also)-150
235 y(the)c(possibility)f(that)h(since)g(Python)g(utilizes)f(C++)h
(under)h(the)f(hood,)h(should)f(we)h(need)f(to)h(try)f(and)g(move)g(to)
h(a)e(dif)o(fer)o(ent)i(language)-150 380 y(due)i(to)f(library)h(r)o
(estrictions)e(the)i(migration)f(wouldnt)h(be)f(too)h(taxing)f(as)f
(opposed)h(to)h(involving)f(C++)h(or)g(going)g(fr)o(om)f(Python)h(to)
-150 524 y(C++.)-150 870 y Fe(4.2)79 b(Filter)23 b(Algorithm)-150
1113 y Fd(4.2.1)79 b(Ov)n(er)r(vie)n(w)-150 1347 y Ff(This)30
b(section)h(will)h(be)f(focused)g(on)g(the)g(consideration)h(of)g
(image)e(blurring)i(techniques)f(in)g(OpenCV)g(to)g(assist)f(in)h
(dealing)g(with)-150 1492 y(potential)h(noise)h(that)f(may)g(exist)g
(on)h(the)g(documents)f(well)h(be)g(scanning.)f(T)-7
b(o)32 b(combat)g(this)h(issue)e(and)i(make)f(the)h(image)f(mor)o(e)
-150 1636 y(r)o(eadable)c(for)i(the)f(pr)o(ogram,)g(well)g(need)h(to)f
(make)g(use)f(of)i(some)f(form)h(of)g(blurring)f(technique)g(in)h
(which)f(ther)o(e)g(ar)o(e)g(thr)o(ee)f(major)-150 1780
y(choices.)-150 2089 y Fd(4.2.2)79 b(Cr)q(iter)q(ia)-150
2324 y Ff(Whatever)20 b(technique)i(is)e(being)h(utilized)g(must)f(be)g
(functioning)i(on)f(OpenCV)-10 b(.)21 b(The)f(blur)h(in)g(question)g
(must)f(also)h(be)f(safe)h(enough)g(as)-150 2469 y(to)e(not)g(disr)o
(upt)g(the)g(natural)f(look)h(or)h(\003ow)f(of)h(the)e(document,)h
(should)g(it)g(become)g(too)g(extr)o(eme)g(text)f(bodies)h(will)g
(appear)e(completely)-150 2613 y(connected.)27 b(Lastly)-9
b(,)26 b(the)g(technique)g(used)g(must)g(be)g(ef)o(\002cient)g(enough)h
(as)e(to)i(not)f(impact)g(overall)g(performance)h(to)f(a)g(point)g
(wher)o(e)-150 2757 y(the)c(pr)o(ogram)g(cannot)g(keep)f(up)h(with)g
(potential)f(inputs.)-150 3066 y Fd(4.2.3)79 b(Options)-150
3301 y Ff(4.2.3.1)e(Gaussian:)37 b(Gaussian)24 b(is)h(one)h(of)g(the)f
(most)g(common)h(implementation)f(methods)g(for)h(blurring)g(an)f
(image.)g(This)g(method)-150 3446 y(takes)34 b(a)h(de\002ned)g(kernel)h
(and)f(slides)f(it)h(acr)o(oss)f(the)h(image)g(to)g(smooth)g(it)g(out)g
([3].)g(This)f(kernel)i(needs)f(to)g(be)g(de\002ned)g(by)g(the)-150
3590 y(pr)o(ogrammer)26 b(with)h(the)g(parameters)e(sigmaX)g(and)i
(sigmaY)-9 b(.)26 b(These)g(values)f(de\002ne)i(their)g(r)o(espective)e
(x)i(and)g(y)f(scale.)g(In)h(addition,)-150 3734 y(should)22
b(the)g(parameter)f(for)i(y)f(be)g(left)h(unde\002ned,)f(then)g(it)g
(will)g(inherit)h(the)f(value)f(of)h(x)g(cr)o(eating)g(a)g(squar)o(e)f
(shape)g([4].)-150 3950 y(4.2.3.2)77 b(Median:)35 b(Median)21
b(\002ltering)h(is)g(another)g(common)g(selection)g(for)h(its)e
(ability)g(to)h(carry)g(out)g(limited)g(edge)g(detection)g(to)g(help)
-150 4095 y(pr)o(eserve)27 b(the)h(form)i(of)f(a)f(given)g(shape.)f
(While)i(not)f(perfect)h(at)e(this)h(task)g(it)g(is)g(often)h(suf)o
(\002cient)f(at)f(pr)o(eserving)h(shape)f(while)i(also)-150
4239 y(r)o(emoving)22 b(noise)g([5].)g(This)f(method)h(also)g(carries)g
(a)f(r)o(elatively)g(new)h(function)h(built)e(in)h(to)g(OpenCV)h(that)e
(pr)o(ocesses)f(all)i(channels)f(of)-150 4383 y(the)g(image)g(input)g
(independently)h([3].)f(This)g(pr)o(ocess)f(is)h(best)g(at)g(tackling)g
(the)g(issue)f(of)i(images)f(with)g(heavy)g(salt-and-pepper)f(noise)
-150 4527 y(in)i(which)h(the)f(central)g(median)g(value)f(is)h(always)f
(r)o(eplaced)g(by)h(some)g(pixel)g(image,)f(unlike)h(most)g(other)g
(\002lter)g(methods)g([4].)-150 4744 y(4.2.3.3)77 b(Bilateral:)39
b(Bilateral)27 b(\002ltering)g(is)f(very)h(ef)o(fective)g(at)f(r)o
(emoving)h(noise)f(within)h(an)g(image)f(while)h(still)f(r)o(etaining)h
(the)f(edges)-150 4888 y(to)j(everything.)f(This)g(comes)g(at)g(the)g
(price)h(of)g(signi\002cantly)f(slower)h(r)o(untime)g(to)f(complete)g
(when)h(compar)o(ed)f(with)h(competitors.)-150 5032 y(The)c(pr)o
(ocedur)o(e)f(is)h(done)g(thr)o(ough)g(the)g(use)f(of)i(two)f(gaussian)
e(\002lters,)h(one)i(for)f(space)f(to)h(handle)g(nearby)g(pixels)f(and)
h(the)g(other)g(for)-150 5177 y(intensity)e(dif)o(fer)o(ences.)g(This)g
(allows)g(it)h(to)f(blur)h(everything)f(but)g(ar)o(eas)f(with)i(high)g
(dif)o(fer)o(ences)f(which)h(naturally)f(indicate)h(an)f(edge)-150
5321 y(in)f(the)g(image)g([4].)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 25 26
TeXDict begin 25 25 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(25)p 0 TeXcolorgray -150 -144 a Fd(4.2.4)79
b(Discussion)-150 91 y Ff(When)37 b(comparing)f(these)g(thr)o(ee)g
(\002lter)h(choices)f(the)h(ar)o(eas)e(that)h(need)g(to)h(be)f
(consider)o(ed)h(ar)o(e)f(r)o(untime)h(performance)g(and)f(the)-150
235 y(importance)c(of)h(keeping)g(the)f(edge)h(to)g(an)f(image.)g(If)g
(the)h(only)g(concern)g(is)g(performance)g(then)f(Gaussian)f(would)i
(be)g(the)f(clear)-150 380 y(choice,)c(but)f(since)g(wer)o(e)g(dealing)
g(with)h(the)f(scanning)g(of)h(text)f(documents,)g(the)g(situation)f
(becomes)h(a)g(bit)g(mor)o(e)g(challenging.)h(At)-150
524 y(pr)o(esent)c(my)h(assumption)e(is)h(that)h(to)g(corr)o(ectly)g
(detect)g(potential)f(signatur)o(es,)f(well)i(need)g(to)g(be)g(able)f
(to)h(pr)o(operly)g(see)f(the)h(r)o(elative)-150 668
y(shape)c(of)i(wor)o(ds)f(which)g(means)g(that)f(the)h(edge)g(will)h
(be)f(vital)f(to)h(accomplishing)g(this)f(task.)-150
967 y Fd(4.2.5)79 b(Conclusion)-150 1202 y Ff(Since)23
b(our)g(gr)o(eatest)f(concern)i(is)e(determining)i(if)f(it)g(is)g(even)
g(possible)f(to)h(accurately)f(detect)h(if)h(a)e(page)g(has)h(a)f
(signatur)o(e)g(section)h(and)-150 1346 y(if)g(its)e(been)h(pr)o
(operly)g(signed)g(then)g(performance)g(will)g(be)g(taking)g(a)g(back)f
(seat)g(to)i(simply)e(completing)h(the)g(task.)f(As)g(such,)h(our)g
(best)-150 1491 y(bet)29 b(is)g(to)g(use)f(bilateral)h(given)g(it)g(ef)
o(fectively)g(r)o(emoves)f(noise)h(while)h(still)f(maintaining)f(the)h
(form)h(of)g(the)f(document)h(to)f(its)f(most)-150 1635
y(original)22 b(state.)-150 1966 y Fe(4.3)79 b(File)23
b(Con)m(ver)o(sion)g(Software)-150 2209 y Fd(4.3.1)79
b(Ov)n(er)r(vie)n(w)-150 2443 y Ff(CDK)29 b(stor)o(es)f(all)g
(submitted)f(documents)i(as)e(PDF)i(formats)f(which)h(is)f(not)h(a)f(r)
o(eadable)f(\002le)i(type)e(with)i(OpenCV)-10 b(.)28
b(As)g(a)g(r)o(esult,)f(we)-150 2588 y(will)j(need)h(to)f(consider)g
(ways)g(of)g(converting)h(the)f(PDF)g(into)g(something)g(compatible.)f
(Several)g(r)o(esour)o(ces)g(alr)o(eady)g(exist)g(in)i(this)-150
2732 y(department)21 b(that)h(show)g(potential)f(use)h(for)h(our)f
(purposes,)e(but)i(determining)g(which)h(to)f(select)g(is)f(the)h(curr)
o(ent)g(pr)o(oblem.)-150 3031 y Fd(4.3.2)79 b(Cr)q(iter)q(ia)-150
3266 y Ff(It)25 b(is)g(established)f(that)h(the)h(documents)f(well)h
(be)f(dealing)g(with)h(ar)o(e)f(of)h(the)f(PDF)h(format.)g(Beyond)g
(this,)f(the)g(team)g(is)g(fr)o(ee)h(to)g(select)-150
3410 y(however)j(we)g(see)g(\002t)g(to)g(implement)f(this)h(portion.)g
(Our)h(curr)o(ent)f(pr)o(efer)o(ences)f(indicate)h(the)g(use)g(of)g
(C++)h(and)f(OpenCV)g(so)g(well)-150 3555 y(need)22 b(to)h(choose)f
(based)f(on)i(what)e(best)h(conforms)h(to)f(the)g(language)f(and)h
(platform.)-150 3854 y Fd(4.3.3)79 b(Options)-150 4089
y Ff(4.3.3.1)e(ImageMagick:)49 b(ImageMagick)36 b(is)h(a)f(fr)o(ee)h
(open)g(sour)o(ce)g(option)g(for)h(image)f(conversion)g(and)g(editing.)
h(It)e(carries)h(the)-150 4233 y(functionality)28 b(to)h(r)o(ead)f(and)
g(write)g(over)h(200)e(formats)h(including)h(PDF)-7 b(,)27
b(JPEG,)i(and)g(PNG.)f(The)g(softwar)o(e)f(carries)h(command)h(line)
-150 4377 y(support)22 b(and)i(works)g(with)f(all)g(thr)o(ee)g
(consider)o(ed)h(language)f(options)g(that)g(our)h(team)e(is)i
(considering.)g(It)f(also)g(functions)g(on)h(Linux,)-150
4521 y(W)l(indows,)k(OSX,)f(iOS,)h(and)g(Andr)o(oid)g(devices)g([6].)g
(W)l(ith)f(all)h(of)h(this)e(functionality)h(comes)g(a)f(major)h
(drawback)f(however:)h(it)g(is)f(a)-150 4666 y(very)c(heavy)g(pr)o
(ogram)g(to)g(use.)g(While)g(it)g(would)h(be)f(nice)h(to)f(have)g(all)g
(these)g(options)g(available)e(to)j(us,)e(we)i(only)f(plan)g(a)g
(single)g(PDF)-150 4810 y(to)f(image)g(conversion)g(and)g(that)g(would)
g(be)g(wasting)g(the)g(majority)f(of)i(what)f(makes)f(this)g(pr)o
(ogram)h(so)g(taxing)f(to)i(operate.)-150 5027 y(4.3.3.2)77
b(Ghostscript:)33 b(Ghostscript)19 b(is)h(a)g(copyrighted)h(softwar)o
(e)f(package)f(that)h(can)g(convert)g(PDF)h(\002les)e(as)h(well.)g(It)g
(can)g(function)h(as)-150 5172 y(an)j(interpr)o(eter)f(for)i(PDFs)f
(and)g(turn)g(them)g(into)h(PostScript)e(\002les)g([7].)h(T)-7
b(o)24 b(utilize)f(this)h(PostScript,)f(we)h(would)g(then)g(need)h(to)f
(sear)o(ch)-150 5316 y(for)33 b(an)e(addition)i(softwar)o(e)e(package)g
(for)i(converting)f(it)g(into)g(a)f(suitable)g(format)h(for)h(OpenCV)
-10 b(.)31 b(As)g(such,)h(while)g(a)f(lightweight)-150
5460 y(pr)o(ogram)22 b(on)g(its)g(own,)g(it)g(will)g(r)o(equir)o(e)g(a)
g(daisy)g(chain)g(of)g(conversions)g(to)h(make)e(it)h(r)o(eady)g(for)h
(manipulation)e(on)h(our)h(end.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 26 27
TeXDict begin 26 26 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(26)p 0 TeXcolorgray -150 -144 a Ff(4.3.3.3)77
b(MuPDF:)52 b(MuPDF)39 b(is)g(an)f(open)i(sour)o(ce)e(softwar)o(e)h
(package)f(that)g(is)h(written)g(in)h(C)f(with)g(the)g(intent)g(of)h
(doing)g(PDF)-150 0 y(conversions.)27 b(This)f(pr)o(ogram)h(is)g(an)g
(extr)o(emely)f(lightweight)h(PDF)h(viewer)f(and)g(editor)h(with)f(the)
g(ability)g(to)g(convert)h(the)f(\002le)g(into)-150 145
y(various)g(formats)g(such)g(as)g(HTML,)g(SVG,)g(and)h(CBZ.)f(In)h
(addition)g(to)f(C,)h(ther)o(e)f(is)g(support)f(for)j(Java)d(and)i
(Andr)o(oid)g(functionality)-150 289 y(with)23 b(this)f(pr)o(ogram)g
([8].)g(Unfortunately)-9 b(,)23 b(to)f(complete)g(the)h(conversion)g
(ther)o(e)f(will)h(need)g(to)f(be)h(an)f(additional)h(conversion)g(of)g
(SVG)-150 433 y(into)f(a)g(format)g(that)g(is)g(accepted)f(by)h(OpenCV)
-10 b(.)-150 714 y Fd(4.3.4)79 b(Discussion)-150 949
y Ff(Out)29 b(of)h(the)g(thr)o(ee)f(options)g(pr)o(ovided)g(one)h(of)g
(them)f(is)g(not)h(open)f(sour)o(ce)g(which)h(is)f(cause)f(for)j
(concern)f(given)f(the)g(pr)o(oject)g(aims)-150 1093
y(to)c(be)g(an)g(open)g(sour)o(ce)f(pr)o(oduct.)h(As)f(such,)h(to)g(be)
g(safe)g(in)g(our)g(decisions)g(the)g(choice)h(falls)f(between)f(MuPDF)
h(and)g(ImageMagick.)-150 1237 y(ImageMagick)j(is)g(the)h(all-in-one)g
(package)f(with)h(the)f(support)g(for)i(what)e(we)h(need)g(\(and)g
(then)g(some\),)f(wher)o(eas)g(MuPDF)h(would)-150 1382
y(only)e(get)f(us)g(closer)h(to)f(the)g(pr)o(oper)g(image)g(format)h
(that)f(is)g(r)o(equir)o(ed.)g(While)h(ImageMagick)e(achieves)g(our)i
(goal)g(immediately)-9 b(,)26 b(its)-150 1526 y(added)d(featur)o(es)e
(make)g(it)h(a)g(signi\002cantly)f(mor)o(e)i(taxing)e(pr)o(ogram)h(to)g
(use,)f(a)h(factor)g(that)g(we)g(must)f(consider)-6 b(.)-150
1807 y Fd(4.3.5)79 b(Conclusion)-150 2041 y Ff(While)38
b(ef)o(\002ciency)f(is)g(a)g(lar)o(ge)g(concern)h(for)g(us)f(given)g
(the)g(scale)f(of)i(the)f(pr)o(oject)g(and)g(how)h(computationally)e
(heavy)h(arti\002cial)-150 2186 y(intelligence)d(is,)g(we)g(do)h(need)g
(to)f(consider)h(that)f(we)g(primarily)g(just)f(want)h(to)g(pr)o(ove)g
(this)g(pr)o(oject)f(can)h(be)g(done.)h(As)e(a)h(r)o(esult,)-150
2330 y(ImageMagick)24 b(is)g(the)g(softwar)o(e)h(we)f(will)h(be)g
(going)g(with)f(since)h(it)f(stays)g(safe)g(in)h(open)f(sour)o(ce)g
(and)h(r)o(educes)g(the)f(amount)g(of)h(work)-150 2474
y(r)o(equir)o(ed)d(for)h(us)f(to)g(chain)g(several)f(softwar)o(e)h
(together)g(to)g(get)g(an)g(input)f(we)h(can)g(actively)g(use)f(within)
h(OpenCV)-10 b(.)-150 2778 y Fe(4.4)79 b(Ref)o(erences)-150
3020 y Ff([1])22 b(\224LearnOpenCV\224)g(Internet:)g(https://www)-7
b(.learnopencv)e(.com,)20 b(Oct.)i(30,)f(2015)f([Nov)-9
b(.)23 b(14,)e(2017].)-150 3237 y([2])h(\224Intr)o(oduction)g(to)g
(Java)g(Development\224)f(Internet:)h(https://docs.opencv)-9
b(.or)o(g,)20 b(Nov)-9 b(.)22 b(13,)f(2017)f([Nov)-9
b(.)23 b(14,)e(2017].)-150 3453 y([3])h(\224OpenCV)g(T)-7
b(utorial)22 b(C++\224)f(Internet:)h(https://opencv-srf.blogspot.com,)e
([Nov)-9 b(.)22 b(21,)f(2017].)-150 3669 y([4])h(\224Smoothing)g
(Images\224)f(Internet:)g(https://docs.opencv)-9 b(.or)o(g,)20
b([Nov)-9 b(.)23 b(21,)e(2017].)-150 3886 y([5])h(\224Filters)g(B\224)g
(Internet:)g(http://www)-7 b(.bogotobogo.com,)21 b(2016)f([Nov)-9
b(.)22 b(20,)g(2017].)-150 4102 y([6])g(\224Image)f(Magick\224)h
(Internet:)f(https://www)-7 b(.imagemagick.or)o(g,)19
b(2017)i([Nov)-9 b(.)22 b(21,)f(2017].)-150 4318 y([7])h
(\224Ghostscript\224)f(Internet:)h(https://www)-7 b(.ghostscript.com,)
19 b(2016)i([Nov)-9 b(.)22 b(20,)f(2017].)-150 4535 y([8])h
(\224MuPDF\224)g(Internet:)f(https://mupdf.com/,)g(2017)f([Nov)-9
b(.)22 b(21,)f(2017].)-150 4838 y Fe(4.5)79 b(The)23
b(algorithm)-150 5081 y Fd(4.5.1)79 b(Ov)n(er)r(vie)n(w)-150
5316 y Ff(The)32 b(main)h(goal)f(of)i(this)e(pr)o(oject)g(is)h(to)f
(develop)h(an)g(algorithm)f(that)g(can)h(discern)g(whether)g(a)g
(document)g(contains)f(signatur)o(es,)-150 5460 y(needs)c(to)g(be)g
(signed,)g(or)h(does)f(not)h(contain)f(sign-able)g(spaces;)e(based)i
(on)g(the)g(analysis)f(of)i(a)f(lar)o(ge)f(number)h(of)h(alr)o(eady)f
(existing)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 27 28
TeXDict begin 27 27 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(27)p 0 TeXcolorgray -150 -144 a Ff(documents.)25
b(Given)h(that)f(the)g(task)g(is)g(to)h(utilize)e(an)h(alr)o(eady)g
(existing)g(pool)h(of)g(samples)e(to)i(discern)g(key)f(patterns)f(r)o
(elating)h(to)h(our)-150 0 y(thr)o(ee)f(criteria)h(while)g(keeping)g
(scalability)e(in)i(mind,)g(this)f(pr)o(oblem)h(is)f(best)g(cater)o(ed)
g(to)h(by)g(a)f(neural)h(network)g(algorithm.)g(Neural)-150
145 y(networks)g(have)f(the)g(unique)h(pr)o(operty)f(of)h(discerning)h
(patterns)d(they)i(wer)o(e)f(never)h(explicitly)f(trained)h(to)g
(discern.)g(This)f(pr)o(operty)-150 289 y(makes)19 b(them)h(extr)o
(emely)g(unique)g(when)g(exploring)g(image)g(r)o(ecognition)h(pr)o
(oblems,)e(since)g(these)h(ar)o(e)g(based)f(on)i(r)o(ecognizing)f(a)g
(wide)-150 433 y(number)i(of)h(very)f(speci\002c)f(featur)o(es)g(no)i
(one)f(person)g(could)g(ever)g(possibly)f(speci\002cally)h(outline.)
-150 742 y Fd(4.5.2)79 b(Cr)q(iter)q(ia)-150 977 y Ff(When)23
b(looking)f(at)g(neural)g(nets)g(tasked)f(with)h(image)g(pr)o
(ocessing,)f(wer)o(e)h(looking)h(at)f(thousands)f(of)i(pixel)f(r)o
(elated)f(inputs)g(that)h(must)-150 1122 y(be)k(corr)o(elated)g(in)g
(or)o(der)g(to)g(make)f(sense)g(of)i(a)e(certain)h(pictur)o(e.)f(T)-7
b(o)25 b(land)h(on)g(a)g(particular)f(neural)g(network)h(paradigm)f(we)
h(will)g(be)-150 1266 y(looking)e(at)e(the)h(following)h(categories.)e
(Ef)o(\002ciency)i(of)g(data)e(pr)o(opagation:)g(how)h(quickly)g(can)g
(the)g(net)g(make)f(sense)h(of)g(a)g(given)g(data)-150
1410 y(set.)k(Learning)g(pr)o(o\002ciency:)g(how)h(quickly)g(is)f(the)g
(neural)g(network)h(pr)o(ojected)f(to)g(draw)h(r)o(elationships)e
(between)g(given)i(inputs)e(in)-150 1554 y(comparison)21
b(to)h(other)g(neural)g(networks.)g(Memory)g(ef)o(\002ciency:)f(what)h
(level)f(of)i(memory)f(usage)e(is)i(r)o(equir)o(ed)g(to)g(ef)o
(\002ciently)f(r)o(un)i(this)-150 1699 y(network)g(in)f(comparison)g
(to)g(other)g(neural)g(networks.)-150 2008 y Fd(4.5.3)79
b(F)n(eedF)n(orw)o(ard)23 b(Neur)o(al)f(Netw)o(or)q(ks)-150
2243 y Ff(Feed)33 b(forwar)o(d)h(neural)e(networks)h(ar)o(e)g
(arti\002cial)f(neural)h(networks)f(wher)o(e)h(connections)g(between)g
(units)f(do)i(not)f(form)g(a)g(cycle.)-150 2387 y(In)f(essence,)f(we)i
(ar)o(e)e(talking)h(about)g(neural)g(networks)g(in)g(which)h(data)f
(only)g(\003ows)h(forwar)o(d,)g(that)e(means)h(it)g(never)g(r)o
(eassesses)-150 2531 y(data)24 b(as)g(it)h(passes)e(thr)o(ough,)h
(rather)h(it)g(r)o(elies)f(on)h(existing)f(ar)o(chitectur)o(e)g(to)h
(make)f(a)h(pr)o(ediction)f(based)h(on)g(its)f(curr)o(ent)h(state.)e
(These)-150 2675 y(neural)g(nets)f(learn)h(by)g(analyzing)g(the)g(corr)
o(ectness)f(of)i(their)f(estimate)f(against)g(known)i(estimates,)d
(which)i(classi\002es)f(their)h(learning)-150 2820 y(as)j(a)g(form)i
(of)f(gradient)g(descent,)f(a)h(\002rst)f(or)o(der)i(iterative)d
(optimization)h(algorithm)h(for)g(\002nding)h(the)e(minimum)h(of)g(a)f
(function[1].)-150 2964 y(Feedforwar)o(d)19 b(neural)g(networks)f(can)g
(pr)o(ovide)g(very)h(fast,)f(r)o(esour)o(ce)f(mindful)i(solutions)f
(for)h(simple)f(input)g(data)g(sets,)f(e.g.)h(:)g(guessing)-150
3108 y(a)25 b(student's)g(overall)g(grade)h(while)g(only)g(being)f
(given)h(hours)f(of)i(homework)f(and)g(hours)f(studied.)g(Feedforwar)o
(d)i(neural)e(nets)g(can)-150 3252 y(become)f(\003uster)o(ed)g(when)h
(the)f(input)g(data)g(set)g(becomes)g(mor)o(e)g(complex)h(and)f(thus)g
(ar)o(e)g(to)g(be)h(utilized)f(for)h(scaled)f(down)i(versions)-150
3397 y(of)d(complex)f(pr)o(oblems.[2])-150 3706 y Fd(4.5.4)79
b(Con)n(v)n(olutional)21 b(Neur)o(al)i(Netw)o(or)q(ks)-150
3941 y Ff(Convolutional)e(neural)f(networks)h(utilize)f(a)g(variety)g
(of)i(dif)o(fer)o(ent)f(methods)f(in)h(or)o(der)h(to)e(discern)i(key)e
(patterns)g(about)g(a)g(given)h(data)-150 4085 y(set.)28
b(The)g(most)h(important)f(method)h(a)g(convolutional)f(neural)h(net)g
(utilizes)e(is)i(called,)f(quite)h(\002ttingly)-9 b(,)29
b(convolution.)g(Convolving)-150 4229 y(consists)16 b(of)i(picking)g
(out)f(subsets)e(of)j(a)f(certain)h(data)e(set)h(and)h(mer)o(ging)f
(them)g(into)h(one)f(meaningful)h(value.)e(This)g(is)h(done)h(thr)o
(oughout)-150 4374 y(the)34 b(entir)o(ety)g(of)h(the)f(data)g(set)g
(ensuring)g(that)g(data)g(subsets)e(have)i(a)g(certain)g(per)o(centage)
f(of)i(overlap.)f(These)f(values)g(ar)o(e)h(then)-150
4518 y(r)o(emapped)g(into)i(their)f(own)h(data)e(set)h(cr)o(eating)g(a)
g(featur)o(e)f(map)h(r)o(epr)o(esentative)e(of)j(the)f(original)g(data)
g(set.)g(By)g(r)o(epeating)g(this)-150 4662 y(pr)o(ocess,)22
b(our)h(neural)g(net)g(can)g(start)f(discerning)i(mor)o(e)f(and)g(mor)o
(e)g(particular)f(featur)o(es)g(about)g(a)h(data)f(set.)h(A)f
(convolutional)h(neural)-150 4806 y(network)30 b(learns)g(by)g(backpr)o
(opagation,)d(short)j(for)h(\224backwar)o(d)e(pr)o(opagation)g(of)h
(err)o(ors\224)g([3])g(,)g(it)g(is)f(uniquely)h(suited)g(to)g(discern)
-150 4951 y(patterns)24 b(within)h(an)g(image,)f(but)g(it)h(must)f(be)h
(trained,)g(which)h(in)f(turn)g(means)f(it)h(could)h(be)e(under)o
(-trained)i(or)f(over)o(-trained)h(at)e(the)-150 5095
y(point)c(of)h(assessment.)c(Convolutional)j(neural)g(nets)g(ar)o(e)g
(extr)o(emely)f(r)o(esour)o(ce)g(heavy)h(and)g(tend)h(to)f(r)o(equir)o
(e)g(dedicated)h(GPUs)e(to)i(r)o(un)-150 5239 y(ef)o(\002ciently)-9
b(.[4])p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 28 29
TeXDict begin 28 28 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(28)p 0 TeXcolorgray -150 -144 a Fd(4.5.5)79
b(Genetic)21 b(algor)q(ithms)-150 91 y Ff(While)g(most)f(neural)g
(networks)g(utilize)g(some)g(kind)h(of)g(learning)f(function)h(in)g(or)
o(der)g(r)o(eassess)d(the)i(weights)g(of)h(it?s)f(connections,)h(this)
-150 235 y(can)29 b(often)h(be)f(a)g(lengthy)g(and)g(r)o(esour)o(ce)g
(heavy)f(pr)o(ocess.)g(Another)i(appr)o(oach)d(to)j(learning)f(is)g
(the)g(genetic)g(algorithm)h(appr)o(oach,)-150 380 y(wher)o(e)j(we)g
(exploit)g(evolutionary)g(concepts)g(in)g(or)o(der)h(to)g(cr)o(eate)e
(better)h(and)h(smarter)e(nets)h(at)g(each)g(iteration.)g(Genetic)g
(neural)-150 524 y(network)27 b(algorithms,)g(like)g(all)f(neural)h
(network)g(algorithms,)f(start)g(with)h(a)g(neural)g(net)f(with)h
(randomized)h(weights)e(that)g(is)h(fully)-150 668 y(incapable)k(of)i
(completing)f(the)g(task)f(that)h(it)g(was)g(given,)g(or)g(rather)-6
b(,)33 b(a)f(collection)h(of)g(them.)e(A)h(single)g(neural)g(net)g
(never)h(learns)-150 812 y(anything)g(in)f(a)h(genetic)g(algorithm,)f
(at)g(its)h(time)f(of)h(birth)g(it)g(was)f(either)h(destined)g(to)f
(succeed)h(and)g(br)o(eed,)f(or)i(to)f(fail.)f(Among)-150
957 y(all)i(these)f(neural)h(nets,)f(which)h(ar)o(e)f(all)h(randomized)
g(dif)o(fer)o(ently)-9 b(,)35 b(ther)o(e)e(will)h(be)g(a)g(subset)e
(deemed)i(the)g(most)g(?\002t?.)f(Fitness)g(is)-150 1101
y(the)j(way)g(we)g(assess)e(how)i(well)h(a)e(neural)h(net)g(performs)g
(its)g(purpose)f(within)h(a)g(genetic)g(algorithm.)g(The)g(usefulness)e
(of)j(the)-150 1245 y(?br)o(eeding?)23 b(technique)f(is)g(that)f(it)i
(is)f(straightforwar)o(d)g(and)g(simple,)f(and)i(thus)e(cr)o(eates)g
(learning)h(fr)o(om)h(randomization)f(rather)g(than)-150
1389 y(mathematical)29 b(assessment.)e(Genetic)k(algorithm)f(neural)g
(nets)g(ar)o(e)g(r)o(esour)o(ce)g(mindful,)g(but)g(can)g(get)g(stuck)g
(in)g(certain)h(iterations)-150 1534 y(and/or)23 b(take)e(a)h(very)g
(long)h(\(uncertain\))f(amount)g(of)g(time)g(to)g(r)o(each)g(peak)f
(performance.[5])-150 1814 y Fd(4.5.6)79 b(Discussion)-150
2049 y Ff(W)-7 b(e)30 b(explor)o(ed)g(thr)o(ee)g(dif)o(fer)o(ent)h
(neural)f(network)g(paradigms)g(that)f(each)h(highlighted)h(speci\002c)
f(components)g(of)h(neural)f(network)-150 2193 y(capabilities.)17
b(The)j(\002rst)f(was)f(the)i(straightforwar)o(d)f(feedforwar)o(d)i
(network.)f(A)f(network)h(that)f(learns)g(by)g(optimizing)g(a)g(cost)h
(function)-150 2338 y(\()29 b(cost)f(=)g(\227corr)o(ect)h(answer)e(-)i
(wr)o(ong)f(answer\227\),)g(and)h(is)e(only)i(concerned)g(with)g
(feeding)g(information)f(thr)o(ough)g(its)g(neur)o(ons.)g(It)-150
2482 y(can)i(perform)h(simple)e(tasks)g(very)h(quickly)-9
b(,)31 b(but)f(its)f(simplistic)g(natur)o(e)h(can)g(\002nd)h(itself)f
(\003uster)o(ed)f(by)h(complex)g(pr)o(oblem)g(spaces.)-150
2626 y(W)-7 b(e)25 b(explor)o(ed)h(the)f(convolutional)h(neural)f
(network,)h(a)f(network)h(suited)f(for)i(discerning)f(patterns)e
(within)i(a)f(data)g(set)g(by)g(iterating)-150 2770 y(r)o(ecursively)19
b(over)g(key)g(featur)o(e)g(maps,)f(allowing)h(it)g(to)g(discern)h(mor)
o(e)f(complex)g(patterns)f(at)h(each)g(iteration.)g(These)f(neural)h
(networks)-150 2915 y(ar)o(e)27 b(suited)g(for)i(image)e(detection)h
(and)g(ar)o(e)f(the)g(industry)h(standar)o(d)f(in)h(terms)f(of)h(image)
f(r)o(ecognition.)h(While)g(extr)o(emely)f(ef)o(\002cient)-150
3059 y(in)f(performing)g(its)f(task,)f(these)h(ar)o(e)g(r)o(esour)o(ce)
g(heavy)g(and)h(r)o(ely)f(on)h(powerful)g(GPUs)f(to)g(work)h(corr)o
(ectly)-9 b(.)26 b(Lastly)-9 b(,)25 b(we)h(explor)o(ed)f(the)-150
3203 y(genetic)c(algorithm)g(learning)g(appr)o(oach,)e(wher)o(e)h(we)h
(wer)o(e)g(not)g(concerned)h(in)f(teaching)f(any)h(single)g(network)g
(to)g(perform)g(our)g(task,)-150 3347 y(but)31 b(rather)g(only)g
(concerned)i(with)e(?br)o(eeding?)g(the)h(networks)f(that)f(ar)o(e)h
(most)g(successful)f(at)g(performing)i(it.)f(This)g(appr)o(oach)e(is)
-150 3492 y(r)o(esour)o(ce)f(mindful,)h(but)f(can)g(get)h(stuck)f(in)h
(certain)f(iterations)g(and)h(never)f(learn)h(to)g(perform)g(our)g
(task)e(satisfactorily)h(or)h(take)f(an)-150 3636 y(unr)o(easonable)21
b(amount)g(of)i(time)f(to)g(do)h(so.)-150 3916 y Fd(4.5.7)79
b(Conclusion)-150 4151 y Ff(While)27 b(the)f(feedforwar)o(d)i(appr)o
(oach)d(is)i(ef)o(\002cient,)f(it)g(does)h(not)g(seem)f(to)g(be)h
(powerful)f(enough)h(to)g(tackle)f(the)g(pr)o(oblem)g(space)g(that)-150
4295 y(we)21 b(will)g(be)g(dealing)h(with.)f(The)f(convolutional)h
(network)h(is)f(basically)f(the)h(obvious)f(choice)i(but)f(it)g(is)f
(fair)i(to)f(take)g(genetic)g(mutation)-150 4440 y(and)33
b(learning)g(into)h(consideration)f(if)h(our)f(simulation)f(encounters)
h(points)g(wher)o(e)g(backpr)o(opagation)e(performs)i(underwhelm-)-150
4584 y(ingly)-9 b(.)-150 4864 y Fd(4.5.8)79 b(Ref)n(erences)-150
5099 y Ff([1])22 b(\224W)l(ikipedia)g(Gradient)g(Descent\224)g
(Internet:)f(https://en.wikipedia.or)o(g/wiki/Gradient)p
2835 5110 40 5 v 38 w(descent,)h([Nov)-9 b(.15,2017].)-150
5316 y([2])24 b(\224CS)e(Stanfor)o(d,)h(Neural)g(Networks\224)g
(Internet:)g(https://cs.stanfor)o(d.edu/people/er)o
(oberts/courses/soco/pr)o(ojects/neural-)-150 5460 y(networks/Ar)o
(chitectur)o(e/feedforwar)o(d.html,)f([Nov)-9 b(.15,2017].)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 29 30
TeXDict begin 29 29 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(29)p 0 TeXcolorgray -150 -144 a Ff([3])22
b(\224Brilliant)g(:)g(Backpr)o(opagation\224)f(Internet:)g
(https://brilliant.or)o(g/wiki/backpr)o(opagation/,)e([Nov)-9
b(.15,2017].)-150 73 y([4])17 b(\224Adit)f(Deshpande:)g(A)g(Begginer)6
b('s)17 b(Guide)g(to)f(Understanding)h(Convolutional)f(Neural)g
(Networks\224)g(Internet:)g
(https://adeshpande3.github.io/adeshpande3.github.io/A-)-150
217 y(Beginner\04527s-Guide-T)-7 b
(o-Understanding-Convolutional-Neural-Networks/,)23 b([Nov)-9
b(.15,2017].)-150 433 y([5])22 b(\224Matt)e(Harvey:)h(Let's)g(evolve)g
(a)g(neural)g(network)h(with)g(a)f(genetic)g(algorithm\224)g(Internet:)
g(https://blog.coast.ai/lets-evolve-a-)-150 577 y
(neural-network-with-a-genetic-algorithm-code-included-8809bece164,)h
([Nov)-9 b(.15,2017].)-150 924 y Fe(4.6)79 b(Container)24
b(Software)-150 1166 y Fd(4.6.1)79 b(Ov)n(er)r(vie)n(w)-150
1401 y Ff(One)20 b(of)g(the)f(most)g(important)g(featur)o(es)f
(outlined)i(thr)o(oughout)f(our)h(pr)o(oject)e(is)i(the)f(ability)g
(for)h(it)f(to)h(be)f(used)g(fr)o(om)h(any)f(machine.)g(The)-150
1545 y(pr)o(oject)h(is)g(to)g(act)g(as)g(a)g(standalone)g(application)f
(that)h(is)g(easy)g(to)h(launch)f(and)g(operate)g(r)o(egar)o(dless)g
(of)h(the)f(machine)g(we)h(ar)o(e)f(utilizing.)-150 1690
y(In)i(or)o(der)g(to)g(do)h(so)e(it)h(must)f(be)h(deployed)g(utilizing)
f(containerizing)h(softwar)o(e,)f(which)h(addr)o(esses)f(this)g(pr)o
(oblem)g(at)h(its)f(cor)o(e.)-150 1999 y Fd(4.6.2)79
b(Cr)q(iter)q(ia)-150 2234 y Ff(One)20 b(of)g(the)f(most)g(important)g
(featur)o(es)f(outlined)i(thr)o(oughout)f(our)h(pr)o(oject)e(is)i(the)f
(ability)g(for)h(it)f(to)h(be)f(used)g(fr)o(om)h(any)f(machine.)g(The)
-150 2378 y(pr)o(oject)i(is)g(to)h(act)f(as)g(a)h(standalone)f
(application)f(that)i(is)f(easy)g(to)h(launch)f(and)h(operate)f(r)o
(egar)o(dless)g(of)h(the)g(machine)f(we?r)o(e)h(utilizing.)-150
2522 y(In)g(or)o(der)g(to)g(do)h(so)e(it)h(must)f(be)h(deployed)g
(utilizing)f(containerizing)h(softwar)o(e,)f(which)h(addr)o(esses)f
(this)g(pr)o(oblem)g(at)h(its)f(cor)o(e.)-150 2831 y
Fd(4.6.3)79 b(LXC)-150 3066 y Ff(LXC)26 b(is)f(speci\002cally)f
(designed)i(for)g(Linux)f(users)g(and)g(aims)g(to)g(emulate)g(the)g
(Linux)g(standar)o(d)g(installation)f(without)h(the)g(need)h(for)-150
3211 y(a)f(separate)e(kernel.)i(LCX?s)g(API)f(supports)f(a)i(number)f
(of)i(languages)d(for)j(deployment)f(including)h(Python)f(3,)f(Lua,)g
(r)o(uby)-9 b(,)26 b(and)f(Go.)-150 3355 y(LXC)f(does)g(not)h(support)d
(being)i(deployed)h(in)f(c++)g(which)h(could)f(cr)o(eate)f(extra)h
(constraints)f(if)i(the)e(native)h(code)g(of)h(our)f(application)-150
3499 y(r)o(uns)j(on)h(c++.)f(LXC)h(support,)d(being)i(a)g(Linux)h
(based)e(application,)g(depends)h(on)g(stable)f(Linux)i(r)o(eleases)d
(and)j(the)f(ef)o(forts)g(of)h(their)-150 3643 y(cr)o(eators)g(to)h
(cater)g(to)g(it)f(with)h(speci\002c)f(distributions.)g(Documentation)h
(for)g(its)g(API)f(is)g(existent)g(but)g(often)h(dif)o(\002cult)g(to)g
(\002nd,)g(and)-150 3788 y(almost)i(always)g(r)o(equiring)i
(disambiguation)e(for)i(speci\002c)e(tasks.)g(This)g(is)h(mainly)g(due)
g(to)g(pr)o(oblems)f(being)h(Linux)g(distribution)-150
3932 y(speci\002c.)-150 4241 y Fd(4.6.4)79 b(LXD)-150
4476 y Ff(LXD)31 b(is)f(also)g(designed)h(for)g(Linux)g(distributions)e
(and)i(of)o(fers)g(an)f(experience)g(similar)g(to)g(virtual)g(machines)
g(but)g(utilizes)f(Linux)-150 4620 y(containers)h(instead.)f(LXD)i(is)f
(an)f(image)h(based)f(containerizing)h(softwar)o(e)g(available)e(for)j
(a)f(wide)h(range)f(of)g(Linux)h(distributions)-150 4764
y(that)24 b(supports)e(all)i(the)g(languages)f(LXC)i(does.)f(LXD)h
(main)e(pr)o(os)h(ar)o(e)g(it)g(is)g(intuitive)f(and)i(simple)e(API,)g
(its)h(security)g(driven)g(design,)-150 4909 y(and)29
b(image)f(based)g(deployments.)g(Unlike)g(LXC)h(whom)g(r)o(elies)f(on)h
(singular)f(developers)h(to)g(tend)f(to)h(it,)g(LXD)g(is)f(developed)h
(and)-150 5053 y(distributed)h(by)g(Canonical)h(L)-6
b(TD.)30 b(Canonical)g(L)-6 b(TD)31 b(of)o(fers)g(support)e(and)h
(documentation)h(for)g(LXD)g(which)f(is)g(lacking)h(for)g(LXC.)-150
5197 y(LXD)23 b(builds)e(on)i(top)f(of)g(LXC)h(and)f(acts)f(as)h(a)f
(friendlier)j(version)e(of)h(the)e(LXC)i(framework.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 30 31
TeXDict begin 30 30 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(30)p 0 TeXcolorgray -150 -144 a Fd(4.6.5)79
b(Doc)n(k)n(er)-150 91 y Ff(Docker)19 b(is)e(the)h(curr)o(ent)g
(industry)f(pr)o(eferr)o(ed)h(choice)h(when)f(it)f(comes)h(to)g
(container)g(softwar)o(e.)f(Docker)h(is)g(faster)f(than)h(other)g
(container)-150 235 y(options,)k(is)g(extr)o(emely)g(well)h(documented)
g(and)g(has)f(its)g(own)h(public)f(r)o(epositories)f(to)i(obtain)f(the)
h(latest)e(installations.)g(The)h(Docker)-150 380 y(Hub)c(hosts)f
(thousands)g(of)i(container)g(images)e(as)g(well)h(as)g(support)f(for)i
(the)f(download)h(of)g(r)o(eady)f(to)g(use)g(apps,)e(something)i(that)f
(tends)-150 524 y(to)29 b(be)f(har)o(d,)g(if)h(not)g(impossible)e(to)i
(\002nd)g(on)g(other)g(r)o(epository)f(websites)f(such)i(as)e(GitHub.)h
(Even)h(though)g(Docker)g(is)f(advertised)-150 668 y(as)f(supporting)g
(W)l(indows)h(and)g(Mac)f(OSX,)h(it)f(utilizes)g(virtual)g(machines)g
(on)h(these)g(which)g(in)g(essence)f(defeats)g(the)h(point)g(of)g(the)
-150 812 y(container)g(appr)o(oach.)f(Docker)i(is)f(written)g(in)g(the)
g(Go)h(pr)o(ogramming)f(language,)f(something)g(which)i(the)f(team)f
(must)h(familiarize)-150 957 y(itself)22 b(befor)o(e)g(utilizing)g(it)g
([1].)-150 1266 y Fd(4.6.6)79 b(Discussion)-150 1501
y Ff(Each)26 b(of)g(our)f(thr)o(ee)g(choices)h(contains)f(its)g(own)g
(set)g(of)h(pr)o(os)f(and)g(setbacks.)f(LXD)i(pertains)e(to)h(mor)o(e)h
(bar)o(e-bones)e(appr)o(oach)g(wher)o(e)-150 1645 y(we)g(utilize)g(the)
g(basics)f(of)i(the)f(containerizing)g(paradigm)g(at)g(our)g(own)h
(complete)f(discr)o(etion.)g(This)g(could)h(save)e(memory)-9
b(,)24 b(but)g(due)-150 1789 y(to)32 b(its)f(poor)i(documentation)f
(and)g(support,)e(will)j(need)f(extra)f(time)h(to)g(get)g(accustomed)f
(to)h(in)g(or)o(der)h(for)g(the)f(team)f(to)h(become)-150
1933 y(pr)o(o\002cient)27 b(in)g(its)f(usage.)g(LXD)i(is)e(well)h
(documented)h(and)f(image)g(based,)f(both)h(of)g(which)h(will)f(help)g
(save)e(time)i(and)g(ef)o(fort)h(when)-150 2078 y(containerizing)c(the)
h(application.)e(Even)h(though)h(ther)o(e)f(is)g(extensive)f(support)g
(for)j(LXD,)e(it)h(builds)f(LXC,)g(and)h(it)f(could)h(potentially)-150
2222 y(fall)c(into)g(the)f(same)g(undocumented)h(setbacks)e(and)i(LXC.)
g(Docker)g(is)g(widely)g(r)o(egar)o(ded)f(as)g(the)h(best)f(container)g
(softwar)o(e)h(acr)o(oss)e(the)-150 2366 y(industry)25
b(and)g(was)f(mentioned)h(by)g(our)g(client)g(as)f(a)g(choice)i(when)f
(the)f(pr)o(oject)g(was)g(\002rst)h(discussed.)f(It)g(is)h(well)g
(documented)g(and)-150 2510 y(supported,)g(but)g(boasts)g(cr)o(oss)g
(platform)h(implementations)e(even)i(though)f(it)h(utilizes)f(virtual)g
(machines)g(to)h(do)h(so,)e(which)i(can)e(be)-150 2655
y(done)d(to)g(utilize)f(LXC)h(and)g(LXD.)g(Docker)g(also)f(will)h(need)
g(that)f(the)h(team)f(familiarize)g(itself)g(with)h(the)g(Go)g(pr)o
(ogramming)f(language)-150 2799 y([2].)-150 3108 y Fd(4.6.7)79
b(Conclusion)-150 3343 y Ff(While)20 b(LXC)h(could)g(be)f(a)g(very)g
(powerful)g(r)o(esour)o(ce)g(ef)o(\002cient)g(appr)o(oach,)e(utilizing)
i(LXD)h(will)f(pr)o(ovide)g(most)g(if)g(not)h(all)f(LXC)g(featur)o(es)
-150 3487 y(in)i(mor)o(e)g(time)g(sensible)f(manner)-6
b(.)21 b(While)i(LXD)f(is)g(well)g(documented)g(and)g(industry)g
(standar)o(d)f(r)o(eady)-9 b(,)22 b(Docker)h(seems)e(to)h(be)g(widely)
-150 3632 y(r)o(egar)o(ded)h(as)f(superior)h(due)g(to)h(the)f(afor)o
(ementioned)g(featur)o(es.)f(While)h(not)h(having)e(utilized)h(either)g
(they)g(might)g(seem)g(like)g(equals,)-150 3776 y(its)d(popularity)f
(acr)o(oss)h(many)g(developer)h(opinions)f(warrants)g(that)g(Docker)h
(be)g(our)f(main)h(choice,)g(with)f(LXD)h(being)g(only)g(pertinent)-150
3920 y(if)i(certain)f(r)o(equir)o(ed)g(featur)o(es)f(pr)o(ove)g
(untimely)-9 b(,)22 b(or)g(inef)o(\002cient,)g(on)h(Docker)g([3].)-150
4229 y Fd(4.6.8)79 b(Ref)n(erences)-150 4464 y Ff([1])22
b(\224Linux)g(Containers,)g(LXC\224)g(Internet:)f
(https://linuxcontainers.or)o(g/lxc/intr)o(oduction/,)g([Nov)-9
b(.)22 b(18,)f(2017])-150 4681 y([2])h(\224Linux)g(Containers,)g
(LXD\224)g(Internet:)g(https://linuxcontainers.or)o(g/lxd/intr)o
(oduction/,)e([Nov)-9 b(.)22 b(19,)f(2017])-150 4897
y([3])35 b(\2243)g(Pr)o(os)f(and)h(3)g(cons)g(of)g(W)-7
b(orking)36 b(with)f(Docker)h(Containers\224)e(Internet:)h
(https://sweetcode.io/3-pr)o(os-3-cons-working-)-150
5041 y(docker)o(-containers/,)23 b([Nov)-9 b(.)22 b(20,)f(2017])p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 31 32
TeXDict begin 31 31 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(31)p 0 TeXcolorgray -150 -144 a Fe(4.7)79
b(De)o(velopment)24 b(Platf)n(orm)-150 99 y Fd(4.7.1)79
b(Ov)n(er)r(vie)n(w)-150 333 y Ff(In)26 b(or)o(der)h(for)g(a)f(neural)f
(network)i(algorithm)f(to)g(r)o(un)h(it)f(must)f(r)o(un)i(continuously)
f(and)g(at)f(a)h(high)h(end)f(pr)o(ocessing)f(power)-6
b(.)26 b(It)g(takes)-150 478 y(many)e(iterations)g(of)h(a)f(neural)g
(network)h(befor)o(e)f(it)g(is)g(optimized)g(to)h(perform)g(the)f(task)
f(that)h(it)g(is)g(given.)g(For)h(this)f(speci\002c)g(task)f(we)-150
622 y(will)j(explor)o(e)e(thr)o(ee)h(dif)o(fer)o(ent)h(continuous)f(r)o
(un-time)h(envir)o(onment)f(options)g(that)g(can)g(host)g(our)h
(application,)d(our)j(home)g(pcs,)e(the)-150 766 y(OSU)e(\003ip)f
(server)-6 b(,)22 b(other)h(r)o(esour)o(ces)e(/)h(paid)g(services.)-150
1075 y Fd(4.7.2)79 b(Cr)q(iter)q(ia)-150 1310 y Ff(The)20
b(chosen)h(technology)h(must)e(allow)h(a)f(constant)g(r)o(un-time)i
(envir)o(onment)e(of)i(at)e(least)g(24)g(hours)h(at)f(a)g(time.)h(This)
f(number)h(is)f(rather)-150 1455 y(arbitrary)e(but)g(optimal)g(so)h
(that)e(instances)h(can)g(be)h(checked)g(in)g(the)f(mornings)h(and)g
(left)f(unsupervised)g(thr)o(oughout)g(the)g(day)-9 b(.)19
b(It)f(must)-150 1599 y(be)k(able)f(to)i(r)o(un)f(Linux)g(and)h(must)e
(have)g(enough)h(computing)g(power)g(to)h(ef)o(\002ciently)e(r)o(un)i
(our)g(algorithm)f(uninterr)o(upted.)-150 1908 y Fd(4.7.3)79
b(Home-PC)-150 2143 y Ff(Developing)29 b(the)h(algorithm)f(on)h(our)g
(home)f(computers)g(allows)g(us)g(ultimate)f(accessibility)g
(especially)h(when)g(executing)g(certain)-150 2287 y(permissions)k
(necessary)h(for)h(the)f(pr)o(oper)g(functionality)g(of)h(our)g
(various)f(frameworks.)g(It)g(also)g(allows)g(unr)o(estricted)g(access)
f(to)-150 2431 y(installing)26 b(any)g(thir)o(d)g(party)g(softwar)o(e)g
(we)g(deem)g(appr)o(opriate)f(to)h(test)g(and)g(maintain)g(our)g
(application.)f(Utilizing)h(our)g(home)h(pcs)-150 2576
y(is)c(fr)o(ee)h(of)g(char)o(ge,)f(but)f(home)i(pcs)f(might)g(not)h
(have)e(the)i(capability)e(to)h(ef)o(\002ciently)h(r)o(un)g(our)f
(algorithm,)g(and)h(will)g(r)o(equir)o(e)f(constant)-150
2720 y(attendance)e(to)i(ensur)o(e)e(the)h(continuous)g(r)o(un-time)g
(envir)o(onment)g(necessary)f(to)i(achieve)e(optimal)g(learning.)-150
3029 y Fd(4.7.4)79 b(OSU)22 b(\003ip)f(ser)r(v)n(er)-150
3264 y Ff(The)28 b(OSU)g(\003ip)g(server)g(guarantees)f(a)h(constant)g
(r)o(un-time)h(envir)o(onment)f(monitor)o(ed)h(by)g(OSU)e(computing)h
(facilities)g(staf)o(f.)g(OSUs)-150 3408 y(computing)e(r)o(esour)o(ces)
f(ar)o(e)g(vast)g(and)h(allow)g(our)h(algorithm)f(to)g(r)o(un)h(ef)o
(\002ciently)f(and)g(uninterr)o(upted)g(with)g(minor)h(r)o(estrictions)
f(on)-150 3553 y(memory)c(usage.)f(They)h(ar)o(e)f(fr)o(ee)i(of)f(char)
o(ge)g(but)g(ar)o(e)f(r)o(estricting)h(when)g(it)g(comes)g(to)g
(installing)g(permissions.)-150 3862 y Fd(4.7.5)79 b(Other)22
b(resources)g(/)g(paid)f(ser)r(vices)-150 4097 y Ff(Our)j(last)g
(option)g(would)g(be)g(to)g(\002nd)h(a)f(paid)f(service)h(that)g
(allows)f(us)h(to)g(code)h(fr)o(ee)f(of)h(r)o(estrictions)e(and)i(in)f
(a)g(continuous)g(r)o(un-time)-150 4241 y(envir)o(onment.)g(These)g
(services)g(would)i(combine)f(the)g(pr)o(os)f(of)h(both)g(OSU?s)f
(\003ip)h(server)g(and)g(our)g(home)g(computers,)f(allowing)h(us)-150
4385 y(full)i(contr)o(ol)g(of)g(our)g(envir)o(onment)f(as)f(well)i(as)f
(a)g(supervised)f(server)h(unlikely)h(to)f(go)h(down)g(at)f(any)g
(critical)h(point.)f(Utilizing)g(one)-150 4530 y(of)f(these)f(services)
g(would)h(come)f(at)g(a)g(cost)h(that)e(would)i(have)f(to)h(be)f(paid)g
(by)g(the)h(members)f(of)h(this)f(gr)o(oup,)g(putting)f(an)h(economic)
-150 4674 y(constraint)e(on)g(the)g(pr)o(oject.)-150
4983 y Fd(4.7.6)79 b(Discussion)-150 5218 y Ff(Each)35
b(one)f(of)h(these)f(options)f(is)h(fully)h(capable)e(and)h(viable)g
(in)g(terms)g(of)h(our)f(existing)g(criteria.)g(The)g(choice)h(will)f
(likely)h(come)-150 5362 y(down)29 b(to)g(a)f(number)g(of)h(factors)g
(for)g(each)f(of)h(our)g(options.)f(For)h(home)g(pcs)e(we)i(must)e
(\002gur)o(e)h(out)h(if)f(each)h(member)6 b('s)27 b(option)i(has)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 32 33
TeXDict begin 32 32 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(32)p 0 TeXcolorgray -150 -144 a Ff(the)25
b(computing)h(power)f(to)h(r)o(un)g(our)g(algorithm.)f(This)g
(basically)g(comes)g(down)i(to)e(a)h(powerful)f(gaming)h(oriented)g
(GPU.)f(For)h(paid)-150 0 y(services)f(it)h(will)g(be)f(decided)i(on)g
(whether)e(the)h(gr)o(oup)f(can)h(accommodate)g(the)f(expense)g(of)i(r)
o(enting)e(/)h(utilizing)f(a)h(pay)f(as)g(you)h(go)-150
145 y(server)-6 b(.)23 b(If)g(neither)g(of)h(these)f(options)f(is)h
(viable,)f(the)h(OSU)g(\003ip)g(server)g(must)f(be)h(utilized)g(and)g
(its)f(r)o(estrictions)h(addr)o(essed)g(to)g(ensur)o(e)-150
289 y(the)f(pr)o(oper)g(functionality)g(of)g(our)h(various)e
(frameworks.)-150 592 y Fd(4.7.7)79 b(Conclusion)-150
827 y Ff(Given)27 b(that)f(the)h(OSU)f(\003ip)g(server)h(has)f(both)h
(the)f(computing)h(capability)-9 b(,)25 b(as)h(well)h(as)f(constant)g
(availability)-9 b(,)25 b(it)i(is)f(the)h(most)f(likely)-150
972 y(candidate)34 b(for)h(the)f(development)f(of)i(our)f(application.)
e(In)i(the)g(unlikely)g(event)f(that)h(a)f(critical)h(function)h
(cannot)f(be)f(executed)-150 1116 y(due)d(to)g(a)g(lack)g(of)h
(permissions)e(non)h(addr)o(essable)f(as)g(students,)g(one)h(of)h(the)f
(other)g(choices)g(must)f(be)h(picked)h(and)f(our)g(strategy)-150
1260 y(r)o(eassessed.)-150 1598 y Fe(4.8)79 b(Deep)23
b(Learning)g(librar)q(y)-150 1840 y Fd(4.8.1)79 b(Ov)n(er)r(vie)n(w:)
-150 2075 y Ff(On)22 b(this)g(section,)f(most)h(commonly)g(used)g(deep)
f(learning)h(library)g(will)g(be)g(compar)o(ed.)f(The)h(thr)o(ee)f
(libraries)h(that)f(will)h(be)f(compar)o(ed)-150 2219
y(ar)o(e)39 b(T)-7 b(ensorFlow)g(,)39 b(Deep)g(Learning4)h
(Java\(DL4J\),)g(and)g(OpenCV)-10 b(.)39 b(The)g(best)g(library)h(that)
f(\002t)g(into)h(our)g(pr)o(oject)e(need)i(will)g(be)-150
2364 y(selected.)-150 2667 y Fd(4.8.2)79 b(Cr)q(iter)q(ia:)-150
2902 y Ff(Our)21 b(main)g(goal)g(of)h(the)f(pr)o(oject)g(is)f(to)i
(build)f(the)g(signatur)o(e)f(r)o(ecognition)h(pr)o(ogram)g(by)g(using)
g(image)g(detecting)g(API.)f(T)-7 b(o)21 b(accomplish)-150
3046 y(this)34 b(task,)f(it)h(is)h(essential)d(to)j(\002nd)g(a)f
(suitable)f(machine)h(learning)g(library)h(for)g(signatur)o(e)e(r)o
(ecognition.)i(The)f(machine)g(learning)-150 3191 y(library)28
b(must)f(be)h(r)o(unnable)f(in)i(dif)o(fer)o(ent)f(operating)f(system,)
g(support)g(many)g(pr)o(ogramming)h(languages,)e(pr)o(ovide)i
(handwriting)-150 3335 y(r)o(ecognition)23 b(algorithms)e(or)i
(functions,)f(have)f(many)h(community)-9 b(,)22 b(and)g(fast)g(enough.)
-150 3638 y Fd(4.8.3)79 b(P)l(otential)21 b(Choices:)-150
3873 y Ff(4.8.3.1)77 b(T)-7 b(ensorFlow:)37 b(T)-7 b(ensorFlow)24
b(has)g(a)g(short)g(history)-9 b(.)25 b(However)-6 b(,)24
b(lar)o(ge)g(communities)g(use)f(T)-7 b(ensorFlow)g(,)24
b(and)g(ther)o(e)g(ar)o(e)g(mor)o(e)-150 4018 y(than)i(6000)f(open)h
(sour)o(ce)f(r)o(epositories)h(online)h([1].)f(T)-7 b(ensorFlow)26
b(has)f(special)h(featur)o(e)f(on)i(numerical)f(computation)f(which)i
(makes)-150 4162 y(it)j(a)f(powerful)h(tool.)g(Unlike)f(other)h
(machine)g(learning)g(library)-9 b(,)30 b(T)-7 b(ensorFlow)29
b(uses)f(data)i(\003ow)g(graphs)f(that)g(contains)g(vectors)h(or)-150
4306 y(matrixes)23 b(called)g(tensor)-6 b(,)24 b(and)g(this)f(data)g
(\003ow)h(graphs)f(allow)g(developers)h(to)f(compute)g(the)h
(calculation)f(on)h(one)g(or)g(mor)o(e)g(CPUs)f(or)-150
4450 y(GPUs)f([1].)-150 4667 y(The)d(other)g(str)o(ength)f(of)h(T)-7
b(ensorFlow)19 b(is)g(\003exibility)-9 b(.)18 b(It)h(supports)e(both)i
(desktop)f(operating)h(systems)e(and)i(mobile)g(operating)g(systems)
-150 4811 y(such)27 b(as)f(64-bit)g(Linux,)h(MacOS,)g(W)l(indows,)g
(Andr)o(oid,)g(and)g(IOS)g([1].)g(Also,)g(T)-7 b(ensorFlow)27
b(Application)e(Pr)o(ogram)i(Interface)g(\(API\))-150
4955 y(supports)20 b(in)j(Python,)f(Java,)f(C,)h(and)g(Go)h([1].)-150
5172 y(Ther)o(e)k(ar)o(e)h(also)f(disadvantages)g(using)g(T)-7
b(ensorFlow)g(.)27 b(The)h(main)g(pr)o(oblem)f(with)h(T)-7
b(ensorFlow)28 b(is)g(the)f(speed.)h(It)f(has)h(dramatically)-150
5316 y(slower)h(speed)f(compar)o(e)g(of)h(other)g(frameworks.)g(Also,)f
(T)-7 b(ensorFlow)28 b(is)g(heavier)h(than)f(other)h(machine)f
(learning)h(libraries.)f(Since)-150 5460 y(T)-7 b(ensorFlow)34
b(for)o(ce)h(to)g(use)e(set)h(of)h(vector)g(or)g(matrix)f(for)h(\003ow)
g(graph)f(data,)g(copying)g(lar)o(ge)g(matrices)g(cause)g(slowness)f
(of)i(the)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 33 34
TeXDict begin 33 33 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(33)p 0 TeXcolorgray -150 -144 a Ff(pr)o(ogram)24
b([2].)g(The)g(last)f(pr)o(oblem)h(of)h(the)f(T)-7 b(ensorFlow)24
b(is)f(the)h(optimization)g(of)h(Java)e(API.)g(It)h(is)g(an)g
(experimental)f(step)g(supporting)-150 0 y(Java)e(API,)g(so)h(Java)g
(API)f(for)i(T)-7 b(ensorFlow)22 b(is)g(not)g(stable.)-150
217 y(4.8.3.2)77 b(Deep)23 b(Learning)g(for)h(Java\(DL4J\):)36
b(Deep)23 b(Learning)g(for)h(Java)f(\(DL4J\))h(is)f(the)f(machine)h
(learning)g(library)g(supports)e(on)j(Java)-150 361 y(virtual)d
(machine)h(\(JVM\).)h(It)e(supports)g(languages)f(such)i(as)f(Java,)g
(Scala,)g(Clojur)o(e,)g(and)h(Kotlin,)g(but)g(Java)f(is)h(the)f(main)h
(language)f([2].)-150 505 y(The)h(str)o(ength)g(of)i(the)e(DL4J)h(is)g
(the)f(speed.)g(Ther)o(e)g(ar)o(e)h(several)e(characteristics)h(that)g
(makes)g(DL4J)h(r)o(un)h(faster)-6 b(.)22 b(First)g(characteristic)g
(is)-150 650 y(the)k(DL4J)h(has)e(linear)h(algebra)g(computations)e
([2].)j(It)e(is)h(much)g(simpler)g(than)f(other)i(complicated)f
(computation)f(algorithms.)g(The)-150 794 y(second)e(characteristic)e
(is)h(that)f(DL4J)i(can)f(r)o(un)h(in)f(parallel,)f(and)h(this)g
(parallel)f(setting)h(is)g(automatic.)e(Since)i(the)g(user)g(does)g
(not)h(have)-150 938 y(to)k(cr)o(eate)f(parallel)f(setting,)h(the)g
(system)g(r)o(uns)g(much)h(faster)f([2].)h(The)f(last)g(characteristic)
g(is)g(that)g(DL4J)h(r)o(elies)f(on)h(JavaCPP)f(which)-150
1082 y(parse)c(C/C++)h(header)g(\002les)f(to)h(Java)g(interface)g
(\002les)f([2].)h(This)f(allows)h(DL4J)g(r)o(un)h(faster)e(since)h
(most)f(of)i(the)e(high)i(cost)e(pr)o(ogram)h(ar)o(e)-150
1227 y(written)f(in)g(C)h(or)f(C++.)-150 1443 y(Although)e(the)h(DL4J)g
(API)e(language)h(supports)f(lack)h(of)h(diversity)-9
b(,)21 b(it)f(won't)h(cause)e(much)i(pr)o(oblem)f(since)g(Java)g(is)g
(one)h(of)g(the)f(lar)o(gest)-150 1587 y(pr)o(ogramming)g(language.)f
(Almost)g(10)g(million)i(developers)e(use)h(this)f(language,)g(and)h
(many)g(lar)o(ge)g(companies)f(highly)h(r)o(ely)g(on)h(Java)-150
1731 y(or)29 b(a)f(JVM)h(based)e(system)g([2].)i(In)f(addition,)h(Java)
e(is)h(supported)g(in)g(many)g(platforms)g(without)g(converting)g(the)h
(language.)e(Once)-150 1876 y(developers)22 b(write)g(the)g(code,)h
(they)f(simply)f(have)g(to)h(pass)f(their)h(code)h(in)f(JVM)h(to)f(r)o
(un)h(on)f(dif)o(fer)o(ent)h(operating)e(system.)-150
2092 y(Ther)o(e)i(ar)o(e)f(two)i(main)f(disadvantages)f(using)g(this)h
(machine)g(learning)h(library)-9 b(.)23 b(Firstly)-9
b(,)23 b(DL4J)h(does)g(not)g(support)e(many)h(languages.)-150
2236 y(Although)36 b(Java)f(can)h(support)e(dif)o(fer)o(ent)j(envir)o
(onments)e(by)h(using)f(JVM,)h(dif)o(fer)o(ent)h(pr)o(ogramming)e
(languages)g(have)g(str)o(ength)-150 2381 y(on)28 b(dif)o(fer)o(ent)h
(cir)o(cumstances.)d(Supporting)h(mor)o(e)h(pr)o(ogramming)f(language)g
(will)h(to)g(give)g(diversity)g(to)g(developers.)f(The)h(second)-150
2525 y(pr)o(oblem)21 b(a)h(small)f(community)i(compar)o(ed)e(to)h
(other)h(machine)f(learning)g(libraries)g(because)e(DL4J)j(has)f(a)f
(short)h(history)-9 b(.)-150 2741 y(4.8.3.3)77 b(OpenCV)l(:)45
b(Unlike)31 b(the)h(pr)o(evious)f(two)h(machine)g(learning)g
(libraries,)f(OpenCV)h(has)g(a)f(long)i(history)-9 b(,)32
b(so)g(it)g(has)f(a)h(lar)o(ge)-150 2885 y(community)-9
b(.)31 b(Accor)o(ding)g(to)g(OpenCV)g(website,)f(ther)o(e)g(ar)o(e)g
(47)g(thousand)h(people)f(in)h(the)g(user)f(community)-9
b(,)31 b(and)g(mor)o(e)f(than)h(14)-150 3030 y(million)25
b(downloads)g([3].)f(Additionally)-9 b(,)25 b(our)g(teaching)f
(assistance)e(have)i(experience)g(on)h(OpenCV)-10 b(.)24
b(This)g(is)g(highly)h(advantageous)-150 3174 y(since)d(our)g(gr)o(oup)
g(can)g(get)g(advice)g(dir)o(ectly)g(fr)o(om)h(our)f(T)-6
b(A.)-150 3390 y(OpenCV)38 b(is)f(mor)o(e)g(\003exible)g(then)h(T)-7
b(ensorFlow)g(.)36 b(It)h(r)o(uns)h(on)f(both)h(desktop)f(\(W)l
(indows,)g(Linux,)h(Andr)o(oid,)g(MacOS,)e(Fr)o(eeBSD,)-150
3535 y(OpenBSD\))23 b(and)f(mobile)g(\(Andr)o(oid,)h(Maemo,)e(iOS\),)h
(and)g(supports)f(C++,)h(C,)g(Python)g(and)g(Java)g(languages)f([3].)
-150 3751 y(Speed)f(is)h(another)f(bene\002t)h(of)g(using)f(OpenCV)-10
b(.)21 b(Since)f(OpenCV)h(library)g(is)g(written)f(in)h(C/C++,)g(it)g
(is)f(fast.)g(Also,)g(OpenCV)h(curr)o(ently)-150 3895
y(supports)d(about)i(500)e(CUDA)i(and)g(OpenCL)h(algorithms)e(to)h
(accelerate)g(the)g(original)g(algorithms)f([3].)i(CUDA)e(and)h(OpenCL)
h(ar)o(e)e(the)-150 4039 y(modern)27 b(GPU)e(accelerators)g([3].)h
(These)f(GPU)h(accelerators)f(incr)o(ease)g(GPU)g(performance,)h(so)g
(computation)e(time)i(for)g(algorithms)-150 4184 y(shrinks.)-150
4400 y(One)32 b(of)h(the)f(disadvantages)e(of)j(the)f(OpenCV)g(is)g
(that)f(the)h(library)g(is)g(not)g(suitable)f(for)i(Java)e(language)g
(yet.)h(Unlike)g(other)g(two)-150 4544 y(libraries,)24
b(OpenCV)h(supported)e(Java)h(language)g(r)o(ecently)-9
b(.)24 b(Ther)o(efor)o(e,)g(it)h(has)f(lack)g(of)h(implementation)f
(examples)f(with)h(Java,)g(and)-150 4689 y(pr)o(oblems)d(with)h(using)g
(Java)f(language.)-150 4998 y Fd(4.8.4)79 b(Discussion,)20
b(compare)i(and)g(contr)o(ast:)-150 5233 y Ff(As)37 b(it)g(mentioned)h
(on)g(criteria)f(section,)g(machine)g(learning)h(library)f(needs)h(to)f
(support)f(enough)i(algorithms,)f(language,)f(and)-150
5377 y(operating)g(system.)e(Also,)i(it)g(need)g(to)h(have)e(fast)h
(computation)f(speed,)g(and)i(lar)o(ge)e(community)-9
b(.)36 b(Following)h(table)f(shows)f(the)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 34 35
TeXDict begin 34 34 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(34)p 0 TeXcolorgray -150 -144 a Ff(compar)o(e)21
b(and)i(contrast)e(based)h(on)g(these)g(r)o(equir)o(ements.)p
0 TeXcolorgray 143 4 3614 4 v 143 101 4 97 v 1507 101
V 1678 72 a(T)-7 b(ensorFlow)p 2256 101 V 456 w(DL4J)p
3005 101 V 508 w(OpenCV)p 3753 101 V 143 104 3614 4 v
143 200 4 97 v 197 171 a(handwriting)22 b(r)o(ecognition)h(algorithms)p
1507 200 V 102 w(Decent)f(algorithms)p 2256 200 V 103
w(Decent)g(algorithms)p 3005 200 V 103 w(Decent)g(algorithms)p
3753 200 V 143 203 3614 4 v 143 300 4 97 v 504 271 a(Language)f
(support)p 1507 300 V 630 w(Many)p 2256 300 V 491 w(very)h(few)p
3005 300 V 491 w(Many)p 3753 300 V 143 303 3614 4 v 143
399 4 97 v 365 370 a(Operating)g(system)f(support)p 1507
399 V 455 w(Enough)p 2256 399 V 474 w(Enough)p 3005 399
V 509 w(Many)p 3753 399 V 143 402 3614 4 v 143 499 4
97 v 614 470 a(Community)p 1507 499 V 741 w(Many)p 2256
499 V 572 w(Few)p 3005 499 V 529 w(Abound)p 3753 499
V 143 502 3614 4 v 143 598 4 97 v 720 569 a(Speed)p 1507
598 V 862 w(Slow)p 2256 598 V 590 w(Fast)p 3005 598 V
605 w(Fast)p 3753 598 V 143 601 3614 4 v 1821 650 a Fa(T)-8
b(ABLE)19 b(1)1613 725 y(Compare)g(and)g(Contr)o(ast)p
0 TeXcolorgray -150 1221 a Fd(4.8.5)79 b(Conclusion:)-150
1456 y Ff(Fr)o(om)26 b(the)f(discussion,)g(compar)o(e)g(and)h(contrast)
f(section,)g(it)h(is)f(clear)h(that)f(OpenCV)g(is)h(the)f(best)g
(choice)h(for)h(CDK)f(Data)f(Str)o(eam)g(AI)-150 1601
y(pr)o(oject.)19 b(It)h(has)f(enough)i(handwriting)f(r)o(ecognition)h
(algorithm,)f(supports)e(various)i(language)f(and)h(operating)g
(systems,)e(has)i(a)g(lar)o(ge)-150 1745 y(community)-9
b(,)22 b(and)g(fast)g(speed.)-150 2091 y Fe(4.9)79 b(T)-5
b(e)o(xt)23 b(recognition)h(method)g(f)n(or)f(detecting)h(signature)f
(bo)n(x)-150 2334 y Fd(4.9.1)79 b(Ov)n(er)r(vie)n(w:)-150
2569 y Ff(On)24 b(this)g(section,)g(thr)o(ee)g(text)f(r)o(ecognition)i
(method)f(that)f(is)h(used)g(to)g(detect)g(signatur)o(e)f(box)h(will)g
(be)g(compar)o(ed.)g(Finding)g(signatur)o(e)-150 2713
y(box)30 b(is)g(important)f(part)g(of)i(detecting)f(signatur)o(e.)f
(Since)g(format)i(of)f(the)g(documents)g(vary)g(fr)o(om)g(each)g
(company)-9 b(,)29 b(signatur)o(e)g(box)-150 2857 y(must)c(be)g(found)i
(befor)o(e)f(r)o(ecognizing)f(signatur)o(e.)g(T)-7 b(o)25
b(locate)g(signatur)o(e)g(box,)g(wor)o(d)h(r)o(elate)f(to)h(signatur)o
(e)e(box)i(such)f(as)g(\223signatur)o(e\224)-150 3001
y(must)20 b(be)h(found)g(fr)o(om)g(the)g(document)g(to)g(locate)g(the)f
(signatur)o(e)g(box,)h(and)f(text)h(r)o(ecognition)g(method)g(help)g
(softwar)o(e)f(to)h(\002nd)g(certain)-150 3146 y(wor)o(ds)29
b(fr)o(om)h(text)f(images.)f(These)h(thr)o(ee)g(methods)g(ar)o(e)g
(optical)g(character)g(r)o(ecognition,)h(intelligent)f(character)g(r)o
(ecognition,)h(and)-150 3290 y(intelligent)22 b(wor)o(d)h(r)o
(ecognition.)-150 3599 y Fd(4.9.2)79 b(Cr)q(iter)q(ia:)-150
3834 y Ff(The)25 b(method)g(must)f(be)h(able)f(to)h(detect)g(wor)o(ds)g
(r)o(elate)f(to)h(signatur)o(e)f(box)h(such)f(as)g(\223signatur)o
(e\224,)f(\223company)h(signatur)o(e\224,)f(\223cosigner)-150
3978 y(line\224.)f(Accuracy)f(is)h(the)g(most)g(important)f(thing)h(to)
h(consider)o(ed.)-150 4287 y Fd(4.9.3)79 b(P)l(otential)21
b(Choices:)-150 4522 y Ff(4.9.3.1)77 b(Optical)17 b(Character)h
(Recognition)h(\(OCR\):)32 b(OCR)18 b(is)g(a)f(one)i(of)f(the)g
(earliest)f(method)i(to)f(convert)g(text)f(images)g(or)i(handwritten)
-150 4667 y(texts)f(to)g(editable)h(electr)o(onical)f(text)g(document.)
h(T)-7 b(o)18 b(do)h(this,)f(OCR)h(takes)f(thr)o(ee)g(steps.)f(Accor)o
(ding)i(to)g(the)f(Recogniform)i(T)-7 b(echnology)e(,)-150
4811 y(it)29 b(\002rst)g(analyzes)e(the)i(layout)f(of)i(the)f(text)f
(image)h(to)g(identify)h(the)f(columns,)f(paragraphs,)f(text)i(lines)f
(and)h(wor)o(ds)h(fr)o(om)f(the)g(text.)-150 4955 y(Then,)i(OCR)g
(splits)f(the)h(image)f(to)h(individual)g(characters.)g(On)g(last)f
(step,)g(it)h(identi\002es)g(characters)f(and)i(converts)e(characters)h
(to)-150 5099 y(electr)o(onic)26 b(character)f([4].)h(OCR)g(takes)f
(two)h(methods)f(to)h(r)o(ecognize)f(the)h(characters)f(which)h(ar)o(e)
f(pattern)g(r)o(ecognition)h(and)g(featur)o(e)-150 5244
y(detection.)20 b(Pattern)g(r)o(ecognition)g(determines)g(the)g
(character)g(by)g(matching)f(the)h(pattern)f(of)i(the)f(character)-6
b(.)20 b(It)f(compar)o(es)g(the)h(splitted)-150 5388
y(character)25 b(with)h(the)f(list)g(of)h(the)g(character)f(that)g
(stor)o(ed)g(in)h(the)f(pr)o(ogram.)g(If)g(splitted)g(character)g(is)h
(similar)f(with)g(stor)o(ed)g(character)-6 b(,)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 35 36
TeXDict begin 35 35 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(35)p 0 TeXcolorgray -150 -144 a Ff(it)25
b(converts)f(splitted)g(character)g(into)h(electr)o(onic)g(character)g
(.)f(However)-6 b(,)25 b(printed)f(text)h(doesn't)f(have)g(identical)h
(dif)o(fer)o(ent)g(font,)g(and)-150 0 y(it)i(gets)g(much)h(mor)o(e)f
(complicated)h(for)g(handwritten)g(text.)e(T)-7 b(o)27
b(solve)h(this)f(pr)o(oblem,)f(OCR)i(uses)e(featur)o(e)h(detection)h
(method.)g(This)-150 145 y(method)g(determines)f(character)g(by)g
(evaluating)e(the)i(characteristics)f(of)i(each)f(character)-6
b(.)27 b(OCR)h(pr)o(ogram)e(has)h(list)f(of)i(featur)o(es)e(for)-150
289 y(each)c(character)g(such)g(as)f(angles,)g(number)h(of)h(lines,)f
(and)g(such.)f(By)i(using)f(this)f(list)h(of)h(featur)o(es,)e(OCR)h
(can)g(r)o(ecognize)g(the)g(character)-150 433 y(even)g(if)g(it)g(has)g
(dif)o(fer)o(ent)g(font)h([4].)-150 650 y(4.9.3.2)77
b(Intelligent)26 b(Character)h(Recognition)h(\(ICR\):)40
b(ICR)27 b(is)f(an)h(advanced)g(version)g(of)g(OCT)-6
b(.)27 b(It)f(has)h(self-learning)g(featur)o(es)f(that)-150
794 y(allow)37 b(ICR)f(to)h(learn)g(thr)o(ough)f(its)h(experience)f
([5].)h(Since)f(ICR)h(learns)f(dif)o(fer)o(ent)h(fonts)g(and)g(styles)f
(fr)o(om)h(the)f(text)h(images)f(or)-150 938 y(handwritten)23
b(texts,)g(unlike)g(OCR,)g(it)g(can)g(determine)h(handwritten)g(texts)e
([5].)h(Also,)g(accuracy)g(of)h(the)f(ICR)g(incr)o(ease)g(as)f(it)h
(converts)-150 1082 y(text.)e(ICR)h(has)g(many)f(advantages,)g(but)g
(ICR)h(pr)o(ograms)f(ar)o(e)h(heavier)f(than)h(OCR)g(pr)o(ograms.)-150
1299 y(4.9.3.3)77 b(Intelligent)18 b(W)-7 b(or)o(d)18
b(Recognition)h(\(IWR\):)32 b(Unlike)18 b(both)g(OCR)h(and)f(ICR,)g
(IWR)g(detects)g(wor)o(ds)h(fr)o(om)f(the)g(text)g(images)g(instead)
-150 1443 y(of)29 b(characters.)e(It)h(is)g(very)g(similar)g(to)h(ICR,)
e(but)h(IWR)g(has)g(dictionary)g(that)g(makes)f(possible)g(to)i(detect)
f(the)g(wor)o(ds)h(fr)o(om)f(text)g([6].)-150 1587 y(For)22
b(example,)f(while)g(ICR)h(extract)f(\223hello\224)g(as)g(individual)h
(letters)f(like)g(h,)h(e,)f(l,)h(l,)f(and)h(o,)g(IWR)f(matches)g
(pattern)g(fr)o(om)h(dictionary)g(to)-150 1731 y(r)o(ecognize)g(and)g
(extract)g(exact)f(wor)o(d.)-150 2041 y Fd(4.9.4)79 b(Discussion,)20
b(compare)i(and)g(contr)o(ast:)-150 2276 y Ff(As)d(it)h(mentioned)h(on)
f(criteria)g(section,)g(accuracy)f(is)h(the)g(most)g(important)f
(featur)o(e)g(to)h(be)g(consider)o(ed.)g(In)g(addition,)h
(self-learnability)-150 2420 y(and)27 b(size)f(of)h(the)g(algorithm)g
(need)g(to)g(be)g(consider)o(ed)g(for)h(softwar)o(e)e(aspect.)f(Thr)o
(ee)i(methods)f(ar)o(e)h(compar)o(ed)f(based)g(on)h(accuracy)-9
b(,)-150 2564 y(weight,)22 b(and)g(self-learnability)-9
b(.)p 0 TeXcolorgray 969 2712 1963 4 v 969 2808 4 97
v 1912 2808 V 1973 2780 a(ORC)p 2203 2808 V 192 w(ICR)p
2603 2808 V 216 w(IWR)p 2928 2808 V 969 2812 1963 4 v
969 2908 4 97 v 1277 2879 a(Accuracy)p 1912 2908 V 358
w(weak)p 2203 2908 V 103 w(medium)p 2603 2908 V 103 w(str)o(ong)p
2928 2908 V 969 2911 1963 4 v 969 3007 4 97 v 1022 2979
a(W)i(eight)22 b(of)g(the)g(algorithm)p 1912 3007 V 116
w(light)p 2203 3007 V 116 w(medium)p 2603 3007 V 108
w(heavy)p 2928 3007 V 969 3011 1963 4 v 969 3107 4 97
v 1166 3078 a(Self)h(learnability)p 1912 3107 V 295 w(no)p
2203 3107 V 244 w(yes)p 2603 3107 V 246 w(yes)p 2928
3107 V 969 3110 1963 4 v 1821 3158 a Fa(T)-8 b(ABLE)19
b(2)1613 3233 y(Compare)g(and)g(Contr)o(ast)p 0 TeXcolorgray
-150 3730 a Fd(4.9.5)79 b(Conclusion:)-150 3965 y Ff(For)22
b(our)h(softwar)o(e,)e(ICR)g(is)h(the)g(best)f(choice)h(among)g(thr)o
(ee)g(methods)g(since)f(it)h(has)f(medium)h(accuracy)g(and)g(weight,)g
(and)g(it)f(also)h(has)-150 4110 y(self-learnability)-9
b(.)24 b(Although,)f(IWR)h(has)g(the)g(highest)g(accuracy)-9
b(,)24 b(it)g(has)g(unnecessary)f(featur)o(es)g(which)i(makes)e(the)h
(softwar)o(e)g(heavy)-9 b(.)-150 4254 y(Finding)23 b(signatur)o(e)e
(does)h(not)g(need)h(to)f(understand)g(the)g(wor)o(d.)g(It)g(just)f
(need)h(to)g(\002nd)h(the)f(location)g(of)h(the)f(signatur)o(e)e(box.)
-150 4600 y Fe(4.10)79 b(User)22 b(interface)-150 4842
y Fd(4.10.1)79 b(Ov)n(er)r(vie)n(w:)-150 5077 y Ff(On)24
b(this)f(section,)f(thr)o(ee)h(types)g(of)h(user)e(interface,)i
(command)f(line)h(interface,)f(menu)g(driven)h(interface,)f(and)g(form)
i(based)d(interface,)-150 5222 y(will)33 b(be)f(compar)o(ed)g(and)h
(selected.)f(It)g(is)g(important)g(to)h(select)f(pr)o(oper)g(type)g(of)
h(user)f(interface)h(for)h(softwar)o(e.)d(T)-7 b(o)33
b(select)f(pr)o(oper)-150 5366 y(user)26 b(interface,)h(user)f(of)h
(the)g(softwar)o(e)f(must)f(be)i(estimated)e(and)i(evaluated.)e(User)h
(of)i(the)e(signatur)o(e)f(detecting)i(softwar)o(e)f(ar)o(e)g(the)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 36 37
TeXDict begin 36 36 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(36)p 0 TeXcolorgray -150 -144 a Ff(employee)28
b(of)i(the)f(car)f(dealers.)h(They)f(have)g(little)h(or)g(no)g
(knowledge)h(of)f(arti\002cial)g(intelligent)f(or)i(computer)e
(science.)h(Ther)o(efor)o(e,)-150 0 y(simple)21 b(and)h(easy)g(to)g
(learn)g(user)g(interface)g(must)f(be)h(build)g(it)g(fr)o(om)h(the)f
(pr)o(oper)f(type)h(of)g(user)g(interface.)-150 310 y
Fd(4.10.2)79 b(Cr)q(iter)q(ia:)-150 545 y Ff(Signatur)o(e)19
b(detection)h(softwar)o(e)g(must)f(pr)o(ovide)g(black)h(box)g(form)h
(of)g(user)e(interface)h(since)g(user)g(doesn't)g(have)f(to)i(know)f
(about)f(detail)-150 689 y(pr)o(ocess.)i(Also,)g(it)h(must)f(be)h
(simple)f(to)i(use,)e(and)h(only)h(necessary)e(option)h(must)f(be)h(pr)
o(ovided.)-150 998 y Fd(4.10.3)79 b(P)l(otential)21 b(Choices:)-150
1233 y Ff(4.10.3.1)76 b(Command)23 b(Line:)36 b(A)22
b(command)h(line)f(interfaces)h(simplest)d(interface)j(that)f(allow)g
(user)g(to)h(interact)f(with)g(the)h(softwar)o(e)f(or)-150
1377 y(har)o(dwar)o(e)i(by)g(typing)g(command)g(on)h(command)g(line)f
([7].)g(It)g(is)g(oldest)h(interface)f(among)g(thr)o(ee)g(interfaces,)g
(and)g(designed)h(for)g(old)-150 1521 y(computers.)c(Since)g(old)h
(computers)f(ar)o(e)g(used)h(by)f(the)h(pr)o(ofessionals,)e(interface)h
(of)i(it)e(was)g(not)h(user)f(friendly)-9 b(.)23 b(T)-7
b(o)21 b(use)g(this)g(interface,)-150 1666 y(user)h(must)f(memorize)h
(a)g(lot)g(of)h(dif)o(fer)o(ent)f(commands,)g(so)g(it)g(takes)f(time)h
(to)g(get)g(familiarized.)-150 1882 y(4.10.3.2)76 b(Menu)29
b(Driven:)42 b(A)28 b(menu)g(driven)h(interface)g(allow)f(user)g(to)h
(interact)f(with)h(softwar)o(e)f(by)g(pr)o(oviding)h(simple)e
(selectable)-150 2026 y(menus)17 b([7].)i(It)f(is)f(commonly)i(used)f
(on)g(cash)g(machines,)f(ticket)h(machines)g(and)g(information)h
(kiosks)f([7].)g(Each)h(menu)e(has)h(instr)o(uction)-150
2171 y(that)24 b(describes)h(what)f(action)h(it)f(will)h(took)g(by)g
(selecting)f(the)h(menu.)f(T)-7 b(o)24 b(interact)h(with)g(the)f
(softwar)o(e,)g(user)h(just)e(need)i(to)g(select)f(the)-150
2315 y(menu,)29 b(and)h(softwar)o(e)f(will)g(show)h(sub)f(menus)f(or)i
(perform)h(corr)o(esponding)f(action.)f(This)g(interface)g(is)h(very)f
(intuitive)g(and)h(user)-150 2459 y(friendly)-9 b(.)23
b(It)f(does)g(not)g(r)o(equir)o(e)g(prior)h(knowledge)g(to)f(interact)g
(with)g(the)g(softwar)o(e.)-150 2675 y(4.10.3.3)76 b(Form)32
b(Based:)44 b(A)31 b(form)i(Based)e(interface)g(collects)h(data)e(fr)o
(om)i(the)f(user)g(and)g(send)h(it)f(to)g(the)h(system.)e(It)g
(collects)i(data)-150 2820 y(by)26 b(using)g(dr)o(op-down)h(menus,)e
(check)h(boxes,)g(text)f(boxes,)h(radio)g(boxes,)g(text)f(ar)o(eas,)g
(and)h(buttons)f([7].)h(It)g(is)g(commonly)g(used)g(for)-150
2964 y(softwar)o(e)20 b(that)h(collects)g(data)f(or)i(r)o(equir)o(es)f
(data)f(to)h(perform)h(the)f(function)h([7].)f(This)f(interface)h(can)g
(be)g(seen)g(on)g(survey)g(website)f(and)-150 3108 y(mathematical)h
(softwar)o(e.)-150 3417 y Fd(4.10.4)79 b(Discussion,)20
b(compare)i(and)g(contr)o(ast:)-150 3652 y Ff(A)e(command)g(line)g
(interface)g(is)f(very)h(simple)f(to)h(design)g(and)g(easy)f(for)i
(user)e(to)h(learn)g(how)g(this)g(interface)g(works.)g(However)-6
b(,)19 b(it)h(takes)-150 3797 y(time)25 b(for)i(user)e(to)g(get)h
(familiarized)f(with)g(the)h(interface)f(because)g(user)g(have)g(to)g
(memorize)g(dif)o(fer)o(ent)h(command)g(that)f(is)g(used)g(for)-150
3941 y(dif)o(fer)o(ent)d(situation.)f(This)h(interface)g(is)g(r)o
(ecommended)g(for)h(softwar)o(e)f(that)f(is)h(designed)h(for)g(softwar)
o(e)e(developer)-6 b(.)-150 4157 y(For)20 b(softwar)o(e)g(that)f(has)g
(simple)g(functions,)g(menu)h(driven)g(interface)g(is)f(r)o
(ecommended.)i(It)e(is)g(intuitive)g(and)h(simple)f(to)h(learn)g(how)g
(to)-150 4301 y(use.)i(User)g(doesn't)g(r)o(equir)o(e)g(any)h
(knowledge)g(to)g(use)f(softwar)o(e.)f(If)i(softwar)o(e)f(needs)g(to)h
(pr)o(ovide)f(many)h(functions,)f(this)g(is)g(not)h(good)-150
4446 y(interface)f(to)g(use.)-150 4662 y(A)h(form)h(based)e(interface)h
(is)g(r)o(ecommended)h(for)g(softwar)o(e)e(that)g(needs)h(to)h(take)e
(a)h(lot)g(of)h(data)e(fr)o(om)h(user)g(to)g(perform)h(the)f(function.)
-150 4806 y(If)f(softwar)o(e)g(does)g(not)g(need)h(to)f(take)f(many)h
(data)g(at)f(a)h(time,)g(this)f(interface)i(is)e(not)i(suitable)d(for)j
(that)f(softwar)o(e.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 37 38
TeXDict begin 37 37 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fj(37)p 0 TeXcolorgray -150 -144 a Fd(4.10.5)79
b(Conclusion:)-150 91 y Ff(Since)22 b(signatur)o(e)g(detecting)g
(softwar)o(e)g(interface)h(need)g(to)g(be)f(black)g(box)h(module)f(and)
h(simple)f(to)g(use,)g(menu)g(driven)h(interface)g(and)-150
235 y(form)28 b(based)f(interface)g(matches)f(for)j(the)e(softwar)o(e.)
f(However)-6 b(,)27 b(signatur)o(e)f(detection)i(softwar)o(e)f(does)g
(not)h(need)f(many)g(input)g(at)f(a)-150 380 y(time,)c(so)g(menu)f
(driven)i(interface)f(is)g(the)g(best)f(interface)i(for)g(our)f(pr)o
(oject.)-150 726 y Fe(4.11)79 b(Ref)o(erences)-150 968
y Ff([1])22 b(\224T)-7 b(ensorFlow)22 b(website\224)f(Internet:)g
(https://deeplearning4j.or)o(g/,)e([Nov)-9 b(.)23 b(21,)e(2017].)-150
1185 y([2])h(\224Deeplearning4j)f(website\224)g(Internet:)g
(https://deeplearning4j.or)o(g/,)f(2016)g([Nov)-9 b(.)22
b(21,)g(2017].)-150 1401 y([3])g(\224OpenCV)g(library)g(website\224)f
(Internet:)h(https://opencv)-9 b(.or)o(g/,)20 b([Nov)-9
b(.)22 b(21,)f(2017].)-150 1617 y([4])c(\224OCR)f(-)h(Optical)f
(Character)h(Recognition\224)f(Internet:)g(http://www)-7
b(.r)o(ecogniform.net/eng/ocr)o(-optical-character)o(-r)o
(ecognition.html,)-150 1762 y([Nov)e(.)22 b(21,)f(2017].)-150
1978 y([5])c(\224The)f(Dif)o(fer)o(ence)h(Between)f(OCR)h(and)g(ICR)f
(and)h(Why)g(It)f(Matters)f(for)j(Or)o(ganizations)d(Using)h(DMS\224)g
(Internet:)g(https://www)-7 b(.e\002lecabinet.com/the-)-150
2122 y(dif)o(fer)o(ence-between-ocr)o(-and-icr)o
(-and-why-it-matters-for)o(-or)o(ganizations-using-dms/,)24
b([Nov)-9 b(.)22 b(21,)f(2017].)-150 2339 y([6])c(\224Intelligent)f(W)
-7 b(or)o(d)17 b(Recognition\224)f(Internet:)g(http://captricity)-9
b(.com/intelligent-wor)o(d-r)o(ecognition/,)17 b(2016)e([Nov)-9
b(.)16 b(21,)g(2017].)-150 2555 y([7])h(\224System)e(softwar)o(e:)h
(User)g(interfaces\224)g(Internet:)g(https://en.wikibooks.or)o
(g/wiki/A-levelComputing/CIE/Computersystems,communicationsandsoftwa)p
(r)o(e/)o(Syst)o(emsoftwar)o(e/U)o(serinterfaces,)-150
2699 y(2017)k([Nov)-9 b(.)23 b(21,)e(2017].)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
