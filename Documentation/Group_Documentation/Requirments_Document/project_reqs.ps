%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: project_reqs.dvi
%%CreationDate: Tue Nov 14 14:11:44 2017
%%Pages: 11
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: URWPalladioL-Roma URWPalladioL-Bold NimbusSanL-Bold
%%+ NimbusSanL-Regu NimbusSanL-ReguItal URWPalladioL-BoldItal
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter project_reqs.dvi -o
%+ project_reqs.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.11.14:1411
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore}bind
def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave
pgfsoa .setopacityalpha stroke grestore}bind def}bind def /pgffoa 1
def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: URWPalladioL-Roma
%!PS-AdobeFont-1.0: URWPalladioL-Roma 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Roman) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Roman) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Roma def
/PaintType 0 def
/WMode 0 def
/FontBBox {-166 -283 1021 943} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB756B8E2BF5B37627E46
DAFD4A4F741A859BB5F7D7C77FC7AA96EE6AC93C06CA829B81FE31E32D59C6DE
B1BF3B6CCC5C3C9296DC86D01487F08AB668F656CDD88EB816AEDD1EFA47F014
FF598E78C978DF18F8F66057351BC96B48015AF2E09E3E318053E952E9AD4037
BFC7EEF9CBFD7BC35746565B7EFBF241639793AE357220843147FADB929FBD24
01C88A382F00BF79554D125C543455330002B0FE6D229830470C78541E78DAD5
3E7C1A619B91215AE025F81561441BFC9ADA446035B8EB9C3D69BA746AD0CCAA
049D1FE4D905DF3F48D22900E02A23FB23F6B571DDC8B2CF7008431C1EAD7F6B
D92A2C42CAED94F9714F44E3CE31FBAF23A064AA2A7F13D6E5378E28539F0009
323A0755E58BA7564A408B142C230672A423DA6A6E54ED162AFBF8FADFA75B0B
FC648D5DA6EC31251B62B9F619AD9460876EEFCB8F9D2369CA3055820306533F
3C1D47D5A2EF97619FC2C780BCD9540A820748369FFDAB9D52492F130C0AC3C8
E0C87377DA6C21F1DE429C15AA939877876F84605F6785B5ADEA97321BF29DEF
3692AF535EEFE801975F94645272142128A3FEC8B1BCEB6E57B83520B5C4DD69
36DB8CDEF6E49B8944CA31C59F8790CD3FED58F1182D9AC6DCB2D75B4881B430
C67DB769B4745EA54233CDFD5600BB2A96209A83FD04C13D4AA4AE27DED97D25
93F6FDA5F64711EC7A2899AC98BD8D8879A6A348265832994C3BAD80E1D12291
CB05924302B780443A76A09E1C27E8DCDCD87FFE3BE17DE0421A47733C2BD723
9C876942155834190F65598810AF8CAD9842F8A1E3BBD2AE3348BD8FC9189FE2
ED5643EC4D87148775121702EEB7639ACD80EF4F07542BBBC09F98F81FB91A1C
89C691BF38CE4239B11C1C0D9A6B864753E204C0BCCB093E139F9D6104FE0584
DF022C621F86E5BFE2E047FD560E8A89B3872C87F7811E9EBCA9CF182472841A
88E7C421E5CE69DAD123B88D4E6C0FD85C86C74435BFCAE28C2B5CAD57D91A9B
4473906D044085B5336B066C6D9CE994D2B333F470AD32D3BC28BA2D699B7AE6
2B689CD50CE2D458501EBCD2381F3430C3059EDCA22D9F15CA03CD18CB160E59
C0E960F79010DC1E9EC40BA6914F9FB7951CB4D5AAFAA135C17D5D64CD848A32
C71A5C856CC9C94F24B6C9AF854B83771678C0B0B4C6A4D9C05ADE69E5C04697
8751F11D2AD4A508CC61D06884D6246FA607802124E77FC07620C1DC238000AD
F6AD8E9D7418065549E5A7DE64405908A078F353F447D44E968A8BA903DBE04F
677479DB92989DFABDF637FF627F4756AFF80F27EA2B9ACD21AA8BE59F75A8EA
AE3BF5ED74076F822C41086CCE1E87A943549450BDB18CEA58D596BDEDB2EA43
8085FC9662B6C313B5CB54A9AD8CCE8BAD25DBCE0ABE023261A1794761FA8430
E43AA6A59BFCDD7DCFEF07F933662CDC5724D3A5C43A25929B54898BA9B58D30
C6F19B4DAE1DDF8E068A8B441C5B5E1FE556DB195D2881FC9AAF598C88CEF222
74222E0FF68051E53B460935C2DF2D8A77807B4DEEAD3FAD1E46371B4494A4EC
B43C272E0A1DC0BFDFA816FBA451DCFC20B89F7603803A12861C0FECBE1F47EF
98C35E5DA9D57564EB8DD80FC43D47B3C5D419327F7870805E30810C134DCE8F
C1F5680ECAB52B7666FE5AD07FBCE7B6C7466C36C1FE04D8866F9251B149042D
71C931DDD8234BFF1BB6BC76E651CA85C0C845ACFDC98ECFD8D07A125E562356
B7D819379BCFBCA830A71389C246F771AF97AD574BFE9944461FCD9408C88D6A
3EB9ACEEE59EFAABD76D5677B231727E89E110AB58F78A4BE43408C7C2F6D446
5B31BDEBFFA59B2A6E9438E4F5075931668B04698B3CBE8F262043BC15C05289
17E8327FB8B6B10274907C8E9A28945C70BE2EC90FDE715D61801FE189AB7A75
30A0C7C921F074C2C63001A415D6978EC80CBBE250BA0562AB6D29135BA477FC
3021B6854484A0592796449AE8F9B27B222100FBD51A9BAE076457A0A9E830C0
658485CA6304D445AA4B08E97B5BD3466C6897065446F7653446FEF499C10BBF
BDCF134E1D1EB8B314610183673444B6645B55EAD0550D79E5E4655E10AE13C4
0486C064E7C7CF994BE8DE8672207703D00D9E6A2484139549A171890B36BD31
0D1A184C084913958D22575E85F99F8590F62933B22EC8CD48D81CC019C9B4E4
1A80822687CF6CE66357C4904B79B704C799AE090C2E12AE0D9889F2FF91CEC6
6A50A934E374045BB4457FA9E5B652C7DD22CD157327FC45056132D2861F781A
F45D555B786B9B2BC563CA35E60B85E210DA5E0740AC1751DE355F94117437A3
4D3F4F85AB32857E14E646AD69AE46D8C62864A6C967A44D7900D44790C42519
C77695497AD2EBD51CB4DAEB0D9834F4CC5F8EEBE00BE39EEC30136B8BBA284A
D932B98721AAC2F00DF496288F46F21FC15112897A82021211D00A7FF64F3150
5A2E1CDB32A589690504D097B10E30E7A4A75691C0BCF4E5B8032D1946A35928
9FE2140F4B10602A684CF11275E537A592BDA358B1A86900F1B8DC287C8B2340
D731E4BB3CC6EC6BFF929EF80FDB8C24F232C6D89B7278B910483A464448C070
9C17105A411052C53817770E78F441E5F78DB3A150F0A442EC30FFFE388E6A96
B840649848D48610D183AD58CFAE137758B183F086935E739FF030719400112E
AA300CB6910A4072C474D5DEC20D551CA856823786EEBBF290D88A354644A4FF
F38C3AD2A480AE36218B4F466B8C7B131B3883E24E8852E88A012D41DB6E1D3A
D6BD20856C95470908FBFB46E47AFE234F39950BC003FDB74489C8B45BF7E1D6
38375F2F1ADC2E07E91763D2F0F99D02647FBF68C82AFBCC7E3A3DED220746FF
2B7076B8337BC6B584B5914801AAC6E8C36EDEB819C7BDC6335716A87C2F39D5
4B03E9A983BF9EFA56EF946D8509F3B7D2D2999D3F3725FACB38C6E0C24DCE9A
0D654066CEA814469DA19702F997DB1854F135C2B69D0BE6D18336AC2CE0BE1E
D7139E62E7910590CDA5DD4588FC950C9A5CACCBE39F1A5B5922B70542CA8BB9
3B63EEB09F28F3966CBC449C788B427E50CA5BDC093DC971B1AE1279F582DD25
8C11C2B23574478290F37CC2C41A88139787246D4C8C41D27CD3F086246728F8
B4B968EBCABB09B17A7E85C7BE858BB0C683D1834FCCA9AD81FA94AB9C5F340C
AA0AC6745916FA18BB8DF0F66B3C1CC771158FAC11D76E7D163A7342A6CDD3C6
662F5AEC5B3E4A69FA7BA6EDD414F99F3459476AE973647334BF7EF2A742DD53
A70656C3E06A7AFE3BCC7EA7E4B18230728FA5537156C1FD8C81C3C8C2305F34
ABF61F1A074A1266D368699A779C424B40BAD55E954F8096414D8305558B5F99
A435D7AA3AD6C77FB5598C222D29454B656262BF46A872C86B8B98E210848F52
4A1A2EC2A5CA7EE3C578535D39CC4C6BC53064CBA51F6A78837E178446A5B0C7
C57D129D64B0DC0FBF1F3A16E5BA4F90BB140462D8955A1E06DCEA921B5088B1
1C34EB94E3C489B22D1ED797CE26E2403B89B3D916D30ED29B3E7301B06BD090
6D7C8F038DBEE3A896992A1CDABBC5D2C87F9C203979697C640416D38AF8998F
EC5B0C5230E17E4CC99545E0775D89C1D1836F6DFD97FBF9633F89417C286FB9
8AB2D2D3A6081AB500436204DE3F6F1EAF14CCB7901A3C1C54A705AE432416BF
4FE23DFDA51D40DD9BF5DDD3CB175F3E1E612CD544ECC7FEEFA841B2274570DC
E510E39D6CC4DB979186221ED7E0B65E32A8EEA6EC7A69671417426CA896BAEE
9F9EC2637429CB45EB3ECFF3EC05B35F6AAE9C67CAAE00C3B09AA29BF8966E11
E954B0AEE88EEF4385445A3E60BB759D894EC7B48A9F798B971EDBEE3650FCC7
C8B259CCBA8205E8F98F00E3D4850BC4A6FCBDD7123B07424671BF00797D681D
595B89297A87323DB82F4366E7F84F745A38C7631BEB3D095F3BDEB0FC0140FE
BE91C45AAB69F13798A4767C68AFFEBD29ED4B6E2AEAD7E6A538D79D6CBC1D6E
24C17BC4090A4CBBEF3B632DD50F52C8AF74E9B3FC245E6888A546966F9D7699
00193133B2F746F8517795ED6B0BE7AA1CD29495FCB31167ED06A5A340040C1C
50BA49524C71DD1D9114BA71BBFF779A727D18EA999ED76E138D519E428C90D3
0E716D592F48C9E47DDC1DB7FAA39EB5F85C96ABC52810FF6AF70D58A4D7D99D
11D1F0FD52825A689E15BA0AC79D3F8FBC31DBEE9CAC7E77D79B27E02132A165
44169E0C4A62F45F86C78A802997AC440DC8D5A6B1DCE8C3EF1B58A487BDB1B3
F7EBB749DC4440CF1B518E22A75CF5E9CB9A4DB1F4E6B4BCDBBFC85A3A92B3FB
7C199618D3B2D90A75AF58CC4CCFE35957B23CFEC70C91E1823C03F800BC86CA
8D726260B51E71CE4F9FA406446C3F30BDB2FCE712EB0B9BEF80D5A156E3EF0E
EA375E66905D49892B70588D73129F8DD1F0FAA258942085749E505F1FAE14DE
1883D530ADE4B196DE9E61C4C8D5FBF4CF991AF88820F123F95B43BDAFC180A6
1CD2FE2A391271413D1ADD6D779B654150041DB744518A0E8A80F687AA6A1FA1
45DFF761EF8B43F852E00722DB3532CD698397EC9FEC7BA6446656F2ADFE1C2A
B7F8582F33B2E19893421464A9501F94ABE2333BAE0E4F838E1342D1C351AB40
3B42027CEA384DF3A16FD969B5FDDF273E44AA0993D5479BF1CFB2FC96B01ED7
C2970B0AEAF74A19162BCECCEC91080AA036BC6CE74FF7CD37E72356EA559BC8
93542982FFDB6CF19FEE4D250CFEF414086CC569FE694A3090465C94CFA5C784
37A7440C8AA88B32FDEA21D73F36605627934E055273B2BFECF4FE50A760887F
52E83F24A890B95FC8BAD5F27D6E47F4FB9602AD6E1158543D00A6C821C8ACE3
01EECF257B1E9BA488552799E40E102D9E5646FEA24C0940D12507B823BA1B8B
C4AF53974D04BDABCC0C2A06849F5B712394804BD4BE709221871A09D6ECAED6
F3C14FB659E8B9BBEF8720614C303738994C150C2AC9AFB1163E58651D2D017D
8BAF922FF16B61334C671073A58AEFFDE86FA40B544AB1EEA5F27B91E98C2998
6B14D002B34AD21D01E1971AD8905004C227EB2475D77D38011585E14870C3C7
0C900B579CDE7D7C306DE84AB81E99DBF54BCF28B63386D2EA922C80E9702C61
E213FC3412FA8677AD4CDBF5D5E8524B0D4C7CBBF2A3552C50A5DE02C35AC220
A89123A74E0B57509BA75FA5613021A298F90AB39C197A0593B73F71DCFCBD2B
771A97BE327B917D1B6296D9453D491902C7EEBCC1ACFA39BCD273B7CADD7262
FA3D6C4CA5F9F22A72FDA487FC97405B9ED8E24200F1F2197F2EED6974E7B8A2
12D08F73B0278617E8DA35579FE7E7B9A29DF29B896AA8798E221313618DE78D
22F02EA81597EA427FED568F0287D043B4DB3C8CC888243B9F7305A874F81669
762B92A37D94A10B417B0B65C693E3FC65EFDB1BFF7763CF1E0CB43E13F1FA2C
B3EE64202C221D79BA01F71E56482BE924C444FEF0F24767A37E04B9A16FCE62
F33F0C59263F225101EB0711F288B2C51C8D0EDED5B42822FAC82C37490A0BEF
5642999E4D1F915D1ED09BB952BA6E68FABCD60608F52EB8B45BC3807D6C1C0F
75E57F66F06D0F94BF6E71CEDF718A506DE1D8C21DA48CA43FB0DF73DE5CB762
C32A349C4174811E9E24F8D944B1C140707E2734854E28C334B1CD93BF182F0D
75285DDA2EE72CC66F826A3A6924B4842F5DF54C9BA5C41117B358E59045747E
0EFF245F7682641E7F09BFCEB2EAC030318EA189CE32C32A66ACDECB128DAF44
2A563EC06644A4F7393C18B2E5AF2CB73F1FA7A9AADAA5CF5592EC91283F9549
F09CFC040831B45FBF8A1AF6AC115B7AAD0F27E911880F27B0FAC18F712403AC
ECAA5A63C6E2043B2EEB4A5EE20A546A99CDA28557AC34E8E9E673D3370769FB
78FB528B745B5178F171A96128E332BADC599B4CC8FEF413DBA605FCE061AD79
9B805D9C534721F4C9E1A4ADDCE036953C7ABE3A5A0BEAEA2CF3515F1C1E6FB8
5A0EDCE49BD38E2858E37BEDCA8C489F9EE00BD55CB7B31CFB6CC1ACB2AFF585
739853945C803FDAF2701DE88CD2453C09987E235D60CADB0700BAAEC1603E3C
A8A10A1DD39AA233EBB7A0BE5C47E19B535F782A7D14216F5E4A4B898478E856
FDE39C8495935984DB05E83E02A80937BF33358AAB8D0D2A4AE1EA695CEEAF70
E3B20CE4DB012E9F2066466E87F3FB543D252534225A580648809B514E60D191
5C995894C52C9CB3D5BB71B130C2A35AD8AD0704657176F17CE49A3A6957A9AA
3829881A778F27C71D37BF15AC54E8C39BF35E974C74DF0455B469309503D39A
45298E3035598F2B29F7BF43A43911F3E42113D5681A04596EB54B4DCE8141FC
B5B9FAF72464FB63A5C42A63D64F3E16A92AFB64C0891B14D9920F486D3C94CF
0C7669ED9E36DD33954846D9D0ACBD50177F5BC191C9077BF8E53EDB89D6070B
27D4919792C0BC103538CD284C9CFEAA2928802611B23B64DBE6B4B81BD89C82
D81A6F3E132606A8524D88E16F3112FA0F007C128202E58A1C945F77AB141695
47EE2D0E54A8D88B3F6E33199BC15C451E1A19099A0FEFF456286F94838CA95F
EDDFFA2FFD0EDCBE4E3B5C8D8DE89E242F9B6312BB5FCA67D1E215EA5CDF7FAF
F4A03B3ADC70E8E030DBAA42CF9D97FB643A70B156B885171AD9B0A46A77545E
769124737C044BBA551388D7D2F852F643A8A9C8FAF925C80301C58EB8FA125B
9C9CA9AC6190357D2163E289D996CFBEBCE833110C18F408B1242EDF8227B38B
16EE57A91EAA19E1D4CFB9A8CC25838F9CF20D5291634BB4E51E65D881D3FD23
483E066B2D0CB2862B29D8E7EDC7FBD12E00326B343F6AC581123D98A400AFC6
3A5D1833A73902E8459483FE5B31E9410E1FB3BF82618732F95D44EB4D596116
9CB33C96B970623B7971497AC7B8E493E6438512E558585171AA0BC6F39CF6B7
252091ED8FCE1AB47EC80423384A047BF32997B6EB21FA6D5B0DCA26D977FB2E
4A9CACFC2D95E34C980B10C45E2BD3C34396A5F0D016B8C50CD21979C66ADCC5
E9B907833E2EBE20810A00D1B8BB573DD0D6DE97CEF92D3565BC93A333CC8401
E19F4BEA4482C08888524A2CB6683C0ACD71100B937B2577896DBFBDA3843891
7588CAB3E59FB22C5B875345D178AC3FF3E73470AF85D8641D23C38A11CB71AD
3E4D82072B02CE4E7EC1FF11CA66D3DDF2BF363DD28D9EE550C085F9D118D88E
3365F7AB7CFEDCEDAECAF1284990FEAFE0A407C7C2B8079B2893B6E6BB280D37
3A56C6FE7504B5105BD2AB87A277B25C461ED0A8BF9124C4CDEBC99973D55751
D97A77A9547C21918D904DF26CA16DF9BAFFA28833F988A66AF56E7FE0437508
12E7A61C73DB3C8C771345EEFB47691CFB53B9CFF553550A45CE61B6D41A48BF
26259AD47E681417AA785DC3DD1E56F0FCB89765D3815BFAB2B94C0150293D8C
7198748B17B23410137585B8EE2BE046FEF515A57D4B87248B27210AF7C057AC
FE7260C023D3EDEB25D0564B1E3D9DF10AFEE39B7BBF6ACC5DFA9253BAC1D050
3E25B51A047381BE6DA0B284B2DFBDBF591AD94CE3DD3470C495420807071BFE
C6663C275934BF33671BD55C838F4ABD3541396F5741E280311FB6537C611BA2
451F461DD52B5C0726F68EDD3146F069085199CC16681FED2AD0A7B09F72A4D4
B36D153E5B17838D497D8CAB42412D8D6CDB8DBD1FADA5AA86EE07E447D8FED8
BFDB27007909F5D538637FEE65804AD9F47FD5D09FE551F14295537D6DA2E4F9
E5FA2905FB26784F9F27A3F3F226449C2F05D1CD18F7FE5FA60F8F48E2604F77
75BCC1B2C547639FCABFF4EC3BCC994CE1FD48E705F80B009ACC12142FCEC9B7
C23EE02FD19C327134B56197C411E3E1EA548FB2E402EB7ED23E493C2345D976
7C3966E5053D6DD6940D0780E8B6ABDBB695031B40EA1AEE0B67BC4CBDCE7EBE
0CEEADB782FFA929E83E3A8E4FF1964DD14A2B8998BAC8AEF2D4837251BBBF06
5C283B7C7B3BD08D72049185AE13AD4E96C8522735074AD649CABF3920190046
35622539CEBB6F132F08755C1B55A1BD2E212FA171248D2CF5C85D9B8D2CB5E8
5CC06BC191CF26E8D68CEBCCCC0CBD4D31E445F889CB210D919D86C106679FAD
F3E2C18B85D025B410F4524C49A43297C9CEDC20F96623E6932E86C0BA3D2AF8
649CE52A6A0351232C016B02B3B7A72894853F26465E017991478CD587D085F5
604285E85083D1F2F28A9FDBF61B342523889C729D6973CE3C2DAB27BE4C90BB
20530A0B4DAEB9836072A837B958ACE6FF2F30DBB73E9C482C38E329858F4F90
F3AFBA08F963B24D5ABBFE0FA1360C01D7A7A86EE2C49065C57D49B88B1C2591
4A4D3285ABF6AE47FC402C9185BDADEE7DEB5A5B3D74E6A726A1BD5906781599
AB1BB54FE371D94E6C99841F7C629F3B87495A9430D4F44003429BC673DD7173
47672963D0255D0ACF87AA716F2FD6ACA199792B561CABEDBD124DB68EDEA2D1
3AFC971805B0D3425553198E4683139ED701F1E78997938180606FDE2005ECA3
01E9C8921C9B7EF2D10EFCFF7628044477262F84083720D9B5CEB6E0B31EABC7
AADC6327B3325E51FE58FC26FAB5DBA6EFB6FDEC977F9C78F5BB0972FE7C9E20
161FE2C55B0728D0E49466DEE887E368A835569DB77B22E158BA172B6020F3BD
252C4251765311BCE783A4477F8C9D8D83343E890B83DE4E75722C9F37E4C9B4
9472454250B41613348781C99243D5F8211C9137700FC35A4323DE906C129679
CF5174EF6AD148FD770FA3A749F398CF43FB27CEFC1D9A7C450669651365B24A
8D0AF9FB54B9246AC401977B40002FB861E7FFE8CD78EB15DFC9F7A304EA700A
CDA0ACF34084EFB5664EEB490E5A832005EE49716BF925847F96EC18CAD7CFF6
81352F9FD2C6E23CE3AB0B98BA451610168201648E4ACE57ACF0C301CBEFD1D9
91DD96ECEF36931256D4D1590F31342AD2AD3E3CD65638C71342F27D79F7F5A4
2B5F5DF31302C024B929FF470796626F0795122379B1581BBC73787EC4EC2DF9
FF5831F242B8B5A0FB902F9B2355F42F917799EA0B4A4AE8F1ACECD1339A3FC0
F865201B6D7C9C6FD74427C914F067479B3A4A7FC0E0823871776F80CDEF2140
DC00FD5F6F1725AE16D44B8FE84C3E122D4EBDA4110ABB979B0295FBB55CBA2B
0D731BA72CAF5507C975ABE401EDB52C881153E8228D33EFB93F057E59608234
3A6A9E43A0310316F78211ADAA1AA9954C8C41A1A5AF60249D7EFDECC8DD734D
9BFC4A3D813CCF13D5DB889210B5BFBE8D380ABE4CDD74110BD6BA8C25ECCF84
7827A760FBD8BAF9809930D78834A7D4BD3D43D4B2634395F491974C0FF0D79C
C68FB1A5DE7EF8497F2B33F5B8E384DF0DA98FD84AD4180E993172DCFF4F82A8
D7AD9DC61760E7B2BD1AB594E30D797581F5A0E81AB0F7AF1D54553E8660DF4F
C881B1B290AB76EBD11A36DF260B0B6D0EA7D9EA5958819F5CE03BEF6B59B669
723240EF425160639F65C26996C69E6486A20072EF3ECB913B4A17469EA26895
B88672C6223229686BC2AE4C6272763658D5817D8B66C7CE121320779939BAA3
5DA4704660495819B57665B91A74A36CA64CDB77B59273EADBD89EC9E0D5C5DB
E7249C5BCEB582553CB3BF0BBE6528C63200F8B96456C08FB37E2E892BD48A27
5C4F7DAF9A7AC45BE33703609C7F9164990AFAA86C04ED313ECBFF60CA3DAC5A
5F84F53C86FA9BF1093DE136C8E711C2126231A398A219F043B09A4EE76448D1
CD1C22233115FA0598477BF73995AACFEEA5DAC0B4AAD7140FD31B66EAC5BB97
6C6A780EAA6A8C2E43E8716526220C667DEDB795AF15CADE64DADE150D2674F3
52414BE5A213FC7A5CF34A17BA8BB81DB3F8281ED8FDB17F2A277D6F00284F06
63CCC2F53F489064277A9AFD2339BDD82F37C499E0FC55002309EF81A99546AC
145BE61D1F77A6B1A68953CF0B4C83111333C0ACA51C65D8AF0215A788A7FE39
160CF51FEEA8FAD3E73DCB10B5B684F58D67F31F2E2EEE990A2F78607D3BD3A2
9A4307E51DE7EAEE9862BEFE1E1A13B84C2C5BCAB834B340E7D20CAE32B5EAB1
BF96188DAE424F25644D58AC7AA64820F554116589BE4A4DA677AC82820E7FF3
C960A06E76F6B885F8EA8B8B8F8E8199B574CC1DA889FF2FF128703407C5C2F3
4EB95062AE0348E1118591B41D7E7AFBFCD7410B3E2D1A2C4876C0C18948FE63
30F00F49D80C7A805F78893B50A98F057880FD287DB8D742D6AD2FC443DC0393
0F36B48779449BAC308C6F43FE6CA802940C44AE02381732BEB2B95801522ABB
9EB8EF97A4FA5A370C2F5BC1E1A1E7389A6C02CC74612D764D2F51B2393AA925
84233F45236ED5042F78D8A12F473CB3622D48A843CDC9F7B57E912B68D46BB0
87A3180B53FF1B673365217805E40AB6EB8BCEBE204B9B0479413CD726939724
D06A57ED2FE2E71F14475AB66481F608DE3AFAA767F0F23A7B2417BBD0677650
74F1F37050FD1500CB0A1693A3611BE0D44E6B5DB3A65CE8D0538C986A7BB104
5D70E0C1CF9FBD2F2CDB1E435130296CE911118156D4D3249712471E85A05952
9C7D6101E2D5CA9C18298692BA99DD39628557A8CA9C49883512F8F566028815
C4BB264B10709DF502E051A1FBF642A8F8941EC1CC8821B070E435D5E2AA9E48
5D6E501B2E1E9B6A0671156DE1D5BC81CB52F5C21D240ADC959F8EF56ED5B19C
3D5D52E67CA00E739BF74AE062051E8B769AB888922748D9C85E79F1E1C1DD2A
5D1E99AEC1D37A6200BB12A83EA8F6E0609DA559E0BC5463DE743F5D7A922DB8
E506A8536C3A8A03CAC720BBD2D4042E32532E7FE16982603DF61C5C663B5388
78F6246C40D611C5ADCEA5A33610813DAFD1329992CC000C0980D4B366FBC975
AC1AC11FDB0668DE84E714FDB605A83C3D88E412A976D682B61F780696E40CE9
5DBA0C0E8E9D8863C091D1E732ECAE87CC513CB3270E7804A040BC772497C1F4
984BCA43D126EB40DE81A91908B10D586E66BC6B5117C802962AB3BA69BFE520
A7DCA997A255348EC52BB4A1992B2B5205CFE479D658127B76E48D5A334D0D2A
D722F97A1C3F476C30B350237D82A0217582BD045401BF416404B3FA70758A91
36C372D6D698FFC0904AFD6C06F7680B9140C4AD138DE7B019017F07FAF4BECF
C33CFF111F801E335C38AACF67DDE0217905ED11DF349F54153281472BA8FFBE
6725CCC390DBB87D6FC5793367EC916BA32DA8B964A0751C40846188611E9768
91A2BDFC66EE858D35E655853496FEA6D64E1FC582E77F6E21A71D0C319A466A
665C3EDF8532F18CBE8513DECCB3A0D75FA456A71DA0567DCC7B9DC973319C47
30E532FC9A74A40B2812488FC66A5197A556E05CC460DA5FF8BAA066043F44D1
AF31CDB2328F8CF9DC677D2EB637A72100B74BE22A80B3B4F5EBF30905CAAAB4
FFD115846BF98CD6DD8CC10E1234F448C93A3C6D20B40CDED1AADCA60A7E22E1
4EC3674516DE852115F03050016897C740D7BA1AD40360C017A58385E535F4E5
C64D2851B9CE1348D537A4E62C66B3F03312C0E048404CE30DE9213AC7681B00
F8EAFCB4B635CC9D885B533BEA766332C3E79DEF18F9A17188A92378BD515608
5158817DF61A9B06349337C81C6C9F40228CEB1531856BB4DC6D9E4503E0EAB5
DE3401390F8F01B606C4A0A2C8228F120B0A3172A3C6F19DB81D8D1EF5BCE417
F13A7729E1E9D2F6F9E7E5E0216258CEB3716F09C8EDFF496B106857BA914177
F02B00B6103D5F03C92D88DA2F7B03A4AD190AC0400F1864ADC733AE203D9C47
8995BAB090E3434034B8BF1C73F5B7D0C146F191EF98C9DADC195E944C633A32
9F37C4E74F80FEBAFE5C355AE589ABE186C4DF684BCB8800DBFC7680618C923B
ABB061AEA313F10EFD694DC5204A24F8A4A1ABCAC35A2E8CAE488A1F194259E4
C0A2689D828F863EB3EDCEF9C018C3D8273DA913CC72703228D5D07DB41DE0E8
BF793DC3D2208D208E680F953A7E3555C747173D288BB7D999DD18FEC82B9022
4198E7B0AFF653300EEA13147AB07115E51B64E0D3B325C1A98E631A2C84353C
C41E5F8DE64374A7FA744D59EA520ED622DCA643B101F37AC1E6407B167F04C3
C73E71EA3322A5E0821BFAA4009DB8A3161571C7AC8707594E8EA8AEEC8F1E00
C61B51DEA07DDD2C20AFB10C95B8E02EDF1A225914131CC3FF72242AC5E044AC
2F66824AE151CD823D7994A0C1F3781B29441EE7BCA5D426822D2C8D709CB610
C935C601D66D242C328C4C0501E72B1C1EF216117AEBCA8F4540AFD31DEED484
5DB662E87168ACEB217C1BE26F797A999F4405E08A3B1B6CEA0A5AB043655FFE
7A6D2B00F1AA75CC72516F881E2DE96E4A24A407D40877134171038EBE7F5C4B
D007B915A9AEF8C46F469C9A94BCAFC9DBF0049C85266E5A133C9D7A32C7453F
A231242DC5E3FB64D35DD07F0817E59269AE170C10C217EA56B73B38447D400A
8DCFDD26F25590CEC8C64834FCCD3AF3A939F6F0284A15BF280BAB6E88761303
271274D0A26CD217E3C33D481974E9A2E3A3C12CCB460E7D37F4F37AF0BEB4F1
B71F4898BBD96830A117E52A6C58DD1962C77742A8C0114A8DF554986090C8F9
08F1B57E04C99BF7F56AE69407ABBA5AC554C7A94BFD3A6257B2E234CB31B4C1
9E2004530E8F736236DE861983979B100B84152CF65B52A64EE4FB909EC29BC6
A5B584C1511E1B075B28A6DDB0D5AB623B2B859A6599F5F7015EA65BB8397BDB
7C0FEFC2C12B3CD8D1B3253514A97E55EECBABD31382013A13F6A9C398F80CE0
64524D9D68C58C14993457B3DEC06354B26F70F5F205F1C0D67ACC2654AADB23
BE99CFF68A171EC5BF5F4777E0676E4B070D1A9B67CA89C32EC8E7C5388B3F44
BB1B16C926D616D11FD34CF8DC90EB04503A72D35BD8212BD791920686F6574C
8CD3E4E6AC5F74F992A7870308170E8275B6DC82E1BCEDBCAFA708A1CB6B4E49
8A7FE0D03F4F53AB6A85994BA52B3E689AF419AA0B5D8F11AE5512C2BB2713E3
C0A21FC66714375D7136CA6F57BB4D643B1ACD6DC330FB0EA008B70CBDE612F7
FE3863FA3C11E8A6D85446033C16113602163D500E15518CB4262E7FFCDEFB6E
21673A0EA228056B28D329F2D0D2E0B7D3CDF3F8251430F9A6B6F1EF9E4CE43A
3BEAA7318AC7FE913026F364CEA62A5779BD08F03CCAD9316EA3387F088F6DED
3A41213167FF6F021591F31B1DF029A1752075D0C95DF2C187AF8C97C337372C
DA0B92EDBC45E082B4011D45B50181F65B3EEA68D8482DBA49BEF853B5565598
B6C439A2E90E3C71455321AEFBA84C9BC4093E2151EA61F538857EEC821483D8
0ADE4B8C30E1F06EC85F0B4EFC2554530E7BD287A94CF9CFE63AF6744670C92D
7236CD1D196CD9AD8E37FFACACA48A1066F2CFC5FDA466400A884A755F6AD740
EF7B4F6DD53C128A562261383185DEACDF232517E295655ED363E40994CE92D6
5E9E0B74A706953165CBB80B2CBAE0B1E8AD616CBD10EE7735FFEFA9801E47A7
C0EE2F68E361D4034E462F11982ECB740AA7C0CD7136022F7F067AC15B9A3B0C
AF7FEAB056EA0B7856D540B61473D5229D3879AFFADDC5EBCD699367C5117336
4B6974A923A11387078AB900626C7408FF942D473C5C7F8101985258FE8F780F
E25D6B4ED96FF784B325D6173595FB02EF6F7961CB2B1C94D31AE93D12359725
4F8CD162EC8B6161DE73497A3B48229E6223DDF0AA26AB1575D0F6892820F846
5C657D4BAE7FCF3A7334129DB126E6FED375BBB6EECF58EDB08B71DD550EF6B5
D5130D438067DEBEF176B6B995F5BCC6AAD52C5D46F4B831CB683996DE0AB1F7
7F35E0D3CC2E8374873CA65798FC8A2933368391D95414435ED29603CD2A2FA5
55B1B28030C6FE09A18C88857C44095C704849C51BE330065912FD0CF8B38CA7
E3A0BDE43D8BD89B7ACCCADC65A63B6C9C697F344957560EE2C380F49988C855
936EF155DC60835EB0ED7417CDE937FC52E12AC90B2C9AF9E2656F5EF06079D7
0BF67755EA76643B7742C9903F19A3CF7D41179C967F8BCA4AE0B0D4B5C5B283
015E8279FA7C465140EB6439F66D3DFF890E43EAE42992293F0FB1510238B1C6
97E096184A10C5F2FA017251480069B588AE234E9F41C63BE1A3559F7509CA9D
6756BF79F1D8E46EA8B5592F9866DE92D87131D224CAFC780567FD6009D79DDD
9B4B20FDF6DFB5991B5F4EDCF44D12154D8CB759E3728658908381B7CF04694B
791BC6F54FC7E42FA134CD2D2206519D5369F136EECC1923A0698126AA71F351
368AB94B49F9EDCDECD6B5F690F6307C004A764EF76A128CD8D185158CACE8DF
D6D48A545383F2CA4E79CE949CEDB65B11DADD0E5F1B89D35C673FA2227F129B
290598C4E94B5A824A3C77F969F9D2D92C3B9B65D6D70ADD9A72791AC0CEE330
391693A63445B3F637A9D7AA665F636647654DD0744B5C5DAB40CE6601C71B55
B85217803A77062AB1C827DFCFC4D8BF22A69D6B740972621D71B6C167FF26C6
E4A0358CFD9565A86DAF7E12ABC6F37E5C29464D98774377E1FCBC122E876AA5
BE61F84429FAB7C1F48B86F206D7628D10225EA401DB454BCC97E78F837C6B8E
6B2AEC3E55402533D2B8E7897EDDAE48B51BA147E19D68525879248B74197600
20B6F1A045F6212F950C9406E797B8EFDEE18692A44EB4C25C728511DF1DDD04
E44AD3FD17A2C6A56854206D95098E2350C257A96320FD0A6B0F8CA07C3E87E6
08377A14774CCA28A466731CE5C6AF914E2DD27C8018BECD829A4BB92A217CDC
C958F9C4B19B9AD0AB4B101145F8C7033B87072A685E1FEF63B71141BD4F7164
344947526AF9CB429DAF3A6F5F1E077914468D7DEA30CE9AA16C22939D719503
620C3F143E898E162BD9BB2613725372BA743C6E65095BCBF1639B8A123898C8
8EE816DE564A3A53EC552E6FC201B202375E38E3BF80E31012C74BA904431E02
719E7107248E2ABCFD153A5D06EC9DD693EB667C298D25314740F95D23C8A096
52131BA0DD78BF5FC909CF1C88C7565CD89D8261F9B4CBF2366DA25FD7177EA8
68A48C9E9A9932338F3D9493C77896CDF0E9D58DFE831C8B527A25AE5A8ADFFC
590822D02BB2A5A27271D06D11E1096709BDB6D8C9510DBF277B31B8BF2B8675
50F1125AC8AB538565E06699AE5D68759A52096B795E6062F1A56F65B8FC21FE
C40F4059C2EA3DEE94D79A8E323DFD6CA218A1CB03FCB945FC24376A45F2DE0C
21347A3D89E579F2B1719FBA71920862456BE1232B7450237CC557F3D5586DB8
783F06030B0E5C758F7A279110DC27053E4C104C322503F37A5AB40178F10648
832847767179A052190509727D8385E5F898B7E28470245FF44F8665E0E64656
A9672293E79B4C52CE63ABF9B840B8FB3791B7E90B793FA88EE3DB77887BF387
A5D34D7810FBA44F689BB04A12A787BEA2961F55683958992778F2BC6C616E48
34F3E0647900C97F6A55B736C601B5E996FFCEDD4AD75116CF84F130769D75D6
19810C590B34C69D1E8D01C401F2785D2A358E0B8F82D791E20E916B613638EC
5DFD9187CD17354A6FA6CCD14490D0CC5D1BA6886DC44CE7FAE102A8BEBC5D66
5E90C3038F1388C4604675EA7377F7FCFA40ADD1D8B1909DB256F5A2562A8A24
A32CADD00F7D8F23C67C48E43DDADBFE12AAA768835A77A62CFCC05CED52ED07
652914BF06C774D2A4340FD44C35250329D53AE3BD1258168ED1552009749504
8B00B93004125E6117720C4A8B1DDEF8BCD9B7F07E932BC9F78CD0476CE59DEC
1F215A49782F144DD9F596C7D54D4125A7EA2F92207C56CCD3F735589A89639C
1C7D334B648E11C3659BA7CDFB5FC38E880764B6454A1F461C02D94259128D2B
2D62A29A2C495889A645459A36D8F643413C54F127FDCA68F480E451D986704D
2F749380EE15CF8492E0D4A9FBA8B9100A312E82B29BCE6904D8A98FF866ABE1
3496D34BD63D94048BB3B8F647B95AC6B30A15DD6412C3CCAABE807082C88D3D
0D960FFB6B386EC6C827709C13BF4F9C9378F5EECF7A3A6F93A7033771DF8EB9
CD0DF94E0BD0E80735F683B944814D6D9766A2CE8BF08E5BC37AECC5FF9BE705
D2E4AFA6CD10645F2CC8E86EFBDECA3365292909EE79FE2945983BC9618A94AD
14913C212B1EB6DC9458547598626A10265DC205CD8FFD81E90BCAF211014052
8E6C1C43AB87186F2650B1FAC2C7E3D19BA29888122A244A44A865216DCE003F
C462E0B6D54A30C3DBD7A61B06D63389A04EFDA301519CDB5DF1C384368309D8
8CEA9FA7FC82F9E206998C25F760169CBA1CEEE2EE24BAC582AD3F7DD4F4AFBD
032EF2750ABB9C0D702588AF81E4B2E3C0DB574243F63B1C1767A866F1F9B4B2
7B64CB3D44108711026AA91AD38D69132BB3CDA70EDC5342656C12DD50C1FAD6
1669257C195560586BB567183114C9895464ADCEB27BF54FD908650F54EDCFF0
7F1FDC473ABE8F1453155089A34A007D82C75B81149C64456A88F88F754C3ABF
04145AB9CDC8D55D535F4A2C5E5299DD62758A3E5EA09EB5941387A78C1E733A
92C8B97FF27348B1CDE90747FDD0D1FE3262696586A92E10FB3E8D7353FBAFA3
0925EA9957104759BEA0F7D0201F342B0E531BF23E9A7AF648808E8EB0ABE955
DFF5D18D82DDC9333A06B22CB4B22B92269E14A11BA6A5BC7DECE20029034C88
696774E1F77728A6C5FF3F0ADE1EB4DE93C91DDB40B4E30777C51F35D267D135
532232FE5F02F3EEB5DA8E4B3F9DA87BC7C2EFE6C8838605E18466C60CEAA0C3
C4DD02730E6177700E2A7FA861500A83FA40F7BEECD78B8AE3B5A57C76F63EE8
B1561650B6F11F7028F186EC532EAF53CC61BD37A7CF5B0F58B4C250F283D739
C2D2D12DC6CD0A4C0D96B78BD1D5A73E157AECB9F3F59C0D736946734D1F4D65
048F2AE84F226220DFBA0FBA985D136415D0F69139C503ADFC71C5F898C408A7
E5479868EBD29C9ED02D7C6F159B035A561C376465F9331E5C7BDD1DA502EB98
6520012FF6DC6C558739DDEBBBFF6170BACE74C2054EB96447F7DAF2599EF271
8C3BBE737BD085229CD7C6803C3038B71477715A00DD0FF50F7A508EF9B24E26
424F511AF6500A26ABC849FFF0E9969FC293CBDF7584CDB74BC9F45190E73B45
F78AC1CE5BA5CFE547A418F6F2D6672EC35C10213141AC0087810B00EAFDCBD8
E1317780B06EF63A0629BD9C0CE0730E2148AD363D407FDD3E5BCCFCD042F344
C7D51084FC653EAE2D03C87FC2CA0B9CFFFF0802EF9341DB1544437CE381C6D6
01FA9184D9C324D2DC6C1EDA32F3DBA8DB8B2C4487DE1D8BC06A73F6BEE74975
842D21F064D937C0CBCED5F1644A0251DF9509756DBE4BADE6110F997DC2F715
E7F525FB5F220B626CAB57FFD593943497AC41ED197EEBAB5246C1A8968022A5
49F7843D1C943AEE08B4380D93ACBB9EEC401EEF971A52A9A37AD5CEBA8E264D
2CDD40ECF23EDAC75933CF06B87D87560AB4369AED2AE9A79C74434361628AB3
4F1F83AE434868D71E522619EABE7060CD2981B075036DF7634B341B03FD01AC
ECDCC3C9F143E5FC57520829DDDCF3BB6398CC428C15431A61AD9B26CD990666
1F12CCD45E3A2675D933B378624AE619C10C5A1B5B3D53FD04181E5BC5A9F564
C6E80733A5899A341A0F2DC40214BA058621286E38B0DB3AFD18921352340F30
B983024EE9541B60B2504F5026939356BAC28F9799E784CB695B73016C7BAEAD
EE68B72438B5F04B18B5DD3F742689B3E8E93A640A20363E497B5315EC35BEB1
C19A67CD1792EA24B1EA76528D00E7BD7927D8E091DEC1D7C4D2A17D1BFA6CA6
2062C6A017BDF9C4A714EBFEA809D494D9738BE6D0690379DD5578A1D6E8B63D
DA05A5A24C1285BC91BDBC667B8825B774B16BAB0AC3804EA1B0981AFE60C32A
956FC88F4DA95CAE50A3564EB02BA7ED3769B466475D2430C8EB8F41D2B92915
E9544817BDE8B421840850CCE90FFFD23FD81F57562DF43AF28982A4470A7157
ADF542DCBDC0D54AB4B6D20E34AF499EEEBC1BE22DE322D36E75EE27F5E7C562
7D53F438581E4E1051A715399BBD6EE7A81A77E8123F79C21BE1B66476AAE16D
383B9D93FB349B9BE9964FD7D79D149475724B4743F9907633331DBD3A13D927
138E17A7B32AD4E82FADAC6C3829A77B21D4D2B6E447A751622F19072102667C
7848497110581FC1AFE083D4F56FDBB0B23802C2BAA93676F2786D00CD234582
93BFBA9F6F7335FDFC57213E6BCC72F84DC47B5496C0BB9F5BA86881278EC545
49F50DA04B5982B409F49232A61A6549D974FBFA88369D088B19366FD9AB35CE
FAE60FC97C6B9EF843CD60CE8C69D459B385F7A70A6C3D6D39AB0BDE4E8A048D
E4026A9BFA44E7A34F7B469091B4182B33BF1DA6FCB815622C7CB6D29BA26352
397C3DC55A0FCD95276517788B57C33558FBD942F3293E79CD0191AE8D31094A
A4A74D6EAE3CC10ED9760630CFFF16DBAE0E230887AEED675B468DC2D87B7EAA
B64220A2E61C48BD2B8CFAE86EC0A4FD7D91C9EC9872706B290B8C9EA925AFED
9C9A2CBEDBDF0241DFAD99C35791FE45F069B7946B5EB1D7A5CFCC0057DC09CB
0F19E5AAD0C27B8608315AB055A39C48091E72115EFB1E975595338AAC667E1A
CC0A3D0AF0B6A0995FA25B67430E43D16E0D780DA825AC347EE138DC959E22DF
0977C4EC2DF9FF5831F242B8B5A0FB902F9B2355F42D337F20ED677569C646EA
23E316AEE1EC29BA8D4A7B94EFEA537EA2E226B8B932A195CC8EAA08CCD793C8
4D0A554F270F2F4E4FB036050BA3195A1F79414B141B0B14AC697034E4DAB271
85740F90647F8666CB344C8E76F7F4C0C7733A6E3FDB64A06B4B33575A0CE6AC
3EBC31F70F6B9F22A7DC38D413609014E6BC50615C33DE3914251F0D8BD58651
E982A69181FD852E756895EF6DE53433AE0ECBA12DE954F3304C25B58EBC682C
0331241D8749AEE0784A92B44A2550962148CFD15D76AAB3B0B477436CD15CC1
37F912A27BF2DD9099C4951AA911D6ED91446A154FC90D63580B9DCFC110B375
EA575D9D4E6880ED47780912E961B894CC4A59D7479AEBA895F8AD7A723EC107
1F03526ACB5D36849122443B06484D40FACD60E7A99B61014836249AEF8ADE9E
A917FB1AB90922247D81A698376E1B3CCB9CE3320574FA9C0BE8F9CFE04A753B
82978F6CBAC0090F06E79A8BE6B9EC347BED7AC15B9A3B0CAF7D04ED52D65125
D8A189FBED43BFD6030926C71F72B7A987BF50AC03D73F4DFBF1005237BD3132
973E3F84D6B44D82ECEC244A1F30330B1C2495DBC7E205C4B0C7F6B4221438E8
3705D3D364B37D0664664C6FF0AEDEFB064F00B497832A05A92D139A80ECA6D6
1BE7D20CA221758E4FC3A9B3237A7A988390FA62555A9E577DEAF25254B2C7D9
5E63DA3C2CDB52AA2D67C338DCAE283988464821799ADF110FDF9CC1724D742F
A96456E1317F3DC6793441C02DD6D3D48852EDCB21F29D1E2E8F292789053625
1C4C146E5CDF7416FD53827C84050FAC61D928F053329CEAF29E4B7517D2F569
070C62EDFD1A807757F1BA59AA153AEFA7563BA235B92120F1415BBBD10B7C79
6FFD06A184A94E7EC42D6185036144A7951CD66900870A02A9F1AA05A39CFE26
C85E01BB0E6876B611F1F52A0407A84E6427C7A9D46BAF26F0F972C21160E9F8
D782B239FFE91B7943786A3D66BFEBE51A6D58C4D4647681DCD35D8765FC20BD
EC5407F8DF5F005BD7B52B92B00BCC6C75CFAF4E364C2B89E30AAB7C2E54DC3A
53877991059EA433D8CCB912ACFBF6919D7FFD1E7D88BB01AC6CD2ACB08E49B7
B58B7F38B0F1B9785EBFA634F3FF7824578BDCF9C61CE3385AD3C450A1FD75B3
B086653521EA59D674688BA92AA0919F24EFA6F496A2B92E2D3AC630D8A4BC36
980A386D32D6C6432B3DB333A7E9EA31574CE99C0F28418B2C296DFE6CE79E0E
A5AA999A41B766E1F782C885381DBAE476C6591692A1CDB0E12B57C805A361DE
451E050F33C2070378482C909C87712227627D7AF605B7D3AF95BFB4830DA2FF
DD7B72885B4EEAA71310DDB25B4C0FF879A3149C7EA4BF3934BA496E8CE5C80B
5337AECD968FA419B5406E208A660CC01BB2DFB55A7A33A294E06D4A11739D45
041DF186B9FF4C5915D630B13AC1B73A5DC97379784A54DCE28FCEFF6BFF3B7F
80E6393858778A09D4EFC211EEE8CF57E58D2B1D9892FF99E96D32332C5F3C8E
D047D4CB9978B2D76F44D0544100AE76C1ED4F8C4F2ABDCCCBD237BAD26A3AFF
59171D61A6DA25AFCD2DF53DE1263DEC039A55174FEC9D1BE8A1F41E76F3BC9A
2F1926DE93B0C8EC4B78D1EC5A746FED36D3D120EE99896C2ED73B33E743BCB5
448391088752B866F141155488DFBC1B41E18225AA138C2CAF4CD80F8C06C569
3BDE8CD03892994F08581BCFA58ACD143FC47B8EF7025BE8CD232BCD5CD42EC0
37F2FBC40D668392C6C4646273965A1B450D6BD6382EF284076CB14FF28B55E3
4DD22515A7F9D50BA5186F343C62BCBD4DB6955C04090F17C50BB65452A3BD23
EF802F09F9B0A7315029EC980973994A2CAD09F1F15831B1C735A34241643887
1C635BB1338101BD2C5A73F60ACA5C353EB6F17B5A73EC3973055537AB46AD08
37A494D7116AFDB7FBB6A21D91883FD24A65CB308D39771D6115C80A411CF87F
6C74C319F43221CE3D7D5603406DBA8809D97225FA163EAC28250C858F46E512
32768EA32A9AF51CF57039B228D2E0F33D6B44DC98DF9E51C40A8C5BED244772
630E38F06087070F034AFDD7C1857AD56E75672D752D7044850F140A105BE12B
500A89D236698BC589DDB5AE635795643C6E9B1A3ECDD9ACFFC616EF20C3280E
7EDB5150B759B9B99904A138D7F6106D851EE9EF57171E0E56C50EC8932ED342
7620E3232D45F7EF6BBEDD9AF07B5C2B8E9451F7B0D9A9B8F2FCD7F044DD987D
3D3211BEFED5CA2206AF079F230FAC29F9B9ABF0BCC893430AD3ADAA5DFC4441
0186C13DEC5ACDD5903D90407090366048C6BA0D76B2AF272333EA5D553034D2
85594D9F5304317BFF8BB7D1FF3012399A6A352F5E379EB9F6B1DC127158BF0F
636170E63C5DCC39855184513A412142D1765C3CA3FB1958A73C3141BD261287
CE6BE001178AB0CFBC2BEA2A245ED7D7D4C74279A2A9041F194206EC9CE88E98
709303DA1F1382180B3816091AAD84AE00E784C3E95730B614CC0DF2E3937CB8
B2FD7F15EDBE00EFBF107B423762FC3C63361A12A37E95064B6DF9323B68E5C2
B7781373FB36CFB6C5EADE177A6A734270BD0A028AD634842EE904A5A708360C
8326E4B522D80FE6F925283E10BBBE6A7BEBA895B3974490F2C2A1EDF1DB7500
62533FEA150FA019A3C82FBC1CB7113DC7BA4973EA8A21FF44CF705FF6EDA86F
3081B798E1429A87EFBA371AABEE941409B4038B740400217F8DB427010F6221
7BF23E2BC58C680589AAB82700D2E6F09BC588B4DFD20FCC1C29A1E7C092F573
7AAF66CE82EF666AB2592CAD2ABC9F9AC87055D790BE523FA97E2650E915D6EF
BB35BB4A6BE793D5550EC0902B167500C25328B52EBE69331485934A340EBD4E
3E31C246BBF47BFF98FD884DD681F71BF2E97EF8FA62299083A5A4B3D65A5573
9089C975333D0DAA353AEF3EB31FDB34B6BCC46F930CED8FDA532964533B9119
E3A97D6134ED3A1CBCF0B710CB7813E059A7BB4C70FE7B4D0CD17C7D7E8D232D
15593E70DB1EC9ABF23FFB48E5C18781B602D22171AC3816BFE17510E9D110FD
AFD904A3B13EF7985878A5D4C4EE763F09C836BB2FC7F50ED9863F267510C3CB
F26EC708B55AA98EA42B8C52794CF841F8CB64C0549D6106CACDB512D0FC962D
D2F684FACD255314DAA9B056FDF7FCB55D3880FA3D89972C7B615D614AAE189B
BAA34E865230D6C24CC1FE8400BF4FAFC9CBF5C5044E8CD36B913B95E1725721
E042970FB72C938E537076B5533F8AE4B88CA7CEB6240389228C63E708CEAE09
1C3983E57587C2C318EAB77D439DB09ECBD676D2E3EBC29AEA39594122CD69A1
042F720D8C4F2F37F08FCBF84AE6686EEB06A17D476E9BC1289B35C8837EAEF8
674DCDEE03162A3AE7E66C4979DACD3F5A953B73FE4FAA75FCD9F22D2C240E89
F1321C6A32505E29DA219EE10F38EA3DD018063DB7DC85457991722BFF8C5062
767B44415FBF02A99A009DF1B99098B6CEDE3EE42D52F92BBD0FE49228B13400
DE370AFBE0F9C38D6D734CB41F41C89025712B6F3C07B6A2E979DD587A0C5F19
0EB7060C9DCC94575846A26CF4E648658527C2E1407C06E4EDAD90FCF31B2550
F74362384D7C96E8E180FA785CB6EEF3DD45C42A29D0F02B89A5E11DDE8FCB50
7E9952E6D89BE4371F7AFAD7198F13F6752484F58CE8ED81AAD7A4722D7FD02A
045FD7D5CFDF1540F18B8B7B564089B9A7360E15E46E0B64A13F8988EE4BE864
9ACA7FD99622E8CD0F86A21213FB3F690F185CB1C35D6C50B6936BBAC030C2D0
9A2063F8EE2D9ABA9B274230462B783AA5702A2BAE292FC39E0CA3528B423705
58704C103E464E9A0571680566DD77C1A257F1712B976A62D982777906D59332
336F475EF2774C721BD472E6EF33A6EED405CB7173F1371A9CD1F931EF2EB67F
FA222251E3CB0BD8EF6B69DBD8FA9A0CFC2D88088C683172F8E674F6DFC34E85
EED54A89FF2E574F3C5DF625DFE33350D4051838C745A03B7BF4272254C14B58
2D9203A664F1ABFBDC68C6EB5DA2100B1CE7FEEED0E6D607AD75135ED8A6DCDC
7694C24F72828623E396AF33C99433BDC6B2F719C2FE04FEC7D1BA458CB5EA5C
EC447C34D125F12A97B95FF290D8FC49C1BE0BB880430E771C5C4B4D30628EF7
00CCE641F91F7DD6AAD816BE84FF0915DE4AFA3AE138956904ED43BF81D91FC4
8996C83BA1F887551C828827E953D986494B6329C425A36BF0AC12F934034942
EC39FDAB7A8DFC0B839E6F51AC738EC9D9F08E9FBD7424FFBD2CAFB6F4DC58BE
324A715A01F6117E2214F6C9F18B47F79D2EF03120EDDB85C690201C218057CE
561CAD4687459ABC531F9999905301AED9BBACB23E600779D354BCD9672A9F60
A1819563BB4C077DB1924369C4052F24D0A6EA3D2A09BCFA5A68262F473A7590
775A50BA9338F84D428D75187529FD41C7792F9BBB2401E819DFD0CDA2388C44
90263C412C392B48A92C8CD1F091BC2BC49F5DEEAB9CCD4AFA88FF6BE2C5BC16
21D0544A1D629DF8527D995F76BDCF4CD8436B041CCF7CDDB42A57C0569A05D8
555BB63A83C4B469CA12D771DC7E88DD85AE572FD16D553FF490A88816131430
25FA5255EEDA6CEA2DD722BACEBD9228D4812ACF89DB776336B29652E7633008
7624428D4435145EE9C20AB3D6C44526CBA23564806A47157A8869A662B48363
61A06FC9B7B18F563633423E29266BDD0AE21CCE4D207BA12221EC01667DD893
8D16DD17D9053DCA38AFF27C5BAF3BC98DA0A4697003A36F4C8EA4B75405922E
49244F6BABEE89F7342E694BF5A2E844DBBD615AF4FA8EF7895421C5ACA307D6
AE9C482590E8E42AB3D5D467956960C7C59D579E049A2064140B479CC1F43F7D
33C1591F344872F23D44D9D5E9528A46BA5F13F9F310C32DB99FF35D0BAC405B
D4ADBF684831F776ADCA6542736A73C196D86121CC42D665FC0214518C7C81BD
F2197F0B3D77AAC22B5620CA5E7F2A6AE9C67E12F1DB4CF9AED3F67BFBA198C3
E87E5CF07FFED40E7D0D0B6225CEEEED76D6191E27779176EDD2F6BF821E6F9A
5D33A94523A214F048D47705A079E7C728D8AEDD3A28BE3EC72F2F740E341924
11F75A2FC195F01FB3F5BB27D13264F6E6124202C566398A247C68888898BC25
AD6BD390F204055081B3A69358996BFF58D50580F3A44808E1C50196889DE6ED
E907707708490F1CB979DAE98BF6A146DB110B49243D0D8887D83E89549B0E40
E7BE9DE840C432EED4C407805C6A8D6699CE62541759337EDD744358AC4D44DC
CD7101C72EBF924C51BACE8B965E69C00687C7FB6725E6B82BC18418F174A191
AE00B9974A3CA201159456B900EC512E1E3DCA950F916D3D1867C77B607EBA30
0C4EABED29261949E0CE6C88EB158CEAA705691220540668A479D049A00F213F
E7FBE3BA33D3D89FFBA45345069F8C293BCBA7BC7014A270E83C33E2F17D31C6
7514231C5428222CC84714FD2BD499B5CD7118C617DB552E189E9CB60989C4DD
C85AA436FC1EF283AF221EA24B55E343DF61850D6EB97C0278D11894D97458AE
6911590C13DE993B1F43DAAC4B6883347795B92EC60F4B1D8CB158E18DEAC89E
8D586A6A04F5362AE3DCF372893BF50BD235D3527D6776202754C5EE233B181C
3EBFE2C241E5975D0578F7D8E546FEE01241F431B288A576631D110556C3EEF8
77F4101DC06017F4BB11FE386979D5003308D55B9B5B448F14451FA1DB2F8B29
F06267ACB6C025E55050FEBE2E73D67D2B157C47ABBA5ABA3761243E95AA319E
DC872BD8F993E7FE73FE956B26C0FBCCA1997109EC9E9D53C707C67D4E75BC5B
6740C753DFAC2CD31E9717FE5EC1A53809393B1899F1EF14824838D0EFD6CEF7
94D8D744D5F8BFFC88855A83E7434D208727DD9B3210EF2B0CCDD2450FB6D488
0CE655830B8E848C0EE2A41ABF7B818C7A1B8A8A538B86243D71695D1E69240B
C8C9BE61CDB95109D737E62B831318CBCEBA85A9E4AA774F79323D1828129441
21FE428DF2832CCFD67BBEC7948DB56CD08CEF6F2606541EE7E2C118AD6F87B8
AB07565CD5A6F4F4D10BFB9B56CBE98C9474D611522E424325ABEB4CD92CF2B2
3A05CB52D08DC44C0B1829AABA4F7FF07CC51D45AFB01CB6C54C3C24A9F68858
8ED5F4C8F79A7B34F95157B8466ED870D89C370ABB08BEC06E502E73630EF1EC
F3FFA46CF26E21A58135FEB77E5954B43806E86E68C0D49E71B3A0C4B2DF7A32
218AD9A75B5685F037E4241077D22E1015AC793574B7F542938AAC88A7374C46
1A680E1E2A17922410D68E9F9202CC7C1ACEBCC6D0EBE27AE94FE6FC1CEE637A
9852F9CFA5792BDA1F5867AD8C1DE1A9EF31C9EBE7587FBE28EF9CD679926BAB
1D5A54B11AAA60F43C7F25ED662F8817922637B7A14244FC768B29BED84CCC31
54226F5B3F8E676925E036C28FC83AD71C58499821B9F5D2ADED5B28FF0A98C8
06DCBF0FA5E1FB2B14B1B06F482E60EF278617756BC83DA036A32AFBD0F368BA
AF8CFE67AD3C6A0A379A48EF00335FF236445F7B821D8A6B7518A968769B6CA7
1A4F42289D220A5AD3A9CBA914A7896E8465CEC66D805485D619D58F652C4D29
72609F37030BC75EB4EE4A1DACC74B4ACEE18C589C258350CDB97056F9E4E761
EBF8383717D8BA1B9F744BAB4861AE2067C2B8460D3C70F756C4EB5401D7804B
6A86736CC29E0D353008BB203AFEAD6903F7C1FFEE5049AE72BB217DCB7A34F1
080D68C736DAAD58CA231074E6AE183D5F5646378EA8AC28CB28F7FC702589C5
5CB9B89A832F3F72E95639D75514B82466B859CB403FF40850CE4D6237D986F1
C398E79104F7E2C9A843B9756191001259D79882F44D864D6420BB8EC011C402
F4839D60D6C62C9535D0A31032730E5332127F52E1DC40D77BA8C5E4B1C8B2F4
CD6BDAD29D53AF3EE71A2CB996E1A51C0ECA1BA31236B352180FBE106FC89664
578CFB7F5A06CA0078C348CBC3B59DB6D0D3CBC645BAA1F759CBD3FDDDC098FC
0094C84E1F619DAA5D1250717879824D5884B438F630437BCDA21601FF03320B
DD0156E01C74A66BDD139C8BE8E40BE6266413AF01A67893BE502C37472FA1BA
A73075655A0FD2759478C1CCD4D2E7AD220515AF81A5D9C6AA49051A26300FB3
37D25A571BCD02DE0329040CFDCEB6B1829566563B1F2AA523BA4ADE32F7868E
25862A709B5D61A469F4348FB0CA9460BAA2275A7C7459D83199040A14CA384F
71C68DDF3F3F6B9A76F21E9B8E2080C5E5FF56AD3ED6BA7F318D5164B53E1608
20A8635A5000549B365B946672183C1992E6B80761EF5695001E556CD2C66591
DAE5F287EC6CADFCC97CF330576AF75C2EC3D559F3518A8B601D469849CEBE21
36E6169A424E87E139062E1FC7DD36F05CB749F9E62A54F16E3AE576BCF819BC
3BDA1F7DEA55B5CA6EF090D22D3E2818986B9A66A74653872609134442116768
137B9EE2705BBCEAD6FDE819C88F8D46E5F96F31B94BA23EACEE78AD2613B354
E16E83966746A5419C303FA10CC29B5E39B1E1F86585137E0A2DEE05075D361B
E7CFDC237AA1D0869B9C82F756FD92BD49C09E106EE07FFFD59024452B920BF7
A2B9C1DDF06616422EA37224876A246CA6547847EC41D17227E09A2EC9264BBD
D46CA1408E91BD7AE6653B86F34EBBE9F402DB5C183C30C76643B17716515C9F
2D0377A94560B6100BF131EEDD29013F97F3DE1BCA8228A3C6CF61E67133C661
78544CEC4EA65BBFC185237364DFDDAF3D46BB2F3E708F3A3DA37699BC49C21A
1529C6A6AD649C31511A992D9D385357DEA62F66429C9D50DE9048C01E8524D1
6765E06CFF5C1E00653AA39F6A32CFA097B4BEC5E7851AB910817FC49FAF4A65
9C2C8779E6FF88BD52F2B7AF0F8861C716C695A733ABD5BC912122718F96F2B0
3EA951431D5EAF6F19BD9FA092BCD67121185E40A0D9A156451BAB1711797B68
67B608FF6B63B0794CF6831EE781BC494134A933D31D042679D28C16A3091EBF
8F756C1942E558370F331C6C21A0CC72AB3E3C6AA51E3BCA9DE24DA454044555
529E28F363199B4D008DFB48DF72321B881A68BE238F946BE124556D34DCB392
04555B4A797D3C49C1F2E71A0205419E373059890B303A322F458CE8590AF302
A949F9F72187660BF917DFBB56A8A17AAEC5E39651461163A3D275E34BEF654E
176376E5D509D2DC94D30E40DC17BF2A15A43115DF2EC41F4AC5EE28B1C82743
41790022B1C5A27F0DCCF42DE533C79EF67AF35221CDE9FA3B029D05562816AE
D2C7C50271C47CE9F5B95F45E2BAB810123F987ED314890D7E9144C6D4507D0D
F55E41278A6C6B966A96C25EA545FFDBD072F98F932C44E8A8A3963DD5E2F7A6
E04A3460774411221B6268AB9032CF01CB5E937268C26380B03CD80261D5EB84
20C6AE2930D1FC7B8FD12DC2E9F472841614F7C7223B1B29783D9E67A5386B8C
A7AB29143DF12D17086FAC577FFFA8226F10BC11ED707A5FD20181D30F159E42
C2DC1B7AB8EAEC9AB3F0CFD88B676701F9DC63D77C62C91600B0F2143DB6FA09
8A70CE5BBF24D0645DB9CBA1502F6CE4E5FD0B63772758D86D88453CC51A3F3F
592128C716492AEB10F6F2631C8AF0C8D05D9E3FA05C0864EA87996D3126546F
2C33CCCE84BDE6A894A3A2291CAB997942759F3D104C34AD594BB6EB18800064
A167A4FF79E5AD6CB717F442E52585BEC45FFE2BA3A35B0FF30D5254CE96D245
E3D0B9DB43AD69A1B4990D8EDC3CC20A43B8004B9FB94102802866D74D8ACDA6
E780F31B0FD035B353C084C34CFFC7511E05D0A1BD44AEFFE4B3356EB7FD7363
1507125F0E64417074570649EF296598EAFEA543473AE894B8F630AE93A4C30F
722CAF747ABE2C67412A9534044B87C529C18BED2A12B6F8BB3885C2E4DF1CB2
2C7211ACC80E39698BF800B3D2471DEED610BDF000DE1956A95C11966CF7056D
815CA723DF3613F105203AC8DC5177AF838D7C375E17744E2B41960835769A23
128D90F10016374653AF13AC725DE145584C2CBE863E460AA9FBF66F3FBCC293
D0A0A922AAD5673CB1FDF47ACE6D50683ADEDCE1A90C257038499466617F993D
85BEDA3AB8CCFF7BEBC89A9F1C3DA0D9C72BFC63780B537DB1D848BFEB6694C8
4B070F8D4B52DBE9BF27360AE8B0F13F41EBA517444AB89562FD0F7813A947DE
DF7449FD4A261954E78FD17F08C7C4B92A11EDC335D079768D06C6F112118DF2
8E6B937611C758767D3169462A38A3855750A595EF431CC8EEEFDAD3F370CC3D
63967FB50BD091B6D72343FAF9767F01767B4E95D989B962FB2502CB3ECFA182
B52C9328F946A8AFE4B2B276CA7E4C3996829CE0914D9295CA151E368165D4DA
5CADC9AAA2A9E2CCB41250A22CC9006B517A3D78C0450F8C948A917E646AC57D
D6E0D1D2299183439996D196BF514C076C5C0C92B8A4B1C3B3033E91F8B5FF62
5DF1695DED98D8A3AAD0A599231CBF3DB7ACCEA3AD75C546EB89A19C87D75508
7BBA0C0F86B32D96FF5F72585A64CADF87B4FBBDFEF20B5556B672AB4B1B89E3
D03A5613D2480C5B3F78B6C9BE5C4A6AE24D0B8FE91306265AC8F26BAB9930B9
7F7A3FFA5028BF285EAA8B2F2DFFDECCC553EA79BC646353739E287418F9A371
691EAA8C43DAABCA032D1DFB625C8AD55B53F265565D04B5D72D7EEE28E94100
28624D3F60F9367882D79A2B460A7114E13F2201B8136840C3E65EF918882F58
50EECEAC779539E467C0CF19D852E7D7F4AEFD3430ACB9742FA7ECDFDD65AB04
4999F84408BB0921AA346393F5C028BACF698190DF3CAFF9AE3CE36E81D82E73
4C3BF3ED6995BD33CB9C54B8A1595CF98AED45BD9CC0EE01136DD8966C6ECB8D
2B7B2CA5FD0891F2F9F3250DF19DCA50AB4475078444CCF57102BA803CC5546E
549DDCA165392531AE309046D481ABB8022E13C0E2771665151A1CA3A096464A
CDA2092835737EE525FBFA5357E066DCD14CCEDF8ED9653F6F8BCA6DD14C9A36
1A7D99EB11FC6023D759D963FC2E5AF4016CF8127EF743DDB0933BC25AE2BEE3
9094AC949912093B7A32F44B7CD451E1CF6AB15D06EC882257E59FF2302A1EC6
8B119A5EB4529866DD733A26163E0A16017EAB9C09379181778781FB0072250B
9B02ABFD99A4F877FE6D6043D55F98A3203D5C11FA27EF145706D822E2889634
AA18015EF8E9F24C8846C406F04B4F043CCDB9E2F7C1FACA7FD1583914DF64B7
B18649C1FA9D6218005D52CF1FE925F223CA0B62EB2B6D868F83FA9EAC144964
40D8FD3480C7AF8D0FBCFB679984C2AE76F36816CCAD1D58E1005227B5918F98
24E7401AAD3DB18F25E67500F8A65B1BFA05DB0DA3BB276FEEC64F828F674EE3
7EE7372C07C1CFBEE4D15779F8B8AEF9E525A4393FB66F981FF9642C02344C6A
43FCF9B3A667213405D803E457421376BC9D9BBC288BF424EEBF53D8235C1D3F
2FA6389D12FDDC1A4EE361CB40DA917CA09BAE2A2AC84F214B1C8AE35605F433
1235DD9A575914FF199086C5CF8F73A03CB3A33C07065762AA98C082AF42F62B
669022190AD18637B247AC313D32B37AFC223B6B699B185CCD432877B26ED60A
7386846C9400458C091E2E1852A7C0E3E366EDE4BBD6D8B9F3C09998C6F21722
CAB1D4179CF09D4309D277C866F8D73A337408996C45D56F6459727F313D6AB4
6CDCF2F492D2FB129F98295A88EBE4EBD35C3D964627EAD9BDAE5EB0EFB84EF4
D0B54A874E2792A201E67D70DE1E4EE4DA0863DADA358DC6EF1849C2A9CF2889
8A79997F3E1EB630C82809CD117CD110B9356316E5204EB1468AB40A4896A237
B833F1ADED2D16680159494B17C8D176FF2647D3C2C81965FE5757A956B6AA8C
7DDCC341749C614C030E50F50A91D09C41A745BF43A5F1AF1822446AB162AE5F
13FE4D506E03C3CAE8464899BE1D1439B9366212A35704E3FEC341A3D54EECA4
4F924AB742CD1457B36BCEEFAC29BE22CF5A5C51C79CA4C756B64BE27E2496B7
23D07065A6131D779E607BDC69FB30CE400C3CAC33700515EFD166F1FB027FF2
BC2E45788D3153E0A35C2AD9BC423E9CA47884F44728EB56E125F10716EBF808
3DD0643DC06EE0502CFD4D93C520AFFFB88C9C150685C7A6D9D7E2422AFD8F84
5FC41164BCA851AC8286E5DCEBFDE04773B5C86E07EF3B183B5E14C074368E58
9E296666F0A3C1007AD3DEEFA8C5B0E8BE61EEABA539ABE8CED22851666B910B
ECDA02D10C3F4A5ECAE482278DBBEE07CB7DEBAB58954D8C7520BE415918CED6
525353F897E23FAB2A6B480CAA661BD62DDB9C511722B8B56FDE406183EA73A9
AEB9E853907D37F77B9DB3297723CD3A1C40AFE093FF60269391A91817D94C24
E0930086485834F9AE46BDAC6894AE5D98D63DDFD75730DBA6046E7E114628DF
A95C7A008D5D6D8FB24D5FB296A5D84962CA5E548F8D5762135C3AADF46EC842
020A14FEC1CF24C1ACC8198AFFEB46188BBE246F07BDD8AE16FD728189FBA3F1
1AEB90ABD3FB4F76F4577554ECAAE133DA230D76136F96B61F6BA823EFB23EFF
1ABA5534DD140CDD0B49AB77748A4BC5729F5419C3F60EEECD7742E2800FDBFE
1C66C41EB027C3D81CDFF0C9DAC8DBAC976D3E14544332F3A82CCC808F580F60
98314E58E5B4D69921D4A03F2B020BCB22C5D3B3F4EB5551490B75081D465ADA
A7DCE657ED970F38746A1E23C0AFAA5529164B3EEA00B54005E46B60BE38B180
FAB0D327A1CA2973514000C92CB1674CACB98E05BC255AABB4BEE79BD0391A33
0E4FD2ED2FEFC52C349A51FE3A936AC9736FF6C1184EAF6959C4C7B436374614
5808C1753B5586A228D6B9D8DC1427FB234107D4A194854AAE0005D6642ADD01
5AD9014D79A3AE55DDA2D43F0EB9AF51AEDE8C7144E7484802A2C1AE6A5C182C
775FD8870D2A5D74F9483B510110432C07F4AE21DCEA2379AE73F6FC3F6F2779
7A05E3F75801BF5B2AE017CC46FE08016C3D09326D94BE966E5E668516AE93FA
2A4D12D0F3E75B4DB80A92B778B80D65B5C0F4E3BE4DD60FC6804E8A967D1EF1
D33D198B1487A51A8BBC607D56ED0FAAAAEC363A0FA9AFC301DAABF2295ACEDF
8558F47C61A8EC0CFF65BB3F8EA8CC01B6818CFA3D9BA575BFDB8BC2831EDD41
29850497144F258C2E2030D6C3264D61AD2E84B66022FAE0481E536855BC2F1D
B09726E53DD2BD4141B13839B2E4E77B1FF75691D9BB637D430A106452618ED8
1C9D481DF2842A8413D226F0771A69BE963019667B4A9FB2E0CF8369157694E8
F7F5864E756D8F156D1A4784ECAE7A1A36C24AE5933AA82A597A06F014EEF664
33788438DF91A34F4593E58F1727D2A813FE3D120E838D98A3A86A7FAA1484BD
3DEC38E8ADAA024958428D1E1C0F2055C42181ED00F00EDA39C411D8054AF038
D6DA8C88F8203FD51350A190E4CF684142BB2C3DBA46E032F7AF2DC43AB8885C
5B709E9FCEF0CE69FCB0033DDE6EF2F4C7B6C31F8B12B80D32A7D71E162E34BF
D8A8557F71A981F6F36CA5654039F3BF6938C82CFDDDD247D2AED7973DBC6723
F474F25A89A59958B4827CC9C641AAE5CD2BA5DC31A365818E58A8324E4019F4
F48BCBD4B58CC240E573E10F2CD344F1751B89170003733CE02B2EF899D3104F
FFD684C92AE497F6582D18666138E1B064E55A469D905ABB2A3FACECEFA314D8
5D8AA6AA51E3E2076826346A6E63B530EBF55EEFFD0E82DDE9BCF721F946EBF6
DE3AB2E7D3C9DA6B105C7916EC810BFAF57F9BCD12F917F93D84F2DEC7742D60
3D2498BEA83EFE77626A470657DC1335A4457200CDFBB7C9D3126C67DED185E5
68F5B3E3F039B4F7B9420DE2CE7C5D513C772B24582E5E48A6230AFBDA866D35
503E63EC4E888ABA2E15A9BA3988392830BF34ABA2D14858114A18D84CE79FAB
29F97F4D474A5985273B3426116A7AA03B8CEE57F21977F39EDDF5588BA387EE
F02769CDD9FDCDC670D7D965EE4DB5EA097C1C9CAD9FE8E08866ABEA63206A23
239EF03D5850F8FB8EB8DE048AF1B695A351BA9BA36062112B5E580D74626912
5D5F2E8974FBD8FF1BC3F81BC29848A5BE13488E7B5CAB50A2B0CD88CC580EA1
859F21AB6A7E5D09FF974286E5187CA1DA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-BoldItal
%!PS-AdobeFont-1.0: URWPalladioL-BoldItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold Italic) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle -9.9 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-BoldItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-170 -300 1073 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB24E0191A1F47407C307
6F88FE477889FF46B2040A07FA5B51CBE0AA2B3C32F01E94328E206294CACED6
72C03340EA47FFADBA7ED8BC1B3CDC7C625A2C39D84F8A622CD4D90F40C32A2B
1A217E58BBFCCC3080203B9588C82AC9E00C6F71B89CB54892769608CBC4E9AE
9CCF60564A2AE6488D2634E05EE61DA6EC0A64113B06ACCBCF2A44D0F90DA087
CD8EA2943AF7711E67DA772FD9D7F72EC8F877F8096C4C6A650BFBCBC6F6F90A
952D23A2BD3102EDEC2A39C68AE390A02C884EA11F5D230DE621C936124A8660
CD936ED3439499C5F1BA747874B12E1299AE30CD3CED085605B6566F4CD1DDEA
FED661F00458DE0D4DA174E06FB2B789A47BEF2A35FD424DD724B681D4976057
2145681CF876B1423589E7EFBD0AEC19F189D9815B44CC62654EA0ECE266D21E
304871354B2364E557FA8E537B6D40FB78A993A87D656A92DFD1AF50A5E58F13
0FC813CCC1A5F39D6E4234B65B4CCCCFD37BC064CB479720F6BE5473A51B8C59
3ED529E08887EE5DF7C182919E88BFBE1B94D1F06BD9556F39902C1D204E8A81
D9FF8DD23D7B5BB80EC4B5D56C13B026ABFA84A3FCE1A658A754528B1DEABF86
0980ADBE60B21F72E831B0816FBEEF4849A56E220A0B9CFCE3D4E4ED70E7F05D
2F4CD40EE76DFD344A0D0506B1129EDF97AFAC3D3E3F373A7AD522B510B77B5B
DDBEF5EAE3E83BF84A23F32941CF740EF125412F742B21E3558256F3C8A4DDAD
18D487BFDDB797A0DFDDD8FAD587335DF321EA589164F4AD0A16603F6993ED36
070FD56FF4085F7B3D06211076514E28248456919ECB434F19746B9F22382567
611AF536205FD4A77E59DB0DF9CF57123E2F6D4D4DCFAA233612794B5170764F
DD3A71C8D84AE2A56F4E100E463A7963A49C763BA3ADA4E24F54E494B8B6B996
29734A61F9FFADE246BAD7DF925C8B457D1327B3F926A5D07E71F352CCEF1871
AF930D8CC9EC66930E55B691D18D2051B2465E441F6B621865797B9897019226
6EB035CC39C8286090947F56B64264C3A44FEED76D4E65D21D7BBB6C9FD03621
49B42231B9820C7AAF7C7C845095281D8DB5E612935A5029FD78E23E35AAC22D
64A78A0997962F15B4FF0502157BE9B017A197F6B81AB5B39419480E8C4DA16E
8F425A1943D5DAAF8E7E4BAAB9DE55C8366B7853299DFF59BE6C8E8A7357B9C8
6BB64C2A8D1A532A1EBD4C83EEF551583D9E576810FD5239C9CC0937BF33358A
AB830AA22F967BCB97046EA3C4A9A3A97D7C031F9E88C5597C601BDCF84562F7
7158BFBEAD3AB69689DD74108187979A7C20DDCA027B92FBDB05DDBC14E325FA
922904601397AC6124220C280E417BCDE241F0C25111E40577DEDD7EA8BA95C4
79340B9E18848E9E29CB018DC4EB29885A11D100A928720A707BA004D9543D10
459A4602CFA5EAE2D3112D43FF22C4723429BCD9396E71104202FB3F677DC4F3
98E82228CEB92CE0B1AE3B9CA089F7320D1B9BA214E43E83C1FCBECD57341203
8C6FC92E4D81CB7723A14C83E11A4E961F1FC9879382F85EA515D665F6BEFD47
7FC3D2D0497A8FF4B33A03BB379BDFD1FDC40E678BC42FB3835475F099D2D6EB
48B5EF659F1892A8C81AFCA148704CC1313134DCE13A19A62CFF57309C787261
2078DF99DCD01E21B463D183FFFDF1A2886838CB11B791158E1FB4FAD8037E21
A7F5B55FBF3C58A2E07D021C172810C3F47189A44A0757EFFC671FCFE41CDF60
A34B00B0F3D3BB5F5E49D5A65A1BA3ACAF2773F285C68918DBDBC486330F3CF3
E6698EE25EF3C6D9BF8BC7619F72502173E701707CAD347208550DF890CF5924
BC50D349A1158B380A42D3AB886A9197C0079E12D9A79FE6FD1DE27FA72987C4
64D5A507A40F2C061D1DBBC2F811A66CC932D2853045D5A283D7A2C7CAA60C3A
169EF906CD2273BDAAA73476CC26A32F37E719C0931FB872A42344BC8487EAEB
01B65023A6FD20406E7E21859EBC00E35A3B1562AEAB09969FA69DBB37E42D72
C12127C53E8A3F98100A686ADB740C45D0CB167BEB8857F1E0569166E2F919DD
8B77973CB68D68E96228E2CB7EECE505776D90A2D1A68B51C0B83856E9927C93
6DF5171FBE56DE145488C0306C6EE589C2E71F0433B9B82B34F3A7BD9EF3FABB
04B5081C33120741EF2F23E7627CFEBCE03A8E365AC6E14956714282AF3CC8E8
2832A07A9B319C38D4221576C131962BCC5728D65B83DAB642914AD1214B8BFB
43159501BAEAB263FAF920D54668BE4E014A9BEEBA3881959D8D90CD5F09A875
749C161E40A8A8AD8074AABD6A06EA11E40F1F4F4C6B43021301D083753323D1
726E22C04895627F0054CAE4FE4CC5F070174140B9901874A34719D07E1ACACE
87C1B92746E8267FA78B9321B7497195A0D094FA355327A582968548D1C5648C
BE6BA93CEA0DE409FC319BCEF75CA4EB317A628F42F7EFAF5804FF3858934BF1
C1DB0CDB39307FBDBD27D9816175D196832A26058212ECF70C24F5811B53C23B
795EE7C1065A9134548F0CD6F17EF1C500407F6D442E92EF2E00B8DE7AD0C608
DE99FEE68796482566340746AE5C0A6C9F3A8EC0D2196294FE173EA579ACDCD5
CEB4EC0A94C48D205EE2D6D31BFBFA40063D732B10D2F6C24D1574CFB0D2CB7F
A127F49BD2B5ACCF7ED80CEF4FE96FEA461C2016D6CA98017C7C118D8C67F71A
4BC3C8794BDF57340DB70968FAAED1226A949C78D176733CA1427F04C44F0BAB
C60F72CE2CB794D5D86E1A0419D9579ABBAAE7FA181E97431CDD0935FC9D12DB
A2BEA04B1D113B4B133C58D716D29E8FD7A27BB14FF676F11A4C05882DF30569
D86C3FA13E9E9E4534AC2F079A5A8F032F938B6566BD816C96D704A30F5494AE
4D6997AFC3E05587419C70AA92193462DE726263DBFD9635B65219626AF346FB
D5F50796B79DD498E95E04A726A8DF1182219104B22197EA041EB4BD5601CEB6
D079B99EB874ECFEE099B33FC49D08807696374A4A48ACA63998CF7951A9685E
7147AFD434318B94021A7E5A5A2381825FD25359A10F84AD9A18706CC30F6EC6
119F985CE4E5D6AA1C6F813D68C3D0E18DEC5682F6460C47DAF81E1F113DD425
6BE6504185EAF8D48F2D1C7C5ED44E2590664FBDDC6FE2646B6845D9D4835F7F
3335EA5EA1DB1FAD71C69F5C5C9D103BC205185742394D844F9F61FB670F5521
FE1FEFC260F3E926AE8AED5EFC844FB1DAA67F3D01C234385631BAE78B35812E
C2C51EA9141331BE35D1D5300F8616A61EE8B8295498B68A580366A8C69EA9EA
BD00CEC74325D3774C7543429267999EA3548B44A32209CCE1580820D677EDB4
7989E6500A60AAD8F7A2586B5802A7FBA50CEBE2BE28FD7217D1FA47AEBEFB15
1CD51F0DA2939CDF27365B7ACEE394F3CF3AC63884317856AED58761B895C90A
90363CEA58713D3C04A319915E39F67EA9F53DD07FBB85F22467706177498E86
B4FC6531AE59AF38CCC7412D6A8EF558943C2F421EFFF773BF4A58ED51F34008
CCBBA63934FDD66B4FEC484F1F4CF09CE126AB8499BA13E2668B1355664D1B4C
FCF075B51DACD371F042850047DD1E00689644E9A9D6E22330BF572FF872DF1B
56F5F504AB332FC17EABD6E425CA195445145749070919A734F426D447CDF8EF
DCC1C8AA92340FCC7F2ABD44E7DD2F65C460DE6C53A811C8DD08009B214BEF8F
61627487113ED4682C5B84F61C5C898692358FDDE23DC9E3DEF6471946061D0D
B6701D0563A372409085AF0FB4A3861C67A4552C610497D442E859EE91706867
E39C0E1A56B6CC0B676141CE02A627B76742F98C1530A3598F35E26F2E8ED5D8
A0B0A4EF950F4C973976EF232F76C9D0C0793684D68FE95129C32EF4996CEEBE
9F1EBA0D3519F878064707A6F8DB91E06181F1F3C0E9B2EECAA01EA5C1DFEC66
81A6414282747163A723A9E71F504DA5D447AFE8CFDBD88089F2352BBD43CB81
03899EA8517AB8C18737EC2FAABD102F11FDA4C818B0A3812B714D9025814369
FE71C39B0EF059E24087AACE885BE6FD88F53ADA6A0E010560D97BBBD8CCD04D
E347E31D551BB63E42B412C389297FAF0A9F966EB9261170ED04F7433A928756
FC9BE85499D1F143795E2A0F0A30C13DF094D14F4872A4326C33FDA0C0AC392A
2F772A9E3D9EC530266427264912AB06E2A1040FAF2DE1FD6AFD5FD97EAAB614
95689180498BE27798576A28A21ED866FA75CD39AD747A1FE94BD3EB15C426BB
CB0A20D4A0DC078BE75C6503695290749CDF8584D5DB0E5C30E5A42DB22DD8E1
3A29F907A961B62AA0F5E525C03402B8AF7F49C00D5E266D3F77726E3840FAC2
7A27B59664E856EDDE290103A0D490FD76DFE1D2F039D4F536CABFA083BA6C80
DFC355A362A6DA8A777225B84138B959B5DD39FAF86A1DBA1C615E69E408EC96
54E76C73BFC3C79DD8311101317A71126DA51FCAF5A6B7BA4694F804EC6DC218
2FDE51196F72328E5866A5D4A4A2055CD35D520B40E15FBE17A440784E4F57D6
7974C4BDAEDF855CCA6D7379078EEE63E17EDC1E31F0CB7F7A4DFF3B518AF206
DD99BCCDAD65B7BDC9F704E15D7CF52B2DD05244934EA979D48F768640F7E963
D2C09D9BD4C929C8A03801502142BFDAFEEC12D32D609CFE3440E6232045FDF9
B386108E04BAB903A27E83A733F354FBB9A8D8901D368D057290F301796A36FF
76447A13A5F80E5F2353AB7C14C161D90B107E46DFBC351447900D82D0501F41
C4C401006F42609D4B0563550C0E0130A2314C6FB1FA0B48FFBAA16B016DE5C1
1EF1374B67C2EA31AD1D62DF01A82F4C059D2B40E15ABF0C605BA40C405627DA
346BFB6E0247FB384954C20A127091168F63DAFF382C27C52B8248E944E81C9E
E7DA210F62A1C87A102D7616628C80B613A16D5FF46DB969049031B0CB8D94C5
5DF251222F772D668981CD337C68CB9F4DBFB35941A35E4666DB96431B5A9258
C8472C4AF837EA7C03B528EE1BF9F05DF95A2C2F45CE722D9E1C8D4B202B9045
7E66BE037BAFBC79F33E07B315ADF614ACAED323DEAE3AEA8F648222DF87570F
4CB1612BEFA1CB71BC1CF847D1A0AF17B08759FB45133291C5B945CB12B02597
67D2CCA7C97A82344F676958CBE764ECABE84ABED150C1657C88E183809095E8
8840F703E9BF997E8A66669199CA6FFB0C77BE269DE3B2C0C46E879C36143840
EC16F48FFE515A7527DD76E350F26EEAB85EA7ACAF7479F67E59A84E89C36AC7
2560140421800FFBFCF4372B123AB0E8C974EEE28CFA47054DC41A389203BFB3
D601BC9A41A03A9EAD4DF1F0DBB3869B74C2373223236E809ABE911501B07933
495A954F676F7DFA49F81BA6B221FAB4FF6CCC8B35CB48DA6611E0ED9D102FC5
598792E6234F8F92C90D62BF85EAEAE51E4D7B7D66B4481823B60F897FEA0E7F
237667AA288312539283153C3E919F18C2A31FA387D78B512B98701285BCA1A1
AF9DCF6EB91BD761D60494D664D9BC430FC831F03438F0A18BBF588ADA7A1F42
90DDA4B9F98EF79CED1D8CCE5125B4B0BD2547C5B7C5BC0B19209E22164036AE
157A4D53F5D501B1F7A54A840F0594706BBFABB6D16002A1083B0D452F5D1556
7643E590EA4427250DC5F5C74C0F205F247E6AA58C7B3A65D90C4598DE6DF2AA
81DF1E792BF29682F687343EF61149DC3BF556A632D10F0E070A5ED29DF87512
A61DF88B80A1920DC288C46B6BCC4907A2657010B34A93D148900E639B83751E
FA470F566A6DCF28A6672B9F42AFA94D871BE2485B0EBE5F672C09D17C1D4D03
0D7C1CEDF30C1CB82C492BD8F7DA28DE82337E71E1FB409628AAD2D2F3D2171A
DB17357090B2721D8151AF342D42D52C38319373BA77978109DFF22A69EC79C1
CB030B63D508F8EF42A1781E126FEA3FBDD4B058BE494E7328A855F3E978C238
3D1BB5349DB8A8894172D546964EA0075C88B752192888DD3352EB6B7B3FF325
E57BEE37AF1031594D2ADCBB56EB1125D63E14EA26F921C9778D03AF968EAE36
6D422D9AAB802B3FB1F3BC9D5D5422693DE6217AF70369F93DC188F3E3102A04
AAB845C08BBEA8C45BB228598865B04BAC6BA146758A7CDC3B0E022A4C364F9D
61D5A876AF7980F8BA345CAD7157AEDB9CEFE8C6D27513060079F06A16D6BACC
F2689E7AE2CF44DA22C239ACEDFE74596F1CA87C63177395EB94388654B91AF6
5067C3C496369415626DA73FCC4F5A87276B6894D5CFCB7E8EA546775B6128A5
181CCCC6D90E0D88DEC3D9B8C822230ACC8013B256D0C69FA190E9E93C8DF819
4B191FEA4E0B4064AA534A2AF5128A040F1B561D4C3A368F8C0F845EB084FF3C
D1DB3D0E6F9394B51E5D84745C4D6A46A2ED5592E7DAD8D0C4F0A33EA395C5D1
F3D1DE2065C882B52D82E9C7A166407CAC255BC2695F9AC1911D03EE4564D226
889B31468D0FAC214B7F2BC4D710387CB57E2A23E015F7C6BE50F14FFF4452CA
6FF748308BAE99AE06106D90DE65FFC15685F8CF6DEBB38411E8B9CD0EE418F2
74BA87144994469B724EBFBF39D51587D32EC1130C4E43A70C1930B83300BA58
68F466AC3F0E8A3D96530EFD6CF07BECF37587795A41124649B69AA25DC06AA5
E5CDF02B32905C2EBAC2C6DE6A1FDE919ABAFB72DEC7768D683AEB91505FAF8D
7045579326C39853101B94610418B533C5A0255FB7EA3BF057819899B80925A7
979AA05D39528358D7EA533616870588344D7AF34C78F80B8B95FC61C825ECC0
0D2BEE92A6C2A9D964BCE852697AE7B4842D3FB61A6EF38857D0D51B7C83B529
24237408E88791B3254E7ADD9D13230150D1123D5E6A94289C2483AEBDBC7D0A
FB15EACEEC6A0D73FD959BB14FB7C988FE7620C6C185A70C6A9A87C84C4ECE0A
BCD44C6BBF41F12236586ECFCAB1022C12DEE1D4C733C81969DEF797EDEB22AC
FE9C69C8E1791DC2564475E3883AAB0739E41C90A797A3A1270E6FBC65E40B29
4182E579F9D7451888C6CE7708D8E76541B3ACF17A20E0384D9E33FD80A79216
9B17E5CB24BB7156E2B6A920DDB4EE8A9426FAC6456C51466E99BDE47B002255
701F2BADE28357678B3DDADB2DC08CCEC9E34AF5EB38CBA85B58C47B56EF8238
FE3F5C88DD745AC27BB9536B90A66DA0A76FE2087A021FF5FC228787DD625EA5
397506A8D328199ECE521095BC521B9686CC8DD9C7DD53434BF9AAD95C105467
5CD0EA94A638BDCC14BC3E8B67FE47796C8D62F383BDC9E690F9173EB513432C
F4AE7245842689D20DFAC8313D2495E6F96C640992E108B4A2FA4E08B6B88E25
511DCA400EE056DB3C07396906717852B04A3E115BF515869E11A91B497B390C
93610B3E8AD35CF856DCBB31FFD5820BE1595C10BB71E50AE55615FA7C2B3BF0
1142FD2238658060293ABBAE194FA860CE8D4540628F360598E0A8C3AAF39D98
E1941A0173FEFC80D699581ABA7D3D25143CD74FDFA73653754DDCDEEB48CA3D
7A7AB971ADCBE7FD6D74EBB4F152FAA72AF1BB8A54482442C8690E0F3E881D03
3282E34B404AEBA1D29FE1AC76F41E7AE4433D44C3081FEBA198E2FDE96D0878
6272924DA1E7E8612270323E6C7E6DAC4E592D34DE321A9DC28FF7EC6B0F1C16
668E016CDB44130004F35E577225E9E1B5C61591212BCE94C84D774AC91C7062
1763B0735851118D0B17420253136CAFFAAC191BFECC74BE58FA633672829F78
EEC8CAF224558BD0C50C68F878F5B78D3C62F09DB17869299189FE714E789C1C
3F480F9A7ED2BBD35E06C8A1C712F2BCFF69357CCAF149F643EC607E69644F6C
38A6359A96DCABF40453E37504DCAA6D7D4E137F18D4AA6B92E209B43A2CFC23
A5F3A535AA9BB9A21FAACCDED037D1AE3104EB475A0C946B2D0E350272B3DA86
48C6F4CC389EEE62CA3200D97F57BABF9F5C0265CF2A3FA96F409E592A02E25E
625DC47724A300613F3886845CCAA039D56200AA2DFFAB67E3CF8A0B655E766A
1BB33298840D0D678CEB623240957A1B5B706102321DF2174B65735C849CE0F5
30DDF8C95C18E6ED9A01DC44BF13FB69755B7DB62DBAC9581F66538A553C6801
5E71BCE84ED32420A542184AB87BA310EF3C122263E6BA36495EDF8420628540
E0FD5212A7DEF82FCBB5431A473E06BCBCF9449CBFA843F73CABCF3A3F2030B9
032B8382CE1F423AB54B69BBECCD7C36C39FE07D22C2155A7CD76C01591952B6
B4232E31D7B8CCA1527940C52D3CAC126AC25AF487B27E30268783C4575498F6
798010F76FBB2EAE5FF7E5B7678F96A4B3894F9B10877585BE61BDB9A47DB52B
B83A1F15464D43E2A620DDCC43264B2D2FCEE435745272FF8E999D3D3197E89E
03FD7F4BBFEC866C14564EE7FAAD48FF3F0FD3BC81D40C03A8AFEEB78FA27D07
C0643EE5869666AE5C50A95DBF8DB1F9E6858F1B5D569DEEBE11BC7A34D97F56
622E44C6B2EBD97837638C4C2F750B5DCD4C060F46E7F122D942C0E22693CD01
8193006C44B06FDAD5A310197E57432817052CF0BB99C8A171920C54978C821D
33E0599C65A4691664E373B5C24B3EB36CB7D5F86AB267E1C8BA3C56AD8E8957
84B9D744240E11D8CC3DEBD199ADD162DEA2677D46D6DBB7A166C3AACC83777F
9CB34FBA2086540256F10466049F023A60911B4C04CE96EF34948EA9379C7C24
97219928158E34B402913DCD1EFAD01FE95FEC9E6226011A23322B000BD7A43B
DA96586BB4D2645D3BC01CF5FCA7DB48D76A2E9465174D665E9601B32B94BE48
5DBB6EBFED02A70850F2D7ECE38609663D08FF2612F27C3C88C969169781667E
B2D1D940485D724E2436668E3F7DDDE544BBB27ECC664BCF70081FBEDFD21821
B2FCB9A96154DD8E2C79BCFAD9BD47E5D3B317741ADAD91FEBCB4BC099FB010E
66C0C7B6DB8A11C9ADC27E10D4CDCC892608B8F821B8B0A5FA48E71AA211D04C
513579069A638FF59F4809FA28238316ECC327539304E84D11B6492348AA2747
0687DE18F39CD172B204BE6654C5BD3555BA211347AACB702BAB38E1B72E363B
8ECB2E68C0D2672E8F3D5A40E2DF2A5DA0E8325BFDDD13741F21F68BC43E162F
AC503B8A7466B151AEB4F3593FC6CE4A6D6B9DE21F7B4282AEBDC729A64A3460
4E2D61A35D04C28B9F454C81147E3E23F205EACE206E1050AF1C7EC9814A047C
53F3FA7C0FFD3FE314D17A610B762E72F14AA63B12734D83394FCC328B413F11
A3968D9FCAC28875B34AB8445272F38E9ED1AF30488219EFD5FB94E8C012073C
0C3338E636BBAEDE1CCB9F8DEBD21E86825581E3955A5ED069D7C76D8F8E2C75
D7460CE135C4E1D0349033D576AF6134D3719C72C2FB8B8274AB54A6853DC678
4398A6B997C5F755919054DC900685CE73A8D5738C2BC3A5CAAD678BE82FE046
C615B231FD5B7731010E08A50DD46A89CD32143B9672CE2B4E3FE94448F0A8E2
88A3190A2F8ECA0D2BDDE741CAD677367993F1B4E7756DBC96D8A862A8D03D7D
BCDF5A12F2413A82ABCFD2856963D5BC3B89D0E33180DAD75355524454160BBF
89AE33342978D99464D464C23A32B31CE33E468014DA1E583CA12DF2842984A4
0545F973870CBB5CF3A0D57ACC23513339AD7F5B19881FC0AAA15D4CA0ABF8FC
747808A35FCEA9D18460F654EDD7AF409A84FC0C022C69A7D008BE64EC039F3C
C18CB303754C87BD560021E7316E04DCC92FD6FA7E4023918590C6061AAEFBFB
A47D479DF1149465490369CCBC8A4339350D6006D4FD7FFECB95BF7003E5DAE2
167AB993A41AD73EFA877A19124918E1ED3071A762D0B93CEF3C5F92BA716DD4
6928ED0C6348B3452C0593BC18233194F1765118CBF1D97C99F41BDD5C8359FA
0800ED66C961BF468F25A8237B4ADF4FBCF10F61C9BC429B5EEE3FAB3E8E6968
9EA2F83B8DF53EE8E41302E597B15C2F640CA86F291747C4C1B222707A748CC9
7785174C6E81A614B95868CFEFCB2C25AA01AE8644621FE81A4307B9643CFDC0
453807EE043C66DDEB73E854FAA7A181A9132B96220FC2B93B6CFFCE9B4DFFD9
7C21A534C8A75EBE18C09C8CB07D8572E59749FBBDDA118FCF6B4397EA7512A8
4CABADE67A9B3D18FD1238EADD3C52B5C6F80151201DF7794D747898671BB7A2
FFB0FFC63B7D9F12B2F4A61E66537C09C5C102688D162C7FA895DCCBD8276620
B10E6C7E03FEA4C3712537C4EFAE92A0EC0ABD9DC217A467694AF2323D3AADF7
D96E1339E870A52661736E23FCEEB2667DCB465B7AEEBAD2F9F0891F553381C5
E352B4D7C4C16789012EEB16072C57D1882CF581F352AC43019F0A4C553C78DB
44C8965DA246D11B291C3F9A95353F31235306174DD66EB12AE869A75ED6FE17
68B8E8BE31F533D31138784FFC212EDE3106862F54A3D148BD88425747EBD84B
F5048D7FBD085085D8BEBAC637D3C1CEAF96B4581E1C94BD520C6F70C1B6E7AF
8E11BA4798C1DD2EB7D4F96208B9E5E068E55B7186855063934C5716EDC3F505
6BDA950DADC25DF46905F9EB8284105CEC31918A10A18981330D388B3D9062B8
0F9C42F94B4B17A5661AD726E0285F960DDF00AE4AA5B339C187F52630B52309
834F266D71D3C3D248376693092414F78048461E82A63A9A4DBB219C3F925DE2
302E8F26BAFA9C8B162D982EF5902192B345E4705FF8A70910AD75C8B13FBCF8
0B8A318F9B499FB2A05DD142F14DC9532DC0FB76931629BC216CBD42A8EB426C
EA8BFA775366070A9E8C18D6F76597DA46F33D4FF09632C267A05895B76C162F
6A87E39DBF326C93EEB02DAB580509F4B91B6C2E1D3D80994B414731F0AA4187
EEB703E33FFF9D78591EEBE7AE8E745F8986516493AC832218C3E4E6819AFD04
F018DEEBFB8D5A33CE2A63AD59C8CC9375BFF982E1A068E9C61EA876F4FEA72D
9EC479ED108AA48B64CB919B27CD7107D4222DB031074C9C1BCBB42150195CAA
FEF9D5D4766BC21BEB95A8CDDF4A2420F2DAB3612678BF24A2450F6E99DE896F
7F3E44BBD2D49D6F12246B7A514051E6C273C5B044052117FBD605B07A36EB7B
608D2AD018C84F470192BF326C93EEB3B850AFFC91C9E5782C12D2FBEE3895D7
F8551DE31F280F458C9A4495D2062DA1D8F6684D096AA1475909C8B2125D2359
AD152CAC44BEFD085CA5CFA8294D816AB1665D713ED2861F781AF45D55D2D833
87E9874EA7668DDC7C753ACA0892E0BA3500AFE886AF76859D2D5137F0A59DE4
31A9B3E3471C609BFFD6A27A96351DC61E31ABD61BD8E5027B7D1E0C22A83AA1
9F30AB25F328B5826817EA5366E0D71E54543FE04BA6F49575728D150095141B
03E3455921CA39D69ECB4D0391BE0894F486DF1F56131846F8B8F7C22433634B
804E7461C4C257950D232DB03751EF775FA4E5582839AB4C6A4EA4A96C696DA1
3720EE032234737CB9400417512EC4A5C321BFE9E07A4476F3DC48BD8BA01A6D
09106E811F2052866C5F77D878E9D414400F81FE0DBA9E581F7572239E485942
A55CE4779A8ABD2FB956E68538E2887BD4EB7C7BA2A6DD033D6A0D689929ED20
A96E8F4430344988EB94048545A761892E4FF0322BBC0F0F89FE477C2413903A
61E139B0D0A1F46AD9BBB27B4BE4A1C7BB3FA17F242B2BA9F7640561E649328B
578A2066441716B21F76617F02A5FD4A3536688D058CEB08DBC89F2FBC0F4585
1ACCE96B7EAFFE4D8F6B68DA1062DB53EEE0C552F705CDAE9C4FDD907680CBE3
73EFB2A9D0BA7380CFB386313297CFB487EDC78DF0FA994730EDB595920C5B69
882D5EE1176D570A58FF258DE0397390E4E4195FF01F441FB40E3EE8CA1E3718
899444E8A2D0E659556F2E4377707A1D5C6A184DDE591FAD6F00506B3F99210C
D4D7694F734EB5E0466DDFC7DDE2D85AD8FBE7CF0FA85B640F03B553041C97F0
743E7F8E0AC74A0679067E27564CC15C48604BB31C843E6F542C5918BBBA22C0
F34BD80B5F1C286A9CFE641EAA8D1F23E14153AD9A59B65FE89DE9BB25F80732
4E969E8EA4FA79F77D1CF58ABD780100485D3F145B077DDE4E5176888C5EF043
663921499E463205901D44D6B698041CE70DF651DFB75DEA63B95C89B8403714
DBB29112CFE1CAA143AD9131BEA5C8986EF4AB4C375B89C7868AAE33521AA507
BD6D3808E1A813BBCD0E993888EB36BC2E699A11561B0C13A05AA01948BF3CA1
40BF090177F5F54372003FA77F866C9C0AFF5C366EC23E5D0144879F52D5E984
6B6804A990F47A054E70B398FECAA1AD7734553C6E70CECF27ABB216DE33FDF0
A18151E74535E40605D83FB98B90EB0007629A8F6036B0E050C7F113EFD62BF3
313B8528EEF8C8C35B207BA0640582069B36D507BC1E333A6907AD0B39F897F9
8300DEA28E28DC918B4C139BAF134028529A6AE10C337B0E76A2FFD7E81CA0F2
7E49B521C50B03C808A878680E95849459482383F6CB23ED82022AAD3159DDA3
2720D69689B9D7DA6CF61A43B79CBD275F7F03402F79FE28149FDE9D389C9516
1384FC5D09CB51B45199891710E2DACCC8469B31726C9C34508263844E526EFE
F3E48B58CBB43E238959683203BD2A2177426F57DA32AC83ACF355B3085EFC2A
C66DEE92155860F0A1D661D6938FBC839515EE06FE147396C2D47B36BD857097
CFD68A7C536F438C9D4E02646BD5E1B915339C21AC3E92B03EB5D276BB509D2C
FF0FC53317943F94D538164B98BF5E19DC189CCE4F28B099B504414E9AAC7CD0
86D9CA39FBD538F2BF16314CCCE25F5FE6C4A57397219DFBAF5BD11F5F711BB9
B45284ED612B28FA9F9EA6665A83781DCD1ED8C078AA46A3FCF078B0ACDE5F29
936627BA67D3E0E6B720B48FF6A461972BDC0377388944B518C900F3DDD6DCCB
30DFAC973C7B5548E2659775DF55D79660ECEB2D48BC53D6DCE9C3B88D3ADF42
4BF1ECD60128046C4658FD519004D81E3AF27A6A7A099280A40EA4DE002E1294
DB6B1BCABE59A193D69B70EBF716C91C4B5783CD1D263A9781A26F2212F77367
F9A73A7FF1328736371B7DE3E1E72C1B6182F4EAD062389A8EC95478394A485E
C3BE3E80FD3B7A1E82904733B33AA41366DD8AD68129F3BE79B116C55CBA0B1D
249D25CD13C3FDE733CDF3BE813A9E25F358B04360C80A100674F7EE46336B27
6296120C83D460448FB14E9FA56A696C34D9DA54931F6A5E8AE068E991DF9DA2
BE49435372ECC55A7682D1A0AE125DF60C6A4DCD60E74DB4ADAC009ADB8836E0
9FD807722EE632DB8B5B086C2FAAB91B643FFE2447FF6C47ECBB46D7DC418308
B0ED858298B18328115CBDA4210F9B6BEA58F1D10550AD7B1EE8191B8D2A3E7B
25CCF60FA4AB3535DEFB9C1D2D51AC4FD7726D54DA1154D349717A9DF11F50E0
EC7C255AC34EE0FD538247C5324862D368A6A9DF9942272770975203F0A0A0F2
FF6F9DDA05BD68B09CF5A2D73F55CEAE43E93C6B490C440DBCE03A8444ABC731
76A09851287C67273EC9B5DA200F0FB1DF9481BF8D0AFE7F1ACDF4246D95E579
729BA7D4B1F4FA2DFE00ABF6EB5E292A20A22B174283CC99797ABCEAA1473B1F
AAF16062B7C3D93A6023D3F70916B77CE0942A4613623EAC656B40C016A2AA1E
14E27DB01AC8C433734C6F09BC60B67F85AAF73E4EAA0AB18519E5185A57BA9B
4344979AEEFE561D461A1FFA9FD3D57CE0A77D8FFF7929F47DCF65633990BFA1
121E5C71097B9B66984C0E944711C7753FED69F4E36FC0AB5C5035A89F89AE5E
EE31A8BF3B7045224CA935B2FD6A48E9B2690AB815243F1D85F65EFBC957BB28
6093B54AE8183535B473B11A519FBA417D66CF242B9A5332446A86464A13583B
03EDA1F52A19303F256E193A49618227465FB10F40633BACFF8DA1AF63193F92
D71A67375A83F3DCC8A58E0149B431FE8CF215EEC38BE9D3F5B5EF1FFD2C5227
BF2EFC2F043BD03276ABFB37A345D22F7DAB8E0FC3746A58610C62761B3F4216
149C606786A4A2C5791262E328CCA520C1CB9990447B557950221727996467CB
D5D9E804F836787C6C24A01EE31F5E4DC09852F5B47B4F2B311B71EDDE43929C
B9B6CB3F7C155AD62EFF08FF9DFF4355123DD3C1D53D47AFDAD01881F820CEFB
A32C2A984DB25FD8D99B1B5081F92B6FBCC54151597BF060D1C07E65CDF507E7
495F11E6F7EFC6B3CB3DD4F6EF1D8D407BF78624E13BD6641A7492A756F17D94
916D704FD5CCF79104B5D3E4056EF963EA3015DFDB87D7440C24BCDBE87BDA77
2170B061E9784A8ECCDF3C4E872E3E6664DC8255863D44DAE4C1D5D860ED286B
65B67D163C02B7F59DAF12936C127597FC96765644B34BDE7A7D38039AB3146A
A9FA79D0D4956E203FB591DA7D11858C8FE63760CC66AADDD5731E4579D67C08
8F57C1AFF5EAA43E97A878A0EB9DA34C614442E2E0B517FFD12EC6D3D44F7263
F1323974B48E238466A8CF02B1493097C3014510F32F5325AF666DEB12B16763
6622A62C24B23F6338ADA840DBF6F46C0C6C3ED704EAB329475EA77B74AD28E9
75E0D4A6BF6C938D280AAEBFAC5D9DA2ED39BF347F8D478ABC4594D86F03FE29
A5413F505A5C0AFC671CFF178261AE75E4285E6A93D4ED15003BAEAB51DB54A6
9AB56362E26CB165EA4F16C154B608FF63BDA60AB7CADC9A2D1E54F0143D09D3
76942DDA16B74FDFDA5A0191C7ECC1CE40353F869870223BE018884AA2834678
2801778F393B238319B6677D6D8CCCDF3DE3EF11E5A4F0EA42F4F4562B817033
18824B757D1ACEBB300CDA298712DD13676741123E5CA493BB0313F24C98A1AE
B89115A05ACBDED627FCCED4861C504FA2C9708369661E186CB694DE5115EBA8
35F4F4EB6F599EA8DF38DC2E624B821CD5BB5B20
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-ReguItal
%!PS-AdobeFont-1.0: NimbusSanL-ReguItal 1.05a
%%Title: NimbusSanL-ReguItal
%%CreationDate: Thu Mar 20 10:08:40 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-ReguItal
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-ReguItal known{/NimbusSanL-ReguItal findfont dup/UniqueID known{dup
/UniqueID get 5020908 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-ReguItal def
/FontBBox [-178 -284 1108 953 ]readonly def
/UniqueID 5020908 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular Italic) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CCFB357288DEF82BE
422B9914B075E7EC18835881AB22C2A47DAAA4EEC0A8DDA1CDB5292531E5261E
D8FBC087C00D12D9BDC0051529207238FFF92500581849C386F8427D44353C41
FA42972E325397AFA55CA5189B1EF4979F06711E406A219DCC46C88FC82473B8
567E47B75364FBEE1A883FC42C9CD2E1EB581D4D0C25F509BF595314EA222031
BA9606F17E3E4931D50AC6AC2B63711B0E85A6CBE6FFD9275461474D673694DA
B38706890D6422CBB2B499C0C89A7AF218BD84FE0B13D689EB5930AD0DAB5C0B
55F68356C285EDD85B3C0AFE1B9001572AEC0C3692958F7F3E16DB0C2D0647BA
C1A4EA2EAE112F680B33AD9D59962FBD63BED5766186A1C4C21F500B374218E5
7CEBA25638D9F0520E789B2F39CB0567D6BD72C076BC76095B60ED5E82F33E9E
D2448B364626AB558A979368B0F1495D8C504EA8B6E291E781F5DD708FE9B5D9
9CC26079902BF1EA845CC6ECC973DACF88D956769DBABCCC1F7C44B3B1111732
3CFE60583458E93FB796A440E43018C4CFE846F1C79CCA0416E6B446ACCD1D05
A4A682928674FB388BB109497BEE1F0AD9EB289AD984DF057E8A27F23601CC25
EBA38ED89F18CE03BE3645F75ABB0BA2D6CA8746A0F96518E865AD53CD4F428F
601B06E05B6B3F27C3A62CCE52668854DB4DDED614791C32F31A1595BC2D3E16
772C0ECFFBD06A07A1221AEAFB8CC91029C159B121F677C9AAFDE187994135D2
741BDCF6B4442E6728BD38194DC406A9F88D3A94E458275AF47E670A57FFD531
F72836EE4932C0312FAA0C1CE257FBF790B4B211B413770AE9E73A46BA6E12F4
A58A5CA4121CD6A7A7214DDA473850650623BAE8D7BC6F4034C6B648F329EADA
DB8049C762F7D3B273FE1AD47F072E6A69282866FE0F37107E9DAA8FD7EEF483
7B825A0E000E57B711220A699F38EEE6BD832C6ADD8CABCF7A9A5EDBA83116C9
D9139619E407AF339C1A479065EA6FD7A58A466C6230CB5A8F8583955E0AB271
536098804287DA09D1CBECBC283B2810D28A1EDBFB2158886231E454146E77EE
C99A662AA0C3B597123548EA9580E54EF1AF866B3D2246EB50B888ADD050680A
40B0DED04F57B4CE47288EAC8F6969FA29AA6B28CE5FDECA6909DE6337F5ACA0
2E982F9ED1C700AE0D0BB9B61249DDD8BFF65B53B51269DFB0158C60C1489AC2
AC1DCFBED577038DE80F87CE86751494320449007EA922B5924F53BA2402843D
BA09637FBDD85AAFC17A8E9B0CE1A9508F0F8E5884AAF083013AC5189718CA0E
705F28AE75ED2CC22B05B89ABA446304EEAAC280A94CF9C9280C98EABA19973B
B596EEB41C7FAAB530481B448A8CF6D526BDEE9E8866C5568DD10AB87853A39C
3B61627ECB39D5BA7F8E095B9F852E5F33B0545269CC9F0661D553F814511378
EBB3037BB0667F0382E4278A7F0FA073A6AB3EEB512FA661DACF8693BEF31C59
4F7D0F9390F99FFDF77D85D430A5383B428FC35C43EC628F59BBB3BDE1E3266A
AACF6605C71D7F13530C884868B786877240EDB990146E42722A3E390BA43CFD
42CB619C13E780CFCEEA3467F386ED5E9AE14D14267FC316FE58D449CFF30363
295A69B1C84D0EDF3B3387C60527D4DD22759C6E9DB82BAF5F542DBC264C611E
8965F809E39FA698B4DC41EFB25923BF1C45FEB275752E8A78854AE85A2C9E06
150BF341AD571329C7FE54620EF33C54AA3DBEF801909A0E20BA00ECE65C8B7E
BADD835C6B2888996039416DB8F8972BBC28E3B140CA2177374C15A410AC5AC3
5FCB375E20BD3D283BE2AF95BFB4E4A0DEB874CDB1570739B1A1A213262E4D4A
BE602B782939220D351CE8179EE650B0D9C5050670ABAED2327257F5D1E734F6
C9F5BFF0B949E663B43E999C1615938B81AFA5C99B02AB37CB7492A3032BC29F
9CEFF97D0C4B6DCB63FE35B8FC0063D502AEF1F6F531BF27C61D987552FAA978
13EE20376D20927C4E098D06ED165B6C282C1CFD435D2407935EBF4D317CAF0E
E3C840996D7B447820B08DFDE19EBAABDA532BFAE74034E6CED877DEAD0BB042
43B50DE5A52EA19B10F5AA344BCA6CEC10B73D12E7AF8D43CDB34BE1BA1CA6F7
5998AE2C4F38F11664C18BDD162A9957B73C172F6C5D13D3A5157EB49B1001F7
E54E26A6A4D6339C81754F14CD8EE411C90A03FC4EA35DD3D273EB6C5CFE19AA
C94FF2A65EB60E3D49E8C7D497138B9170D8C568BDB02C4AE30C87705C166CC6
9C502E55EF71EDEA284E024D945241C5ADA1387512E9895C1D27BF4C061D6C7B
86AEBA800F728ACA8074E0F7240A1B663AA364CEA547F7B5F5978A1608EAFAE4
0DAB2FC28B3F240D3EA2F81423D30DD38779A8D92C6CE4D29EE304CCC8C3709E
FB678D8841A99D4E605EAD55A283AC738C07D290360977B0D2FD3499C735A053
929886905390CB3208A146AE560D96C48A606142C5154CDFF603C2D3493D3FC2
D9B2BDB2817A903A0075A6BE4E917C8F91C38F2997D43A8E975AA1DDC819B8B0
0BF7A93B15FA1E189D77F7747B01BABD18D9A4E88B89CFB8CCAD67982B50D725
400254C5500D2A16D6715147E6A20F81F3F25AEB0419C87EDAC2002A6A455D58
FCFB0FA628FBDE2A30C41EC6403BBFFE074C50B202CD5EFAEDE6A2C924260F2E
92862B8C288A84DB689AF449FBE153FB89F8F7AC7F1D601D47A7DDD7109C03DF
34615484B345CC06B378368EAC6E2AEF258D97012D63FE990997EEC6B47B464A
98FA0D61C3827C4A432B69180459465108C88029F2A78C376F8B60043607E535
E311FD6F89EC3C495E9B4C79A4C1219D0BA2284BA0E964992D9B0922A43B57EF
23773B92A0AEC50F87F9DDA5634AFA19FD81D2724659B26E56CEC269D3796AD3
B4056CAA95E01BFCE6B75CBAFD665F77DA4645AAFC442D1EEE2FE8928A4245B5
215EDAC466C1921EE6DD514D1322CB47D16E48E068EEC28399928313A648CC8E
06DD66867746F7F07659E3177A494BE8AB57CE3CA4A1B7A05F91299EB73593FE
027574091E43B08AF7A87927D7ADA23AB59F0350244B22B788BB57B7DE2760B4
0CEA0B229E1C909AD2B7100E583DF47411DEA5951F240CEA3FCAEC2F9ACF20EF
C7CDCA02AF44F8E9B47E69E08F3CA8BFD3525E9F9EB0C7476EAC9D3450FADB6B
ACCC70D55A01D550F61157196B9C4CA4B625E5577FD7B2409571BD78BBA51114
75330009F48E4B59517F7BB355C65F43320655CA54725A922141D6F7A5CF1198
45F88181A01595B38A1CC41C8050AEAE33074CC512417C2B5ECDD531835A4DD3
C8BFC13866C50C95837BAFED3C254F1B32769D35701C4A5FD056BCDDD9A8B427
0E81A36C94A95019FB966091BE67F00D7043D38E2981974F04AEF705B8711B7A
AB05D2BC0D52FDBCF86EE532A087E26FEFBA93FF1EA6CFDC03A2D7B3CD99AE7D
69F14D5A463C94D092A0ADA2CB57CD3E3B15C7DCF3F902B788277092E1620AC2
A526596A4F476DAFD04C5C389D0676941FB2A1C61FDAF5E900B78E462992E4D9
0BE5CE7A1C35BAF1A60306869E8BE43894AE7F2234910ADDA0BDD4DE72D5A9CF
DB4BD60BF9D17F237981AADF3552F31B4B332AEBC716230149A07D3E64864DC0
4C140EBF5125AA937CB9F17F870988B0B7AD73F47FC981CA40864E100F737674
C4C2FB24B8E3880DB231AB515AF4418C9DDC8A3C77FE5DB1DB4563F294CCE886
71FE6917BB48BA705C409649EA3930E9D74FCA2B07F7EFE9C646B561F90EA651
700586F9926D49FB649C9E61F3CE9893F0F4599A0B9AC1FEB877DBF972D8E26A
FB03A0632F99FF4618C2E0A47622A97B7F287E0ED1F09A9B4135FBBCD8B90E12
6C644B491E3A888347AF9D51FB0480B8FAC78D93B4A956ED20114CF02D7BD9D1
3EBAE9855550BCE403E808ED8F2F99592D5B63B5B5473B31DA49C2220ACAE1CA
52768F4E2491AE402A4AF11AEA5D59507F7FED1B3B43318E4EA2A04FACF6427E
214E92B792900628020C716CF8E107BD36A9613235D1792BBD244D7B133C48DE
157C0075606016560997D0E1CEB3F93EB9819C54BCAD4ADD86E25641392A3FF5
0C1D9EC477693AE06348655D1DFAC02A56B96E3AAF0B58D57F7E3714FB63DD65
41AAC570B3E43C5E074FC20F1BC6C1E3F114639BFC14DD65EBF264E4260E41A7
C80AC9D7C16E6347DF6B5D12A8985E55CAFF54AD6EFB0ECDD1084084B8FA18FD
9570CD01465771917F53C649F8DC9F7683823973E2ED73CEC03429D34F5607B3
FAB04824DE061AA587663418CE6FDA770C93374FB2BEFD164BCA8486A2E91F8D
094A17FF1D1C39285FAAC708C13E82A010F917AAB12F3FB964A7157358541E2D
2D2AE517F95D97219B91B764B7876659481443C41620AF46D660DA2B25B8F4C0
4A7C6A47C2D79159C9E8F4062D46A679C09A28E0A58FD979CDC4C0E836AF7A9D
C0129AF7E0664D55774EEA96D43332536D22C563F7A5A66425C22FAB044BCD29
EF7E7B4C50D186F9834A38FA4EBBCBF869F0D80B4818298E2A05A92DD4EF89BD
A3ED89609479188F843BEA3A752ED505246EC37DDFEF7B4214DBBC6D8F6E9ADB
CDE1C9270013253D4F410AC3E1461653CE1DAFAD3DCD78FE105B623F3D11764C
03CED200EA905A3CF503F5025F36C8B6819BA044ADEA0C2F2F2D6D92BDD5E0E8
72ED33369E2490DFC4F299F18269B177976E810D52460C9373A9DC0DA44BD958
81BB9C4E743812A6FE98701C329D1BC89761961B1C5EC23D9E81FCF78F2748D6
169E4248BBF9F31D7ADB3062898536F6341B8995C6FB37C5F5DE42C58B9F4FCE
2637D22F2A906BE133DD94DA028FF9DAE2908E0AAD51D9FDA507B9675F62E965
E492DFBF31F125D9EFDA12D5BF8093ED7F41259E0658AEF59934F3F79B975F62
09C57E1FCC76458DE178F1450D4711CD00C83FC47FA46115D12DAD5CC59D6B23
E7CC12871636250C7D8C1949D984947D295209ED0FC7899F1CCF0AF1EE383F35
C57B77C6B64187CBEA4DC75CFC330BCABC4A563DCCE1F360B65F5E8D0ADA2025
4F84A943458FF629E8514920BBAF1F6BABB7FD2B252CF216133C5EF268DA45A4
DF4065E6A763ED30A6BC85D7B258B6BCA22EB4EC6558B8878E974D6261B5B3F8
7F194891D70692737441993966DA6B5A682A71E9C9489ED55429494E77FE5568
A9A4F9FB0C593D51AB6F7FB0DD08ADA79173D188B9A8420F6916B6E207B53456
F0C26B6B2FE29437B910E30AFB2895AB19295A24846036D31D5E46B4DBEE200C
BBFFB324FA9BABC9D1908C9BE0EE4327CFA03ADEF03A30654824853830C511BB
998EA8B1F99C0575CD2AAD4956C0701320F530B122AD3CE2EC11D2BC8A4647D2
C75E2BCE85CCBEE276E6E21E2C8223CB1A6BE0100129C1BEEA8AE1D67F0FB766
0E7E540B4F995726214D1E0D076E99F4CF8E3C0E7AAC3E7EBA781C7F93A1819C
A0754E524336D4DB75243458A85AADF6A12185137C75E47982CE128B55CE36BE
0D863BF215753449507F74FA53A8349E8A72667634C845B21FD37114B07E44F3
4AFEC80A38B3ABDEF2B74BCAB6A318DAFD58720309ADBE37FD67A035BA797356
B7041D4141045EB42A0BEA1DD3BBE4CD3E5CE7833D548D509D7D587217D80404
75C3D272F023C79307F8BB261056F7E90759094623D0B9E79D7E73683ACEADC8
DCDD5031701847C8D22B80B6A1BF76DEF57E68622295703E4D6E5B8A5717D7D4
9496989AA4D0B443FACF75E4A3FBA2D6AD63F148008C4E9C8DD9F054366AAA03
C7ADE9157278FC166983759691E45CA3FCAA30C1F629434F9733D5DB81DD911A
5B8D372CAF1FF207E81D32F5BD502C3762EA9AA23B73EFD8658FD96C603C0EF0
BEBF651DA1B2A203A6E65084077EE2F504FE03B4E1DD2A7DF6A275042BC8148A
A458EA2DF4DE39848EE17D398A11C736DB26B79646FD1D9D203DB7FF16AC81E9
3FF83AAC4A36B2FCAE503C6DBAB6863A090F81E15D0F5D33B7D2ACC629BA5BD8
02437042E51370AFA148CC0CC4B545F978D1D7AB27D834EC56F58400F7F9FEE0
E9988A1FF51191FE37E1D25029129ED1D3D7244B10C6F6D73D37A2DA4BCA466D
38163A8180F36B00279BA5D548FEBC0385E3AB83120B69AE3B24F0E9BB4E81BB
B3F64657513C1044FFC57D438E02845047D75452ED0029C9437EFF5A0C7D5BA5
34C4C8B4882A053EE45F55E83E02E9866BC05642288B40B40C822C24EE21E9B3
12A7F754B4E8307EB05FD42B70E168CE350020F2F9CFF93252570B02698785F7
370123EC06AB1DB621C6AC1B5794D3C02216DA2625049F99B85952CEA4260197
FF688202664B68A44CC85084CF7AAF47B019BE7BB3E2C0546C3B07CB9950C4B9
9D699013908194C08624A47FAABA5F9C24E481FB646B49C480F139F8D7741E36
A7DDB0C2BCEC7AFE3C1EE3C859847A699BD0F46A6FBEA1B5CA28A05AE24F1EE8
45C33B2CF48D90D9543EBDD424021362845888797A71A49E0E62A180A95776FD
F876A3A669DE79ED9E2E048BAD95FFC77B4B64D99F73A97444553BE895255C38
51161AE78221F7C07B15F313E394B9776BC68CAEE4AA02C5D91AD723D1FB5FBB
93559086366A8F3D367CFEF15644FA5C4FF51BD7D49320E26DA1ABC81A101A60
817AE2D7410FFE3C1BB59D6BAFEA60D5988BB8DE52D8B8AF38615E2910510ACA
3CC35C5704550C2B6BD3F6314B2BE984DD6BA2B619FF4E8BB1DCD81378847EA5
019C82FB9F0477A4432B7BC4CB1C75687C18AE90EBCA6BA61708B9EC757A8866
4AF993AA108ED487671AE760A7626F56FE481DAD5DDEEEECF204D21AE52963DB
07493ADBEABF79EC3307882567311DD91F4B2453B1984A91455405E9CEEAFB3D
C2B5D9342075AAA6F5B2C600961691A2AA6739846E00159B2C13054094D42D7C
BC6DF272591C756B1799824EEB859237F9A35E8940D6323843A53B9BE5BA9FB7
15A4A3215F3BDF695B2627F530618C762085486DBA90D8A157248D3C2CC5BA45
60DEE8B9AA37855FAB1D0C4FD809A7C2AA71BAD1ED93B560B86CA7C99FB30439
0D4D63EA1EE0ABAEFD5848614D766E832A439895DDC3480968FFB3D14FE81914
A6AED719947E0524B7246E303863A48059A032934B4D0D712D2AC89D1240C6EF
65B855C9171C9A6D9B6AE40E85BB390DC1B06006D56696CBA6D08FFBEB8BAA76
8ACE8800324935815D13A92445F1C63D070A58DD9D706806C7040BFC7A114E29
136CAD83436188B28F78BF00F3FE2CA5DDC4DA23554C219D792108D1F525244B
5D50CC2EBD4E1C24DC334F7A5968A13B945682EC500B4E508948CA009579B7AB
FA6425397D9886273E94179689583EF847CC17BCFA2F4091C569F3F1FA04C6E4
855CB84F6AB179FD0AAF2746B1AEBA98C6AD692EBBBCD2B5BFD61707261A01E0
9D6C1357FED0CE6FE3290B60B608A999DB0726CAD60EE56694956369335B0C12
A9B7401A040A5CD62E20E0DCFA6DF024FA0945D842208FF57886F27B9BFB00BF
1A7BCA4D23E11E1B26ABFA1415D7E0B1DCCD35A6E39F8E6EDB9FE3C929304B97
45F91A7EDBAA17D97DF692E6C61298063C1526943A6532386E33F793F51104BA
6C2B176672811606C15610122CD985347434AB08351769A1F236D5EECC487F64
4164E1DC9B25EAFA346270DA15374AC200FAEA986D5118B7B10C54791145D6FB
8FB34C97139789A942488D08A320E41055C5D0D6AE313306EE9EA4936FB2144B
9C73A556CD8BAE08BBF5349FC94CFC9A6AE1B6200454DA70F5BEB505B00FC7DA
00AB5CE2522E3A38C13138B508713B4B8AAB42E012074BC39F6619853C772C5B
CF14C4A56B5E7B582EBFC9030E7BC496D9A973BDBC79971CB40EC799488F9E8E
441C515883FA06ABE8AEAB45E3F5BDF960DC7BBEA9510A62152DCE2E19A60DF8
31E443C18A8E506D7E4EE994BDF413A24C0CEE6FC2BCECB6B15B59FC3E6ED995
66CEF5155ED6E11FD0C5D0CD1CBE9F1F93432C6A5E64454B21C92CABD65248E2
4B2BB08876D05CC38E39952CB3AE259167027219287F5E3876888A4242CF5234
61B63296C016B9794E2A05A121D65ABCA33F9BF7C3A290452CE9E7FBEDA5C9B6
D48E20C066C6021D56ED46EC2353274F16FB316B189472B860E5120612C082C2
B3127977213D7CB104DE1E06A4CEDE30BDF3C96D62044647F5BBE179B5709726
D5CE95A011609EEF3270DBB22485844C757D282F31E36BC5BAA4847F99EC8F73
8F812CC1D2967C17224F54A5F8C9FC6E0C79AC3714FED74B3D0A09173BC296F3
3FD6497D1B365485CB01FB984ABA536BAEA1A158D094C24FAD61E8C725C23CAB
28BAA3994632D1A768C8C68489EED26A914ADB08880F2A993F35C1444133CFD4
7CAC7C60C6CDE516631E1EBDBF0DC7F83530FF372034E8918992C94A1FB4EFC8
84266D7570BD2C019CA021C220F7BDF82A9AFEDB7FA38248362C804A798EEC76
FD2956AEFBB209FAAA5A0224B065ED53A6D954D5E9C99B11F468DC2D806BEE92
B31762E18D98C0B0F82E613EE525C993B1E086C2D5D97662DF2DB56021DDC280
3A2829D11B4C8EDE2EBDAAFF5DA13755F820DCD2D7A889204A26DAD0E417D051
45733CCFFFB7B228BA89C57AA31254E8B2CF949D5D05E543312BB6709A52FF1D
5CE04AAE9FE38452CD5A2B3409018D24C060CA63D45E178277026D9F30A103A4
E64A7811DA9D8C0F070F45CD84EB47551F8E110F82C245D84FC93AAAEA6DA61E
C3DFB3C0A4998821AB13E6C5615CE0F86DDCF237E24350484691DA7724AFDDAC
32295D141EF79377C1CD302E925145508D88081C369CB010E711BF24F70E30E8
1A6263C1A7538ECAA9CDE4690DE7E7CEC67503ACF61C246BD1E9A904F99D6C4B
F9F76E1621D9DD6B3141F54D47FDCA93AE3BBEBDC53639986BDDFBEAE25DF677
B60A3FC1B440C05D4890E98266EA65148686ECD94E642DDAA9AB871B771DF581
00625E19ED429B21BA7DF9209F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC12C1051F17
7F2E8FB0269F00A8A4C9F61FC3EA50B8009493921D920566ABE35A041D01F286
5E2B3E574A9E9A78E86BB5B788713FB8001C0435A2AF29BEAF8B3559A6C72748
CA7C539201BEE06477DC22B9FACB1CBD29E5647531F694BFF0ED77A7847F7C74
1A9C3C1FFEF085A5A87B2B8DB8234F076977B28129676DFED92BF005A132A12B
0D5D3B9A4AA4A2C04E1AFDF8A6B5866B606CC19287478BFD6B8B213C19B39853
2835F26AF7F37F7F99E30BFB9F66A8A8833F7D42174025AAD93953C9F599E8AA
5B732D60633B59C2DC5C080E7881848222220A63605F00205C205B35DEFCEDB3
2E261F8BAE46654CF523D136CCE8B52E83BC623D906EC7632CB075B9D013C926
6B223C04EE5CD63D144DE465DD11AA26F59E2B12CA1CD88BD95ADF73CC036BA1
DC8D789B86226E38B0DB3AFD1891643DF69770905D11D3022EEEE058F0316E77
0CE494F5D25F4667FFDEE2AF8A30E836B33CCA7986436F2250BA687F453D4A5C
F4E61DA5C2E238FAC478170AB546E2F49FC971F94007E7CCFE301062DB793BF0
C98D73A11770D4FAD1B1B8D4D0F6BBFD2C717646CFED93889EB779D89DC56574
6F129EEAC3CDF33EC8821B502104FF31590F567D1D45E3E92FA14AE1F634F3FF
687E1FA14432BFB817DA2C19F0C868A3487600CB5DC8C1C1417C3167002ACA1C
42FD6A3D4358B8623588E7D3EE02742930F99516B2597A022D0A53242609EFE2
6FAC8DD9F8B47025E7F7382C9A9E7F700F306AF2E28A1E1E66A349D53C5A5004
547D9E93E0A89BC49059B8112CA0DE3C6E33CD720EC4BC07E03072267E8ABE97
69AB6F8A4D5C2A8B0ABF3FD27F2823662C07A80565D4311B23CEE3EA3747DB06
6241C94302FBF237C39454C67E01F68736F187FA748D79F84B7CB450A9C45FCC
932A106B5B2AC85293A25872078E4CAEA2436B0A872F31A131A36FC8FCD291FC
EC5A6398F275C8CE4CDA5E898889277F0155E365B518E36D76BA889C4BB94D6A
F4BCCF762EFA3343D9C71DCEBA2CE212711445CB7F88B44D610E558EEEDAC38C
BEE1908987F62A68AA0133ADD133473E155533410E7973C55758853247CD330A
6B61E039648CF6E58A173FC3D7E1FC670322A4E259A6A165FA1558FE561A784F
A50039F200BEDCE7F57392C3D41C5698C9C8F8333B9CF307E9154793EDAE22FB
A40092AF1492C9BAD7095BFE6125C188A53FA2D0813AB238367A14F0ED1EAC26
E444B6BDA89CA11FF988ABB796B6595823707D1A37CD0C8A8B3F7C350305B273
03AB8B016B22376C8C335B8BBA0DEF974EB6F862421F6F37283AFD0F95C4B889
F3E304C34BA795DF6289C9A8490DF490915711FCE65F1E5C1E4EDE5B900212A5
FC7F4DB2C062A1D97D9F3BEB5DCE14B6D0ED3BE5D5861FFF3215FB4ACA8A2DE0
CD63FF091C409C919A7EA8859976C26F66170C35D1CB9B610BA4F332253C51B9
E6E27EE36F0B6F2B961CA6E640A65B8CD159EC22E6191685FA2BFA577B5AB9C6
544250D9C2985BDAEE731006C18928C6761C148F32AA97EA454B7FA5E132BC17
2A77305BB771DB267C0AC6F940EE4E12921A038A64DBD11D7A52FDFFE8A2AB92
BED886B0533C784B8A8B363A08AC7AD4E9217E2FD44B647C292832129FBEEA0C
D3CB94FD161186FD0CCE3AC0C2BB9A898025EA873936EB6940B74DF0013AE9DA
79E2C0A15F3E1E94C13DCEDD60CFC0997AD00AF3C2140D049C8004E21B98FAD4
16BE2552F12047B221DC381F56C09E6590CE09C10D1CD024C5D8BACC87E46323
19B253DBB32F7D4C56535C4452AF3E1AB29312CC2DEA85BD39AEA5C274E42504
62BDA42DD982B05BD21380E6EB86CC5C20C4F548EA0200CBB6F75A14E8534F64
0067BA5FDA229690C62A3DE8F1B66B6686714F62C9933542E039E319ADD1247E
FCAD78FC976C5F9A50158706999FD7CA60D2E022319734570F46E6D246D604E2
7CC427B415DAFEC7C78C8BAB8DDF9AEA4418CB27405613AF6A8898D54705F8E4
540B96C252F33509876FB7DB62D7D23E5A5F5E1D7E8116BE1D2C64AC0ADE48B3
2004072B5D8A57689F926B8744B8D5EEF58BFF3D274D1DE6D33847E2A638E0C0
BF311B1A7616A8D92DD167F1B220A35A4AEDDFD34EFA03BB49B8FEB98A96C113
8D3C088BABF1B153ACF8DFA6B388F4A61E14C120867BBFC276169DE357737949
57E2BA5DBA99DE0C789D121B1DAE0063B73927CC7C5C10E42FB65E13D33D6679
5ACC5DCD875ACB5623D34DA177B1DD37F84FCF67F3C12EEA3C77C634D61F9A81
5D8A27A1DD4DAFE4CA472C79C875A9394A9C6CE0611606F90DE8E9D583A5988F
6CDAB81EA10DDA0C81B973478D9C85029C833B0459C3DB1456CBD30993410C0E
FDAB2511EFE05DBED355CD577E2E8F8795B58B5E505F718707F15DB2DDA88F0C
D48A0A552955F9268A1CC9196A7161D400F5DF9816CD9848006D324B426F253F
3212CA11AABA54285DED8BC91B66B2BB3BA9493C94D860EFF8EB9BA7E8504849
2E083968C22FBD3944D162776B9A9680FF3AD805AA74F6559A6DD45EAD937A10
23B6866780BA565B1B487840215ED98A8CDF069387E4FA50DFA729086709CAD8
F9DD76AD45ACFAAEE71762C0891333FB62216C8ABD214D6F84B5DA778221A3CF
A0DBB8397173FE341A12BF570C4F2D1BE311FAA7BB1FAB62307DA6FC58A60A2F
2CC32234F171958DE9E32687B6BED27ADB1EFBDAA29C1A22FC56AE76B0652764
B2F4AB03FD01A2662B879C2455A1A1A35DCFFBC0466A81247D0D69510D8D7D36
058B06F3AABB121CA1540BA17F0A43DF8A4EDEC37C7C3968C89EA69B3DFFE6E0
FC453B90FEA4A50B0356EC46A4E7754D3BB9B25BB9A929283621035E779F46ED
D935018D616E4B6C65760218604DA7671DB098E5951AED115AE9D4C6DABB42C2
035536E8F7D9787164A60BC32326C2D36742C0D71D21C63AA4DECFF5C797DF57
7C4FA8DF7125193E2ABFC8962C81205011FD540B6C1366F6AD6AFD1AB243502A
86FB184B3832FB1027D141234E6CA6A30546260103133D05A38C8ECB5389BFF9
AACE0299E84FFD6194F127A439995BF3F7FBF49EE7ED496993160FC02B552742
16D251460B2E2BB253BCDA0B89BA6DAD30B1DEF09CFC93E408D2EB9D54121D3B
7A1A6173B4A168A8C3603A54D039EBF47B0938CD3127CA9BD4B2CCFF45ADAA7E
204114E5CF343E505739E18A17A489662F16CEF4FF0CB4CBBD4D0CEEC2269290
90A98B942001B56D54CB65DDC734C85978CCA913C62D663540462DC1B2026209
DB8DDF5F93985BDDEC7A17C057ECBE98ED85BD56300DA794ED56DE49D65F468A
51513C6C0C4E7C73BD8E43A845AFD0DF8A3AA1BE8F7AB1DBB27CD8BF8B107F22
DAA867CA22723CAC55F4D5236628739606D8EF5ACD55D67C36ECC4A22BF19436
2C862C904C6646E450C3BDAECF9C38514538F9F0536817398DC030E0275051E8
00D08BD92FF2BFB06CA814AD933409C99883AA5D858AD27C1FD642F61A533698
803DFB2A20226E582EFF3AD7DA0A9804A8F1FA82E223310845A025D7B189A573
6B5223B661222CF49872856674212EBEFC4A56D4A62930DAAA559BAC06FE38E3
D3AFB6B950C284946E38E8CD1D7732019B86C11D799B79F33BB09CB6771F6378
5029F67FBB2BC8E9AA0014C75790B06C375ABA39B49AF0DD2A35EE24A912A8D5
E2DDB74CC4C42DDC9F742C12077C473AEFAB9D2A0AB18FCF5A40C9286D069839
B0DC49FC8A2E0BCFB2A5224A20C5C14FE0568AC285C0DDDF404FE29CE4952D5E
2FAE0C3BAA7501ACAB233C50CF105D6197989455792F63B81C87AAD19F4E39A7
3DC26A53BE3684958243FB5E2BCE74816877C16C130A46E1BCD0BA0BFD29410B
E0E15ECD8C55D98A2BDF0BDE60C6FF1E1D166F619543D6A3D1ECDDAADA307C2B
5CD23A78B54B363BFA1E0A7F252FCB092F9A0E06E6873997A3490967DCFBB99F
FA480FF4AADFD07BDCC96F4E13E2A020BD8460CC7D8643D3A2459C318A4027B8
176921B6FE6F208565573E89FE3A8E5DA168E4926B8489770DB1E286049CBE67
B2CDE89FCCA385BDB32C72B14A944ADD33834142D478550F60D1094963EBEF5F
85625D7A90C728417D6D39C02443AE2D9A5D1F0C21A65C82424605277DA7EC4B
B7E909BDFBA2E6F6A24EA2637C80EF0080D6FB660D65C6BBE76370F0389AB1DC
905D2BEB739F117C0642A3443674A4D19A5B037FFB99B7EA1593D47EE288EF7A
4D2DADA9C29665953647AD6B6D8268A885685F15D56AA2AD384B7F6AC92C7F83
AEDF417E0B7425A39F49A47A3A698922C8204F2BECE5E6ABFA06C7E124C88F55
EB5AEA0A3CA8269EC3AB79D749F08661A00D79CEF0AB1CFE6E28E7042910F7B3
9612981022FFFA349891F4E5186BDF084C5C8F7A7BF34F1C86D862BF33A46509
346176931FD978741654704A4035A1E7C8527662CC0F00E35FC8D748E1071C14
C88C1769B1A41A1FD97FC46BB3CB958F630459650661A7B4A0E4963C9E9FC0E6
CEEBF7774F40AF36C71CA78CEEB6BB2E3AB2F6E297EFD86B015A84D657171B12
AF2E7523DC4CAF9D92289600AC2CFCDD78A8106CE6D993B21D4555D24BA389CF
6EEBED581868C0747DA81A81F48818320F5D86E542AEEA4E64F0C4F1545BA8C7
934D100A5E37A94AB69AE9538BE68FBB57D62EF5FF8DE98899A5F1A04019CB16
2F7BBF120CDEE64257EC3B30B5EF4B7F0F0EC273B54727AF998EF726477C8101
3C8ABDCA62FA6E2F80DE35A2338CD8D5C4A23264CDFD3ACD21F2431580556CCD
CCF71D363EB5DBC712A8F962F7879D063B8B80FF811036A99370C24B1FDD18F2
0E71A852A83080567708AE25C289AA3C41ABC57A5BD5CB140E02C5A8C4AAF911
3292E7EB5D8B7370D20FC490E3A629590A01C82AE5A439E880B3DF30CC96F57D
799B6BD986A2913EBB47C6D7A2A9FF37198A475516A490AA32FB1922E8E2BC4E
F70F38D4A733669E1D9F459EA1F9FF396F69F9A313573ADEB344FB06B0683133
5F7BD2D74C3C6A019DA3790631E360AA6DBA1EA79537ADD7412304B12E8C5396
F8683E51BC4D0556BB410531A5B2A5A6D96F9F22211F0423C01A13086915E0B3
5987B11E22EAF052F0A5F6FC2B09C6C9E45439EEC1ECE096E6E5B991725B7948
09774ED03DBD95A913C12BC502D3302BD8EE54D2318C6E6FB8AAB7E9ADBCE59C
015F68BEA5EEA4B432154785EB31F8E4DF3CA6E596CB562C98A8D09FE551F142
955B8EE5A161A4529B735031ED0B3F054E748530C5E44CC3639DDD83358B0A1B
6D3E93B89F30B32D39A54B987272040670E0D510514D64256114CA0E06B4DA99
6CD021FB5D44F9B67289658488E28072CAFD77E895E36ECD8881C06314B93496
2984C7FE400CCA58E6D19A5EB5675E54C76D75317812C4BEC982C36DF246D820
C031D718CB10253859AAF836E53847502BF4A104BC474A986B4DB68E5672F031
A53640E45FADCE763ED9006E468579E06CCBDFED3C5BED02CA07F96E3DB5235A
B9484989D44C6C7F5187C27310CD065D11C4A7D5A010473E8EC9494D7980DE02
2A09211A182704E0AA1EAD468E25D4889D34B63C118D994E1474123DA0D74228
CA1A581B8D8BDDE31F6432B757B5F1164FAB22A39BF3497AC8A40FD502ACBB13
9DD459FE78986211F8B93510BE5EE3154E58517EA65B8F73820F99C141D9E977
2ACB63733222D0687E1B2AF3259B1728F86AE023B2F1C325C4F4028D5D14E3BE
099597848F87049DDA4AA688DBD0E607C1D2C5D1CD98F613BC2E4FB25454AA38
231EC3ED25DAA194B009096C46253EE98438FBDEB8D598CA9D7CBB780250ED96
612FB42242CD908FBE9B98C77FC1234A43D97D9BACBE2279A5E68C0C192E5E14
393B889F479A2D37240C6778E69BB90B0D130A32445972FA44213D14B42DCD2B
B136C75DE0FA273D40D06AC07B567DA70D25CD270054F953CC57932BA4C9DB0F
1585DEF8C6BBEEA878DEA3F2591FE6B5C9AD96FDC7269B6E168811F098EDB80F
8AA0DF34FDCB713062CC81D4262A90790CE91228EFACF816224FBF1002499C1C
954F8C6B80667468AD643A84272C0FCBEB1D3DFE5D3E32AF013E6207BD0481E0
7FD0895C9DCC920A5FC0D620122BE1A22470D4B7E7BEF228434B4B529F2FB879
30A6D5C0E60977D68ABC8FD50EB703E99F0C3380C51DB127E0D7A7B07DC6C57E
CB62C94DF9A89E29A679A18CC81C5822E711E9899A4148795C932526D59A97FD
56BFE696D2C25408D362312C9583B466F64C52F017B2FC0FD6AE6CD31B95FD23
9001EA631F6E56534B6EF4E6703BC7366ABEDC18D5A4005EDE89E87E5EBD6BEA
E4AAE6059E24B83F0C5AA8F354FA8F2415FB472040CCC157161D8CFCB1926E22
C3CC3DF6589D50D69B325FEA8717A46A7D2D69A2EA8E5C0272C7D4774B25112F
FF6E06D4095CAC5179C10AF28F2335EF156BF5920A0ACDEDD11FBA0EB4B5FCA6
0EB6C2BC70DE5DADB20E69E448D8C68F2FF41CF32DEB3845E3F381D2CF550A11
5A4188D50BC8527BB8FD0C18F1B7B4C6F79EB0022043089FC38C3033DCDA518A
B8E4A92179B2E316C10CBA39E2C7AEFE726FD3303189FBB23B25B8BD6276ADAD
ECF0F88D4AE8A2F23BD06ECB8B0516A6F95F40966FCA2EAFDE0E622021E0CFDE
12AF9ED20945DD7A6C6B1739C9D1F736708280E7BC03A0FAFA64A7C5FED819BE
B1A9125C2E7C51C52741BF812CC89EAE94F1908928FA612F5CE9640390C353F4
64EAFB984ED9535EEF0550084F43CD4672E1FF727EDA4DB5C687282A10D31D88
1F6C47B6D6F12D65BDF65F2F5EE2960A35AEB42F3CD5F4E11628AE088CEDA223
79CE386A13FEB9568F66F15D2B2A9D775EA28BEB6F1FEB404E47901751F077A3
443B9336946BAE09C357B350D466B4D20EE132FE168BE61D4FF95132C49EBD22
8E073825D2B2D0E327CEF63C5D60D7228F1C9023E2AA96012837CA40EDBAAA2A
CD2B44574480A072F27C7AD291C4F0BECF14318F0C968433143A19DAC00F7289
F0717532E4799F0DCF5D2FAB1DBBA602BEDD835C54FC30DA2F6B458208BEFDD7
9BD8C4C6E6394AE72B8A77E33F17C181EFCD9C2EBA72B51F0DB554C056A1DDD0
0BD2118528B13218F2B69738A18C763E2F828756D8F840D2CE507A64B7F590AC
37F7DA3A273A00CB5D81CF1DA11A434BFF5057F1A668F7137AFF36FEC3878267
4487BDB90ED2A092506D8C4346D768F0A18EE79FBD4DD4183076657F699667B5
1E9B7A62922FC625AE3CF4A4D2C34A38B9F346E5FBC6D08C436F30764344CCF1
B9E47D39540E4B6477A00B8D34443EA18E2FC03785050C5449D652A4BB7AC68A
26630DAB9149FFF9ECC814325EE561E11685F37D1CB4C430088DAB7BC810C8F1
5E1EC3EF927AD2F5908E08BECB38556D2ED92D563CD5E4578112195B3850FAAB
179C83EAAB08EB70F7261093F8A8E52BAA1E6DDBDBBB387CAE57AA9158203176
FD4C2D16191D8876927CD90FBD295195E4B71989E05AFC9FF05811AB2DB5A3A5
FFB4410F8B6F115E74C94365A3A1B4F55DD9D732AE2BCEF21BA42AF6BD2B87F5
6AFBC998A8BFF455DBD4F8C7D91BE31ED3E02DCB47D04840C0D5153336F1F79F
FFF16F3C96BCD9062BD9B4A9E7BB776B37107CAAA7EABB9662BAFEBFA4506798
73163D040DA5609C0FFB5C39597C7DC37EBE6003F9232427B04756BBDF8D2CB5
7AC422CC75EA5AF6535EE85ACE82CD36586B332BFB4D5E3D1751ACBD6FBD911F
C9E7E1BB37B8E226AA16909A04CAC831615990F7D4F3C059CECB4709E86DCC69
CFA7178D66E728888FA40B46098CEFBE3D815E7369EBCB3CD5FBF98F4C41E902
31A9BB704537C6E4664AB9A3A46819A8980A2806A5EDD9FB8BD84D7F7B0F0BE2
D76565EFBAB4AC8DEDB8C111BD7B2A4307A01D125C4B6F54C4257ECD7553718E
0D46D762039763B9F789AE7A99229C7A1E0DFEE8CBC958912166285768C5BDB1
408E45BE91614120F69A271753F7FA0E28D82411EEFF93898514CFBFA32663A7
5098B006EB4426CA79F03664925A06F2F3CDE7FFC1C95B8BEAA439AFE95CEF98
D017090EF0DDAC12555C82441F3E2F1438FF2C98CF7815AEB3E838CFA2D91BB7
243A31A69F84899A92A33A2D81B081AB3EB31907658A29220B647CA25C199E6F
18DB014AA3CEC45E100EC35179568848512653385F01FA8F7423512245954D1A
A3A24D30A8962EF0DB618EEE7D47D2D07D537F03C5BE4F917689C6144D0F21A6
DE5FB2D63518E33F23D81420BD04B4CCF7987AD53C48EC174200A16A7948261B
9A4B4971ADB4986BAB5F81C96796CA1117A8B20459678448CF736D5F003689F8
E30B1320597A31D302DC132FE7EA0AB5D06D8B861F2DEDFCBF13655BD3266D95
8FFD41ADD0891EDA1ADD6DD457ABDB0D12554587C77292DFA166C23256C786C4
F7DA38A8550E1C1B5A038FC50E68234CCDF938AF6A1DE2F4C17033419A07970B
70AE47350B0445B3465ADA86A7ABEC5A4E5CD7F48C3C88381316C2953A82867A
FF29E5B32C6D42A6A089E7D118EF4AB65088FA46FCD3CAFF9C798A5E480D4262
7576CDD8C07547FD279F3F0FB87010D9A64030118AB0207962F455AF86E8BDE2
143A1C87CA30CDB2D57873FE3AD6BE40411A5F727A9D36ED4D2725CF4B276983
6EDC443ADEAD27A8CE733D92E19A2A1C82B3E0EEC9B9301CECF5D752DBD2C055
EDF38B7E740785221D680AA527706FB3A473A87C650DEED4DCB43B0B19693777
463003368866E262B3578B7BCE9F7AA35BD9D0B0A5AFF5B06734DFD73DE05C02
7EF1BE60AE5E60E9DFB3B53CF0F88AB22564471AD76F25C6AB3E45FC8BCD4199
2993281BFC5EC065C9CE324CCE431D624CA154133430272D6F8119F52E166794
053E2778DFBE35A86E43B0FAE13EE500835D79D554863DB9B0950ED7F24A16E5
97F48763879CDD4EDB6EE8650BEC8A885BC942F4FABC184C4CBE9250708F53E1
E01CB76A423726CFE0148BF6CC8703CCE658C6170ACA4A9CC9F04E215382B961
927DE098C0267209D411116835E8060D78A0EA29F366CB58247B01D7ED0590FF
CAD9DA8F5CF77E07F336F8AD5449ACE7E11C153A558858931FC5A622A403E05C
76F04BAB8BDA3C28F5AFF367D62BB68ECADAE83F987BF73A0F823F0681BD3FA3
5F298D5FE779B9220C1E26E0C85F0CA6566DA7CEFD36E44FD85284FFF98674F1
5268259AD38B49462BAE5FD8EF74EB2B9AA83AA1EB49A99E4A0751F095F24B51
5E953B1B7B049FE349E2D0C03FDF5D764857187D6235449DBC9C8C88EB96E85F
7CEAF19F00FE6428B9BA30A4E001ECE0D45E10BD736BC92F0E0CE77CC9908706
2983D05F0C204F45E40ABD3BD40C7BECBE1C6EBB2D7AC8ADA0BBD56D3A59D532
AF75FA442A8241250633143E7560A31F5D15EBDFDE0050CD5E0268E30714765D
DE0ACB9097DC5B6613F66530D8981535B4C74CE2C5E1003C4FE3157D34031461
961CB6D80DD73364C514F2EB303D5C4814CB9E6BA57F2935E45D5D048888E6F7
EA86816CA48483E04D117BE157BEE37006F5FB05F4CCEB6D20FD2B4B99CC04A4
DD79D6E0C0366ACC69369E1ECD5AF9E7CD1471152AF1A427C242F6B88411A5A6
3FC0887DC9E66AF130AFB0175B9E127FA2E257CCCD9AA3B8FC7BC61040E9B9F1
4B9D643761A857E4C7EFDEC723B54AB6D1DDA4836E4CA039B332AB929AE82972
3E6849BB6C8F96C07AEB4B6B50A089CC830FCD5DC6C6858A788AE5C3A59BEF13
2293247BD8863C32A2A1B7BD51DD427175A7827DF77BC40F8181F76CAB8416A2
C1EE09D783ADFA7454E9BB696D145FCBC33099336D833E62EFBD22B6D5D2D722
73274C9FE16CF33D70782FBEC7A6940FE5220CF9D4E4E5470C701CDC31F7B206
9E62E804633EEF8808E5C745ADD2DA1C2430FF695345F977AA9122B81A0488DF
F7BE42A66843387567AE0F147CDCD332F07F067CB41ED1B19E116BF843025FD7
A5941D7BD94DB16F1102C09BB229DCE5FCE2E697BCAE997361E4834077E659B6
51844A293FE3D87BE83852FFD82C0B88DB45BAAE078F874806B28DD6496E21C7
76D5F2AA1992C056FB336F8390B2BF4E66EF585880E3DE0D2332FFC0110D9123
3E554AE7FF7709D9F725754F8EB4577560B1557E3EEC7EA1B17C72A79331FFCD
B674F8193468AA632D4FDF13FEE46F8F2852F988433C56E92FC643F45FF06DFC
398042446B7CD610069EBB544089BE489831988C9AA48A58BACB554CA8BC48F2
9C008FBA3C210DFE35E29A1A7B63672D86519A9A42FB0371F0FB14C182AFD458
26A2456127C20516046F6F2C3B7726DF0109D96BE146EA23C4B97ADFD72B509B
1A8E9A2704642F319DD0A7DFE5CC4A781E53A051DD099C235F4C402871BFC4E0
B43FF893D39D23D872B9066BD0E5FA564ECCF71288F75774767867BCC000B610
A0CE0654388D429B50DE28FB8FEA0015CCE904B1A25AAC4EDEEB6A37A1C4BBAF
D05B7C075FCF7956D4647D2D624D35B98827842458F75218F987E30390BD31E3
1AFF7D799F3D4C2CB294E443F34B52B28C13D364760E2BCD21D8CD0CFC3998D9
F720D793EAA5AA98B091AECE48A3B8E9207B034D6F0C703C73AE5C1CDA5812AA
5F07F6AD61EB798D2240D7848795D219E26B6731933634AC7178B618A5D2BA98
EB53490B92171D53CA42DBA5D87DA1B32F9805E54C1034F8648F8497710A4963
69379145675E4789D941E66DBF90E5C03993A797A27EC39F734555069B7BE9CA
BB33DBE602B9903D374AF940908E2C0A7C6D6D516085876B23AB3E76524D0763
8837E82C59BFDF89828AF5B2584CCCF3418C6E0D3DC40C1DA8B87EB9CB0AD9B4
503CDE195427394987912B5A09E9D8A053B74F83AE7524C672496D5C7B298C4E
5147759694649AE7C5FEC0E6BB5041181D2E59B849EC360F62701D18826FEC47
677A376F5CCE489724470103DFE188C6C7D069B4B27B90ED33C8EE9B199E70D1
933D3F911AB4742CD1E490EDE5E33DE667C8A366B47D3635855913A356C165EE
742F5CF1C784869FFDA2FA0F4C3C10A5C14509A9D7BE1212F9D4338C0A9BF5C7
BDF123F35869044DF542C28345B79D92A2DCDCDD13C1E0B2D9284F4BFAF96088
E28D7F82ADCA5917E956D5CB18C222ECFF0B8CD8EB731575DC760F29C7EBE2F3
39DF879046140A73211E07193505172693CF152AC148F645920CB09EC0DF096B
C33C240B1AD4A2CDB4EBA51892912F318126ACBD0279CDC1224ED447A786C824
114BD6BC6DF9CD91B36CFE588AC3F562A66F9C59C7263FD542D547CB46164344
86FFDE9A4BE331C66DA29B656191903936C4EC74FEC377AFC4BF1D3A9C939B04
81DF762FD2180D9FCFAABAB3DBDEC3846AFE7002D4CEF5A91F477F9E6F495288
A636146F72A35F3269733D7D44F84EEBFF00615CFD47534AB982A022944E02CB
6D5E8EADB9150CA00704B00C08075B47FC613D954488A2369A863DA7F1A90A19
60B19DF0BB6AACEAC5C90CDC43B8ECE48CD0A9D288C1B55FCE515DD3D710746D
2E7BBD873B20C81DFC351B8EFA6914E56503EAC58ACBB1B752E1A2144C010BFA
C63E312AE2EC50436CBE015D945B26CB2A536BE6FE2F617874ABD73B017D0D85
885C475DCE36526758AB9235E01A09BE4C308A7BE16BE3B1AD855D819DB8A2F8
1D9A9D3BAAD9F17BBA05AC75E1AE38F0540B370F9784BA068C9D3517797C8E17
14CA7D2A094BEF502FFF0958F2E333D8576E6EBBEB8ECB00C846B529B72AB0DF
2BC9F421344D0EF5EB4E4647F68BDDB4710E4862DF5FC3104B1292A1F898A911
721546C31CDC804467E39E462715F394C357E473A8B6395C023C5564BE9C78C0
B65B868AA6E63D8F32C9CF4770B404B7F97A9CA2DF34AAFE5482BD3E415205E8
9C44485EED76A8B28493A17E863E46415D639DB84579E94D475869EAECDCBB3D
4572A6438056297C56C6C7D0E2F2791F0256567AD17C93C29A9C85B3C8702353
F70432277AD2029405A469B77CFCF965A553705BBEB20E775F67FE0FEC3A42C7
F08FC24F8F4074B96C170640C01661A6DF8168C09DB20424121E81878860F3A9
983619C905A71939A04B09A3A0F82B1D79FCEF6FE8EF37FB38D660B799BB0743
EF2E1E094103A35E3EB71D9B6D5A3669931B134BC76CEA09895EADFE8759461E
A84887D9A2D255A3495055A41E8ACE2A174948AA5441C37AFDDA286B299B22D3
5A7F242E2055BC402F2E1584F38C23D167CE6B8A2432224035BFED5456AD98E6
A2B52A4978B607D854F699ED4559840FF1A7542671DC4A1AE3F799A7C27E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Bold
%!PS-AdobeFont-1.0: URWPalladioL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-152 -301 1000 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB42B05EEB99F8B643CE3
F4B6449ED5A733594F70CCCD7BDB073E630C93A502476CEBA5741BEEE5938FCE
3E77996A2C56EBAE52B2701DEBC95E363E995ACEEDFD1CF8EDC72768951885B9
84F82225B3BB8E9522E784197B8AF13D70B2CD113F7501CD9333EB9A28CD9D56
824E9A3A689741D4577777676015723D17033D2815122B32062451E15DD271BA
6831FBB953F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D4C56B8F52
BCADC9DC83D5C7C45F5C6E60DF9F9471D42B1D6F45EF98EBE41997BEF7D56981
8F9AE898AFA16089A91654ADB0AE2631539262C43BC5206D6CB73867B19EDFF9
024F9C3C7D790946F34742A688BFD183A1307649A36F782DAEAA2D8E581C911C
B42485441FCE5FFBF911F1D9988FC5C601D09514633B415378648CA65F2D6F40
F7CC23901787522154CC33941615849C4E5F2600BE11CE10B78AE007EC0E5137
4C66EF207977C2C2CE5FD8E70A74DA9968C71790516F1489FB5A2585DF9F5E06
9552F391999992E23975398FA0F539A299EF090B9CA16E940104614A4FA8C6D3
495975F6ADCA90522557B3F02FACDAB68EBFFBB8579876F09895D723E482DDF4
FDAE645CD275F3A8DE44AAD1D4C2987B6CD35FBB18312851D858E2F382FC606E
41B7B9393EA57A7FB9903CE835BF1F8E67C15EC8AF980D14FAB1A56EF1A62E14
5433A36160111440DE43D4C8F28013504ABFA5BE40DFA52D34AF251629A70368
73B22EC87849070CC52FE3B74D259E603996AAF50D77304A8B6631C652E482D4
C36A5EA242B3F6A979331BB593EDF29F2D9DC6B35BB39A5876E5378E71CF09BD
151E4B759D53762BB109DE5D452919DE87197C14A816E6970C6476C8A4F1BE28
E6FBCDD677D4379E9D96A978EDA97A0F256534A641017C46F0637A6886CF10E1
EBD75689D3CAD47F1ED6096F825036BFE59A50A550F0FCC978EFE560113A6231
60AE7DFF1BEB6846A97F44BA6196DFF0E9AAAB0F3F34EA25A98ABC50DE2C1812
47CD8A7E2F2BFB159544B845133FCD3B9F46D1C48462A806E9E614D5EB37B65F
BDE52075686731382196CAC3AE3161EBF89944F88A19A5CDCCA280C5A47CEDDE
B826B08AC1581B76BE95036D3797DF9D68406C79A4B51ADF64776AE9BCAA6D51
1362E7A00FDF2C9A6D40F64DDA4B706FAB728B6F6FA9302B4455661480719E97
CFB7A10536081E4E417984862DAD762591F1E352EB919871CFB4FF8536EAFFE3
51E99FBFE366A8105105F3ABF883222A8596B5C71A798B4C25D89E1A97DF22AE
7F7C5F36F1025EB753B8EEFB121487E91658D1692E96B6A021CEA623CCF6C9BC
4ACF593CA80F3ED850D167CB091D6F95BE42F08C85CA35DA36AB230E3D91EDAF
A2B77B58F4D04FF628190034DCFE58B45A71579F9701691C2A5A57BC5C6B1992
738F39E279ADDF7FC21D76436C5E22167202C94B089B617755699EE01A4C7B87
E4F5D46FB80565D7EB65EFF9467A98BB2A1B06CD5A8AE30297EAD23237F1A1C5
F538FB22CAB1E57CBB9EF520D4E82FADAC6C3829A77B21282347CDE770EF4CDB
A6BB2FBF3648C5F5A0B3BE75E98F6E719AE4A222E708C468F8B757E3E4224BF1
5C2546FC3CD2F4C08EE304C75F8C275BA31E999ECE027C3F34F3A7994822DC58
7BAD51CF47D76895919973DF3F8DA82E7835A49860EAFCC0E659A9082991DC31
DF0B088BE04EDAD1872737624823085304CA2A9E9480BE92186290FC29C3C7B4
C27598C98A3DF3EB0CD389A52BEE29FC22398BB244AA98E0534CD3FD1A44C8A7
4DD5CF9B41D608FA42669681F72A3C3B7CEDF181D84B0776AAA08091644905B7
43C26A74C90C77B605EBAABF79818A68219E858B6E4B63F8E9BA65BF43438EF9
F52AF893BBDA215450E6174C5C555DAD5EEEB9110AE468D1CC587A732FFAE035
6382226C92B9537DF8C4F37383902B4E1665B01234AC83DF6D4E53F991531228
15AEF3FF77045FCD774A4F81A5577BD4B255CD6114AA6A305C8C2635D44EED34
55C90F1D36E21D52A210FECA5F50626F2156ABEC6BC7453597A1F20DDDC346E1
C4E776557BADF9158C88A253D74774970B11342D30A798FFA9B26E48E4728D19
5114A9B35634AC999453690C2945D12A5044CB0AE12FB168192AEE4AF696EDE5
4CDD8A7B08A1A0E70E5CE0FB43E820AACF407DB268F2760F36F91A050899D71B
F8873C2203C7003FE088725F37CD5EE2122D79E9E395F5CAB8B4637839E43022
2CC6CC2E73A8B7B88E1A128C703B117F616F6E9F716F0319307A660C06E76820
33B4376512D85F65AD30E430DCA35434BF21A4362A89E46F7DC96AAD0FDCD2B6
0FF9E8E2D038E6DDD5BEE6EA025BC7ED8AB2AD965E8A5A3ECEEB801B73F312A8
24384B68C1E63595042444FA75A02D07082A94D3B28BE10AE301CC183BA579E4
45175C7443E08C57B73429BB93964F504924FE9C00A60C733E43A02B47AFE712
90BB2D5AB03FCAF6FC56C26256B9B2FE8226C32B7662157E6D94CC34A4E8E3C9
2492497C65597085592B8B358D93E8BB74CB357380F47D21E1E8F4754E16647A
BD41B7870689AFA703C14C6CEC9C660F929FB67086BB7302290BD3B395000680
6571B9CD0D82FE7969C2356F9388609ACF2038E79BEBA97AE481ADCA68963746
22F1AFAE92E524E801943EAB41D345CBE471FFB288192C67913019CCB8D949E2
DE5E95217D9C89F8A76E6568C4CBCBCFF85CA680A7F1C5C5F2E5ECBE4D2F5511
9A0FC4A9CD662111AF6D1E46DBAEDAB0AEFFF07735D75C5FE9EE3134E9987FAE
BC8E47930AF89858EDE20D191FBC1B302043F06DD5C6C0B583AD1B76D458E958
3EACC692913D9C2B7E21DA0ADDCC8C72FEB0DD3D0308B396C6794D4108C4B009
0F25273486FC05C819423D837ECC696F1441068E565CD2EFE54417BC8C30E340
5ED62406FC0725BD88C5C0BA4822EC87DD6E2230044D201B03D979E13EC12C37
00562574F26A24E42EB7202E6565A0071252884B872D3A300F52896E507972E9
D2B907C6E8ECE6CCAC7684B9DE946532C896F4D548B6017EE32386CC7D782C4E
605642559C5D083BBA0ED606E1C404942AF2DB61C33ADE345C6AB919AD4C51ED
0C8D95A7A03D8ACAF3911F47390051A3A2055CD35D520B4061E6E8A158E92E8E
97722C3457AAFDABB03EDE901C372B3188E10E4599E767C15F2DCF09C7395917
DB3DB41CCBDF5DA816E2650FE1A8E7449093FDB99959E6E37BA455D5FA7F1B06
AC07D37AD0CE47D8A249F665B33CA0CEAA29B3472D3EDDF379166825D86D133D
B1E1BE7ED6FB2E9536E75E87C380B5033672AFF41409DC976169C2D18282098E
151B760C9CE324FF020B8AD5B274BEB892DD3EBEEB9BDAA6679FA80338D1D9C6
529AA171C31E8970A2703173036CE5374FBF3968519BAEFDD633A0E366529E01
74005C85080B2776B80280051611EE2741AA7E7136D4C8818B84C955D42EF905
37D9529079DF418C1143561158DBD1B88509896A745587FF34076398D5E137B6
E173391BC7FDC4C3EA48A011ED335CAEFD8C3B6AD1242A80146250DD77B44844
933E182CA7E70AFF5B14B02B75CBD0738E35DAD8E609265984BBDD588CDD10DE
AA79E7BAA7E7FFA6685B01B775FECE0C07E55FE09506EBAF30B9DDD8C16DBB69
1FDB28335BBB3DEFDB921C86FBEEB0F238F7A384087659245BD5AA1A57DC0E95
6ADC19E19CA5DF2F8CDE6EE8CCDC7BC2A8FBEAC4A8017A6E7BDE6BE19ECA6336
09A0F921F59D19BDDEEF94B13807520C8B4F0FC3092ED33B200AE21D0404DCF3
2BCB28A7373F882027946277E1C656004E34D740AB8B3F64A4AEE64F7F6BCD59
CE994AD4BD0065D122E44FFE52EEFF539E3EF538DB8ADEED01318BC9A9C8A96B
61DC19759A70E79168A4521EEE8E5518B94CAC169F8DD6F8727B7F021BCE3F36
7A12556306C5CA204B245758ACE06C4D84484DAF1EF7B066D04982A8660EB5C5
7B8373304A6430A70EC988EBAD0ABC1DCFBED577BEC9CAF146109C540FB4AEBC
EADF0E4CAFAA296A2E0ECCF2A36B5EEC6CDEDDD20883EF5F271247E624EA31F2
9AA46E25081674519DB7975CBC1587C49FE6F336680D6B3CCDD960C4B6C9016B
9D08A9834E95F8B2FD03244B8025004C7BB80C559B33861C324D239EC488F2A0
BFD5C81EC333940BD3AD8C75262EF6C5B60BD81D2770945D3D6A8F3157D3E119
9474C14257E8E029B387278769BB6AD6381713A93E5F02E55EF58E729E06BA41
5230C05A177C8E65CC1AE5190F1A6FB4565049E8821D464BC817B16A1777CCA3
D56A827CA6E2FB8EBBA30BA2F91BBDC31E48ADB3D9C7183B8EC192360878D62C
F471242E05D1CD18F7FE5FA60F8F48E2604F7775BCC1B2CAB6E839907C48BB13
E5227FDA302AC2C6E6E9E4FD19D4727A7BADDD084CBD56E873024034AE2A2783
A9B1A3C643DA48BDD87DC466D2E8CA4596D6E4CAABF844D9B3E036DC6EF89874
5860CC48E55E625906298C0AA470662BCCA90716C0FF768A9C7C69C1DCB4086F
1985969B4128A52251DB3EBDFA8F59FFCA5E7FC82E2753CEB9D39AB195BE5776
EB8D864CE0BC36AE063F87729AA95A15CB2104827B60B81FC725F1BD510D6407
B5E9877CD206F93E08DCAB3B2B7D233D623F93BE7C8AA2AA554CE30076978768
9B4557FA273BDB918C568DBB32261A1AE5B417EEED950D4A7A595E58BCC7CFBF
7364AC239D31093ACF0E98E2B8455D4732AE40D2E95F5E3013A331B05338A2FA
212F899282BA4E180A250A38D5485D7CE9D220FB1C22DD81BA142C0D2BA97AAB
23B0C1C4FA538D03872375F0733AAA9F00AA3A998A0ED3689017F9F3739F063D
8D05477E3BBA2E47185C48C0914CA2CBE13A2C0F34A122D1E2B251A1687BD9F3
3D1932764E6F3C7731C33D3F59A14E4DB6634B79F2983D205AA1489DA7D22757
FE41D36A56770F7E77115DDD49091095D60B4BD9287A9C9FBB0F67B045A72DC7
242641CA1AE9D54F1E37933E7C3D01E8E87F07D5397713EF4B88C12C471FB730
47F2C42DCB13D22AE443B87643A646B38DEF5B00A32431E5F8C9F50819190E42
23F95826531BEDB1297B75E73D446B75A675A6D42D94707AF4E6CAF2C731D55B
37A2370668FDEB24295A8CBA2EA4399DABA99167A84C7B8BA85B924EB9B11D5E
B5F7A29709A9950C4692B3916508EC3936CCAF524DD9538F30569F5ED5AEA66E
60E7CC5E86C283B54DC6057B35A4537C5AC127C73D69603D9F6CB7ECC6457C7B
94339BE1C68A0ECC5B2E11B01F40AB54602B7B84BDA5B469F2B1FF639E5E3998
43FD77433DA501B4E8DB7EEDDAD48C352D31BAF10907C9ECD20F4F23988FD58A
F96BF13E7C49693B9417053294949F2E1534EDC023E8664D09125004BC3E6C5F
8EF2B8B85F27F731F2E724CA428798FB84081DAE30DE61CE78FD29960FF57664
6321A29D973D1F8C891FD490D9BB3CD26C15A59FF6A1AAE21B672B1B92480E59
6304A04D922859879222847F8559604C0F1336981206A61C373EB47AD4C1D80F
16FB108FDEB625761D4E35F78F9871729BBE4D09FD42828EDC801C687084E367
5EC67E3989225645BCF2F3AA9F5D21A199A4CA4B87A0480419D5167455224380
AB90E4CA6DC1B404791615E9D4773FE530B57116F42E579A337C595D17925191
4C28316CBE3144E3F023BF6BA50DA16E98F797D7A45751BA538E2CCE1F103544
17493A74239D5084600D195997D9F3782767D31E5008CC543ADB69B0237EC819
320F71D1FAD30B15CCCA7B0877DC13F231A3A822D451809E3A93D518A0CA9CED
4B47ED59DB271E529C4C289A685A4C4D38AF17AE18A97F59C9512DBB46741DFE
032FC7FDAE555D5A49F181F6487412544643B2BECE160B04323CB87C81E0C873
8F3F1FB1AA04050A0DACFE798CCBD6223D0053B4638EF0901FE2BFCB58A864DC
2A2389A9A4422056B391CDD9C560FA17A1B44CB5C18AE8C5EED9F71EAE248070
01F635C57350E698892D5B62F9B2EA3610351622F8FC6A16FAB94EEFC21D8A9C
95D8F77FB176DC8BF3605D078CD0364E3DABB886B3CFFA93905399D2F52C8FF0
FD4C6DFFE04EAAC3078F6059033F19338714CA0EFE6FA7E1EE63D218B92FD4C8
C69FC8F2971478ADD828089EF0860DAAEC478B6249A125BEDFFB45A2F385A84B
B64B27DA576A7BD8350C28609D47395F38A5F34137558FBB4ED364B7D0139D37
EEAA782A1CB59AC7194DC8319FD802BE7341B5F4E5D10718F055223B29AA0AC2
EA497E7C94C1D7BEE1AF11612AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C
401808A4B2AAC060163819C8EA58AB5E2D77FF400C71797E970BF81334F2F843
EB703B00BE97F434F30C37FBBD4B2B539E0EAC0F22A3DFB0BCBDCA92D786D07C
025C3205DB72BB08EC68B2FD291F98C0B5DDF3DD2EFA6654DB7995DDF16B0AD6
EA4BDB87E110D76E8A7E64E1DB5AE4C1D0D766CB53D0E2E96A6B4EDF5FB54FD8
F60DFBD4B1B7E0041EF68AB5AF9B946FF9366072608144B05961497C62E1928A
76C33E730F739778BF03D210DBDA14114FAD3B7507A1F2E69489EF60C9F55AC3
1D62FDFF275A0A7A86DDD96474F7F7DD350006200DF14D897BBF7B2461AB5288
777DB575D01AA80CBF2A6EACCE272FC87641550C829B842881A19E630964CBDB
483D93B08AD33C0598C71A0B770440B5005D21CF191A2A9F426EDAFF2ACC9C2A
0BF16839CD7938716438D1C7691A551D1B385BD6E1162887BC00387261B1FD16
DD4BFDC262ACA28A45EEDE235ACCEB4E79BC3723A1D782D8D1E6E30EFB62ABFA
FDD1A1FB778D7E603CFAF4907DDE965ABA337414050C40DBA282BD3A45C7243F
926513AF92A888BF9CFDC10EDE96B37089A12B8A4E468D44FDB08E5039270FF4
5A3C9DDD840CDC15559A4F0E431838FCF16CC0921C373C5931EC9F660CADF52E
C7EA973B93EDE4A581E3DF5D2D69156CCADAEE84C735A63C2CB2F4219FD75056
E039B78314CB38C08EA9A051D4C954E607C53C3A76FF3DD4AFCAC6E633D2E840
B945109CDF45B98912DB5F1702B7509C02614BA445539292CAB53F11EBFAB077
9F695F58C185A9A856F8FEA74559B006DBA969CDC7B498CA458216DA4BA82C65
1E990BF16B379042ED4A922C15524D8CA7DE3161A14D2DC1F08C409EFEB0A6E5
52DFC7374601C4B394D13392647629A7A0390051BFFC86425F3009DE3613D91A
6C2AD22054F90044ABD2F686DB13F527B2581AA05F5A12D0971A7AB30CE15391
4AF9A4A2CC848CE8191DDC29E9795A3AA8E928FDC815535CCAF3AD1F216F57E6
498014113ACF1765C7A48D614D1BB8BBFB7FB22238BC4FCA63B1271C7EBAA5BD
8E0562960AA8CFEB282370AFFC99786A9CD36781DC9A26C3F294CCCBB0CDA6BC
0547730C25AFD261C434D1D4CFC2E1BBCE9CA41B589E57C5EE739CDFDEB8A526
91052CA5123E0C5D04735116B43CCF7EBD39380D3B4C88DD936AC7C426043266
26419ACDF7E89364F119A64E3BF9AE8E9AB20DA7A2EE7805CC7EA554B2549340
5491B7D963B5D22B71C1AD4C4BDAFDF987107DAA60A71780117E92418D40D01A
B84428D25504A213858659128F77306A41500E62C2F49D51C93E138366282A24
40E8D869AF863B36523424A2FDAA61A5025A2924A68E37689977F5FD83A8D886
4A687B69063847180B6DCA83EB97A55FFB23788271A10D773295FCED7EAB37F3
9214430BFDE103834356A6728CB1721EC7211F164A664AB4C7C6FE7EA206A7AB
C43ADAA652F91809FF91243F18F9EE020A5F6C02176DF5BA5DAA3F8308472B69
9FE8FFD273A2159F8EE8C9F376D81552B506DB994C5F5824813B878784571BD8
07C450CDB8D68E767B0102669CB93FAD213446927A539492EE43427602961B19
DDD3634F58057E38B21F897429B05E23C5E49EBFF0D3BDE9B4FB0A540610BDB5
9FC4EFF8586E5AA241F77604ADE5CA870961C65D9EE861F61D0090301FE2C2E2
37091723377A30F50EE2D9C8C41FCF68538CAA65023649E43CFE82E4F6D74AA3
696DD13387024C120F698446E62E36C18B53B5C7E530268B4D8550213E1E957B
991BA1488AFCC110AEE7D7440F1D63A362DD4E26E44D35369EB96E6A51C18E0B
C4346921EA3A8BE3B68263E00E8957540141BAD899AFC4C8A656A7EC50ACE67D
6900136D5AD497D5781A73D9ED02DD23382FDC5D311D742A0D6F22E851DFDF13
15C0679C0906D77AB2144E8104D548A1E83BEB468EAA8FAF6CA4C24899968C61
F14313E093F73C7A6506BC917B840F304A2C9A9D22859D177287C161A48059A0
463B17F3DFE8A73B46E913B99D2357B8CC88345E7F5EE733F3C2D6A10C5450BC
64630BEC43A687F901B1D0074192364C332BDBA57DA671A26A1BCD2442BB82FF
1E79B43C0488437393D604FB73851BC9CE83FC98ADD44640348FC66D5D74C524
AE3E224F765527EB0773D13C102DF9336F471D2CA40E2FC084FFC4DC484A18A4
736246184FE591B92EF86F4F0E159DB37962F5E69793BA05A65D4C330482432D
643CFF313D5240A3008BE61D1CB971D0F71BBADBAF4D83BB44ADFB7558DD9535
9FD9F7A5E8A9C1D5460FE747D637C095D3A56B3D375C1A8FFB0C8BB5E7D0A50B
33234AF28E55765856F9C5D6CC1859C0820173CB67B61284D80AFB6F061D629A
BA514AB69F42B4D0A858F8A3B763760ED716A244008383491EB6D081C7140CC1
28F24D361FD6DDE618AE9C38E2CCB6808F4B2FB53BEE827904F86FEBD25557B8
58348125FE9FA552ACC6FC5D8C672C21463673150CDB8EA0F7C67B989C512DA0
66D6DEC006F119E73E5ACB468A187E2A6D78D1506AF92CF5B8C70A2191B68A6A
FA0948DB4A4E75694CF0A6805837D5B87A7EBC3126E7D80FF81E9309F2FDEDA2
6259BCFF03976A2E130D8BD16F1F25312B41B125C59B2D193ABCBC7FFAEAF470
6FB9370FD101045EF1F9BCE360FDBFB4E1F0A87EEA79290016F6CE924BB916D2
F39DF175F5575D00FD1F68BC046006774BD288DF94D14166BF9F2A8BAD944E83
3B6B4673A6D81AD6952ADEF98274195930AF576E365D0642333A90A1BDD54BD0
42FB76A5DD95DF8F237CB136D3B1CD393702E29D8343E8DEEAC48B85439504CC
F77565A5A80B57419813197A87877653680FC543685F003C51F1ACFD9505CB46
F8AC47051A24A66990F227F07E95B2C8346C531F1133F71B44540E07C783150C
D2034E0851A76B59A8A014A95F381A758934A726EA77E1C4F6C1838BFDFEBA9D
DBFCD9023C35EC78BC102398B2620B16F0CF6BDC9B42159A79CCECDA8417A0B9
E9A8CB1770C2F25785DB6C8E7449133FA7E59AD1CC776390116C8C83848832AC
E11E3B20A1672E5A750F7070761B1563E7377A9335ABA742DBFE425EC1F0997D
5D13A8066CAD618F9F6F90BD05B7E410EB400BA47C7910CE9215D04FC1C06578
5AD3A906843B7D5E3740E10CD590A7A2D7CAFBE8631FE3EBBA55D6BB2EEDF86B
DE41A817AEFF0A584F6BCC0D819807A9F37C84D143DEDCFB27AD763C746E1814
DAF071CB8494AEB75615C7A8F64D13FDBD4FB5AE98A4AFF2CEB78F0BD6F297DC
D3779B48A23BA00CA211D4684B7792DE7D23E3E543B75A97A7BC960A7F742A2C
89212831110ED5B3414419F5E85244AD0E183ECD4B097EE47C07751ACD87EF2E
5BD3598EC528909B24430C00CEFE0193B628A2B88481AB4D76589F89170F7EE8
874A26CBE7CE368C5C05D05159B171C9034EDBD0E861C5A26F2DD38735AE7AC8
E5B4F0465D0868939AC77CCB448D3F583665FA323DCFCA75ABA0286FC31EBBF8
238D044EEDABDF0B060C964EE6F29D00C325FE6DBF1256CA535B2BBE6757B9B2
D28BD85A07688B9853894F854245DE64EF468B0AB2B6D45AD754B01ADD77AC63
FAB9C02E4FF4189FC6F40A4E08D0DC7127ACAA6BC7882F31B27F8EAA9A309633
6A91C8E30A8B4B5267403CD07FC3E12F9ABF4E0DDC2399C468318388466C97C4
5C02000A1E8891BE5F6A0F266FC400644AB5EEFC7B820575539085280D7A9BF7
AA3A63F1A32C21E05D767DB0DBDEEB78D2CA7070F27AA426B14522B136FF67D1
29560EF29715EF2BB0DF178C04C51F1913FF92A06550181A126F3577E87ADE93
EA2E4EBC42E27DF039A7890D46E0BA0904B7CBB3F555BA1D4ACF4FA88AF922E0
DCFD6CFF4B3D85424553AF1DA312D81DCA45706216080ECAF450DB04BF92BF9F
EDCBD09E0FA95297C1094EB34514FD96B44FD1B611E352B4D7C4C16789012158
F62354168C7E1A68DBE739C0AEFAD29D71FAC9E591E2DFF0EC3F82B9CB530A41
C5A086C6E391048A07B7EAC45A84681105D635E4F242AB7B707B9411EA354673
36E48AABF10B9399DEBEBB48B8FE731432B80691F4D5690CB2552722EA36733E
777EEE0201103772AE98C79BC37BA74E44047089164139AB79FC57DCC4139C42
2229845E05F3F41E93B824FCBD2AFC05B5BEE6E4E7DD4F7BD2966F81F4974CC3
0D7D058A13011F7E4AC3FC6209C5DA9AE28A4333914D37C99214C8CCA37AA3E5
BEC4C497B5392E4B8B648222DF87570F4CC0AA2FAC4961F6C7C6AE4386CA048D
94B81CA718F5FF28B9A77ED2A7C3FE384AF0562C85694C0BA4F3F4C513734D55
619FF5DD4D1C706683FD112D6DC3FB4C2293140D89067CA35A8CDF61C425A42A
4F4AE1E477ECC73E9F47F1FFEEE432C86563D58104E39C91A3D4BB6A51567AD1
7C93C29A9C4516327A2627A5EF9662949D1F51377E69B684C70E9F76F39FC77A
46FBA5A77AD08B56DE04017DB6D4137018EE75AAC1AAEEBA4642BF6DE580DD95
CE60BBC20A5316F9F40C1DF4B0E2FAE439B8CC281447076DB5A33F248950A75D
5E61AEB0945241080E1F40418DF16FBAE3AF4FFD6E2D1B38A5C500ACFF7E716F
E803A29B0420143F2DD25B4AD896AD01E3502280EA73D0A788FEAC8146D6F889
789BAB7FC842BF728A65B88317DC99F44CE1BB600EF4CA2979B558CCE199E924
CD065ED694330911D7AEF51237E27969A3F2C009AE77AC8C1A32893375C2CB28
4D95D246801795DD8012282F3BE38BECE60036836EFA9D85C9CB0414FA0AE405
3E68685158A8E97DA0BB4A8F571B49E52A1ECD75BA71B1F926956A2ECDFE9192
99665A9990A8491939F8DCAFEF6FA23D9E5F1B9599C84105A924C10BA4746B80
6EE206BE058FACA8503AA9D571C67DACBF28FFDDEBB699D00A1E3A90982F4249
865B8D7B1E0B84897CABE4D7740BC849A49121DDB772B4008B45A2A74BEF50F1
FDC33190C9163835164135B582C1F0286EAA96706D5F0FD13E5C8B5F2421AEEB
7D24E833F7B8BD5E12B18F3B4D739EC41CB885A4589C280B2C1AAC46BDEE18E0
63B395DA21EE1AD453F5F7B16EFE877510AABAF10BA3C7A4298A83F86AF97A17
13D83579FC654CF3D7BCBD2E92F191A59AB1E6E57518D1D26F7A93CFB1365BB6
C36C25969E1C1E621AEBE69DCF3FFBC1225D7AD6130CCBD547B4220F7478A419
0415D95011AD571066EF3CE570C336173D5D9EF4C45B8BB35A4E68F023488510
9F4DEE9ADC2E45DD3BF0F61AE40090494CD2FAD54DB2F0EE88A1F5DA34E89732
61CBE7D84547FDD5BAFB1ACF9410481D597752E461D1634D57CEBAB34BF27540
1FC2825E44FC643B724E9798755C8B28E844C6C3EAF7DAB93DBADBCCDF9ADBC8
1A3F255D68C3DE0047D179E92204831B65A5F41F9C8529C77679BE99EBCC1B00
E2687FC2AE93EC9CE0C63338837ABF83233F4BAF819C485A8A3157A07FAB6534
EB8D57B86113E10539C8E067B074ECA47977E3DF82C357FABE17E2E1EBFA15A1
C821F23BA1B2318199D71E1272BF474509ADB56F7C566F98A0D8B3150E7F614C
A6B8F3916BAF938D9C0D21B78D20B65627ECDD07C68CA55AE0FE2C6A22273F80
B5B513ECF2B27F22D6566F0C0D05F0FAF52A84FBD0775A32D055FCC1FAF28B9B
351F41AC11645F9E76EFE6A152FF0D7067FA57B561F745A1E86953865D451F5B
00287D5DAF743FBD4D219AD9426EB21FDF7EF88482CF7D305FE31DBB60E01D4C
DDFC2E9BE4709956583F3B9EEF084ADD4339B1552C248BEC00A15EA0644E6EA0
B2D2FC417158BEFCA363411DE10FE5FB70E0DD01174663D1A9F1714D69D9EB2C
285965F4DCF207F6BE5A1C3C4AEB59E5F3A933050044E0A9AE1833F6EBC9A137
4A20F1FE41200058570A966383AA9F7CE59375525369CA6A559BEF0ACE4FF174
AB871C254B8E7CD77058113B702B2C13F341A298CFF7F8EA237FD355ACA0F21E
F5CBDFCDEF457F82A866624940CE5E663A6F3DE8EE5EC67149EAA00EC8658085
03B8A070830EA0C3BC5E8DF9F395FD83FAE697F01E08C4E5E9DC24349F296147
84C3339DBF4C4D4D95274BC76DB57706DA244B8DFDC8661514CDE029EAA738F6
6562141D0CC94768B538891AFC33B1E9929C9CEE82C4DFF23E6B1C183879CB39
765C2D75DBD08E127CCC3793BAF10F2E7EC2710E3F20C1190F1DD809993A92B6
6320FE8B4E40E9494038C8C4146D9E400A2CF70467645A295EFE887F7830D809
6621E81AF13B3BAB884BB606362C91AE98EF4429BF719BF6CBD17B1F1FD9A7C9
0BBB6B0B37F5B23D88EB36BC2E699A11EC1AE28E0E6F2B3837155686FF593EBB
477FB3B36FBECCDCAB62AF3DA89831F134CD250F5205F9E44D43DBC6D9B820F7
06BFB7420355B06FB391DD9F3CC8B68DD5F343C14C3C7AA45C67039F2ACFB88D
DEA6D3A49A83886DB260065E423B426EFCAB132E16A88E8FC0194CE3B471CC2C
4DCD7EE8DA67D9BFF34F7DA3809637444D659BE32998D5641A652F2344956B73
D66432AE5DBA545ACD75938E834CB091FF098A8963152682BE8C4E2F517F73DF
AC1A28A299E8106180DCA5BC951838DA34278CD2EEE9E7AF9559A80D47C776CA
A4373816058E5C3998334F901CFAB1DAEE9D29DE41D6856A5A4517BFC425440B
EF27E12A6B579F2A430A703529E55B9FD605C18CDDE812A67D96577A0026C792
9C83DBA6663068EB1B8B2ABC98B7DBCC72FB16E4F6346BE241EE220AEA175BE6
1D1F7416AA706388FB0C7375A69EAE6398F9EACBC96383DA490E0F82AABF5CCC
53D001B0349E0454240FBC1F35D848BF0FCAB713ED3C6DDABAD5B05A01C7965E
B98966A34F5891EA367252B8E90B2CE208D823C0D02D4D654091FD9D762DF979
0CD2F2B2E2DD94C933DA3883212565A036F901A464DD480340CB226B44F2D925
3979A99595A50391CD5F4E165F7E66DF36CBEA7C2ED5942306F84A4CD51FF264
4D4D90D16EE6A4C6526AE5D994F13D705F0F08B752FE2134FFD00AFC9DAE4850
E58A9C893CF7E096632B3ABCBE078291B01E61A2DD28EDA14B5FF1EDCABA2557
4158AE9077C41FBBE956F29D1917487D86E52CC4A79BE12482055F168311A786
495AAAC92B40E6D67A3B2B8707B2C3C43D66152E7DA26D679ED4D87F89B2D3FF
1A88AEC6729E8EF7C58FEC4F546B31566D7C3F43D5829E6603AB00186A69020C
A5542A08A0F20CF0D414B21E921D342891181428D97F1EE6A630FEAA7E220886
B3A57BA549FBB77523CB12C6F5DEEE483B14BA4369E95F8C273681D55E4E2BF5
BA8160DABC41DA079DA4A751DF9A6109796D191C5CEF843151973EA9BDE8FB7F
834730E19E46C61A09CB68F10954DEDA2F6264B06FE833131E80E20D97F5F98D
400B7DD8D11FB10DC168A704C2C70DAEC483F69421872B369CF06A6E34DF084E
BBB3DAF7B5D21F6CFD57C1097A5F663D97F370141456A5DA72442BDC46D862F6
CE19229473A6A860D2CC6F72F9E7145638B4ADF04010855937F1F33B58CA6956
EA86D005762C330B259F0184FF5920C42CE1633636307C390FEA9AC4785AA1A2
B368D94A61365C4228D7404756AFF88FF10A172C60310C10FDDB179770EC0ED4
9AA31FA3F91F3F32707774DB00EB915B074539B0B98F7001609622A6FEC4DF54
4A81A302E8E86E26408B75445A0099EA06E67ACA22B1E387F336F588E0E78D7D
547A1C57AACB90A8FD5C40FB22842FE64313BD718A0E50345F764B36FB60C102
62CEAA93B5088CF9A5521F3FCB1FC8FD435AD5424312FDAC01C613D99416DEBF
3E9BAB479A3F9DA76C318D6D0798203FED7C03DF818D2F9A6B78E6AC615258E6
63C9D255FBECA07BE5CF6C29F308EF10EDC419BF3A54256E363F1E05B58EBCB9
B19F18E5AA02000F39551C3DCEFE8BA4312F6870154455DBEE6D4A863D811387
95F521C6A95DEC14BBB3E335A99C72207BC789EEC011E3B29A07F16CFCD9CF65
A8173F410FC5CA70E0DE9B15AB0178D542A4724BC1E1212754A729387C6E48EF
C3641A1DC59A816C933FF5319045F37F00DE38DA7BD7171FDE19B2407F893D52
3EB78053F26EECFC2FD37984B6B44AD59BE051C0B91D4BB0CF1E1BE6808D9893
7A7AF5F2E15801E0708687B0522044E704489933D99DC44948178F51920AC09B
4478300651F4D8D22ACAE72A9D41A40B324711EDEEF71A8C3865133B22E33D98
F5CC7AB19ABE805DA22DB03751EF775FA4E0517FF3CC2582AA9FAFAB0ED3CE81
D63F54FC400D56F37B85B4B88F3D8CE2F5A68FDC19A564D2F5B92469BA856ACC
6B3AC884E8B42640338C2E25BD0ADB2A64C8D1DA26621632C192F379D5A1CE7D
C4F89A5F4E07FC10C0F9D7E3FA7FCA7E8558FF8EDE9B11BEECA6CEAEAFFEE457
3D395F146FFAAF35B8BFCB30D14879C8C123827B762F2526AAB82AA6F6D86846
4493DF430263BE59576F848F65561ABD63F3A752CDBC2DE813C90D3E8A5DAD9E
7E4AC7FAF0C1B27E139CE52AC571B86CAB8807CEC8A8F7CE9A8820C46D6F5948
12736BEED5712BDFDA1B5BE29E113D06CC82E81EBF142C699A2FCA90DFB3DDF0
B6608F4AC418FD5D4DD569F9512423B74D57392DE2D0CA5202EE44F2538079CE
28119F23A737719F90B1E04873C9FE48D2BDBE97B62B69A2C3EC64543291A491
638137C7BE07B4671FF09BFAD3DD988339E9B9D403A31BBDEB56490D4DF5018B
25E624CDD8AB05CEAD3157ECB29CBEEA62017A2544698432EDD01CF2768F30D5
8B48D0CC53A8E86E610C7F68A82C5C9E1254F1B4DD2A2B49E3E4333123B65A2C
949CC2B5491599B3B5ADB0C2AC31A8BB4E577289A7D78AB26A36F4664A3DE943
EF5803A76E2D6F672352A15D2C18A5EE2448E22A58D3AA000B7860CEF0F2A5D7
9632DA394470691A3287A2536500DAFBE04933ADEB0B59ED311FD4DCE55956FA
22845E881F0C1E9BD75AF56BBDE24109B2B136AD0292B6F00DDE2BEA26EE8E97
4027A8027D3F4EC6373B30B203C0E2BF8618549DE1D49870663A518FD7FE762B
85987CF2C96233C87A1B4699D58D1C7E4B5CC4377968133623E1706CFB2AFE24
EB580E55BD31B793E4065CE83795F04D39233B8547D3A8E869BEAAA7C629184E
2CC5294823987C85B0C1A6D5250933CAFBC2CBC707BB968B61EEE38522922419
B3D635AACF51D5A44C841A968C8DE9FABE9AC1F128DE46B5A4EEA61949A87377
9B1EC4B7570745697621A30DD12D6983FA9D95A67EE2C1C07595C0A0E47CDB39
BEE3B790E1D778EA2294E84A32791E5E96831E7045F5C95044FDE2392FAEE38B
E1EB6D086F2AB69CC566FFBDFAF96729B1CB7E86DB557F84230583894306725F
B6B734C93F939FFC5263B75DEECDA94BF8024C28F61A2AEFB4DEA4DFECEEED07
43CFEA8C0F1C7C747526855EDF9248E96D580F3A2AFAB1CB9CF8D24671475BA3
E129EB7591DB77E67F49BC94ACB4C9AC15C3F0ECE67806BBD95A9F649546B511
CA248B5C5084537D5937E79F2AF3B19A51A068FCC4DA172C02DA888DE03D1D70
6CFF9BC8E4162D346EEDC7A5C6724CAC98FE603316B45F397A11FE1728A665FC
F325A4DDECDD04ACD60B440B4B15716DAC2AA7D4EAEB84E97643469EC1ED9B97
98C718E4EC9439628D5E5130752A05FA14B787E486CAB5C7D0D9AF69A89FE5F8
EE5CCB4A2E547015DC59DB33A4A8A1BE6742EB71BC09CF1FCC9E7E83A2E833BF
F5AC459EA5D3F07D909C9A1FE25B022D9E5BE2192EB79411CF355A9EF3F028A0
BAFF629CFE81D098BAFC9CCB6110398F577234A79D34F58AD6DDFFBC47882B06
3555AC00B702E679116130BA440578E9CE2A2621925497E2E0942B360686E224
0942E4F0DE93857F46274B0D9CD64B4D9C60174E78CBD4A9A02D2B39D2D90341
FCB50E717754F71745B0F8568FAB51CCD80CD28C8EBD958F763828B23FFBED6B
6495281E8CDC81E5582244482747776CBED93A74C35FEC78C3AF86F4B85DE1D2
6B0A2B004AFF189032A6F0D11C026236CE0272B37BF1D80F49365D500682EE0A
4B5671BCA1D2F554BDE236AA4DEAFD87E0B80A7F90B4B74F3FFD95F32C14424A
5AEB775B324E6B94B0C94FE857108D159517D1805C61EB75D2014F5B3644BB3F
93D779BF80B681E2D2CC5387134B9DFA8084C78F46224348F81F71E37E6A0C5A
8AACC29B924E7566C49735D8086F0F0151221FDB514F3FF8F9FBE6F85811C15B
15420E198A1FFC95BCBC4B7506151EF45E6082912003ADC29937108E379C6A3C
F8BF91B12440D85AEAAC7AD40E984B001CAA2A0276E8DDB98766BD73CC2FCAD3
7FC498AD7D34C3F96CB639217B0E4A16F995E4869471A8727B9138E0B18AF411
4B946853E05826D144DB95177C2E85697EEE659AD9FE712EB3029E680F9165FD
B7F0810CCF917EB87F4E0626C14B570A1CC5AFE08A8CF2D09B98B2CB6634DFF7
7503DFF05250A3FBE8A6D1C4890FB8A24972381217DDA94199B1BF2CBA97249C
3F511AD0108BC63FEE9981D4E4302B30D79637173C41AA84CE0F3F02246CD502
ABD05A63CB394C5DAC124118D14F2D6B75AD44C39D39A632DFE556B8E3EB2B4D
A853FD652F1B9F763D0E4266F46D05F7ABD9EAD9B8E727EBA765A319D5B719E2
D18A9CDA8387158A36D3D9845D7342345666CFF044A627B2F87FC3EF2A32FB00
CC9EE612DC174347EA64F8B571E8B7C5C268782C46E9FB276FE963EB7D6D4697
9E0B03D7ED2E4DAEE5AF5AC5BCDF70B2D1D9F1ACC7BF167580290297FB69A7B6
4DBA33EB85B12B868B8251D28D8304C794B11E426E84762D321D6EFB21C47DAB
AF979C9FBE87BB26E2CC77D07C5382B88F99A0D54C606BD3E75A7579950ED080
389F63497A4FD76E7B6F018FC12D08B27A122E5137B9AF2B1D6308035CD9A308
5FFE60901DB0F5E694D41D2F6452A95CB68A4EF45555EB49594A3BDB0AA36057
4EF89286A4C4572C38617080B3C7AABEEB54786AE895170047A4C1C9585A491D
3B4E48381E93111895943C6CE54EF09ADEB2CBADC9A38AD8BC378192802F9200
F38EEBFC075677C61515D91B49282D9F510899F9F3EBD320BD0E00BCABB28B95
78372BDD73B0B19BD1D47A1FD0EE0F9C77C54B640D0377455469EBEE14D50CA2
B6089A597FDE44FA07746FC14EA9C97BEA1670661F444E85F08C1A96932A74B0
3FB31AB682BDD2C794707427DDB023ED523C3E4EDB3CF665508A514BCC97F7C7
C03F1D5F47480BCCE8D70555F7EB0DBF47F080390CF6327A6260DE49AEC95DE6
C22DF5862739218E6AD2F2EBA79C496E3948216F20882A7F8AB13CFEEF7837A6
BCFBFEBD5D333345668645D858C25772F545CC55118767C1320BF77CC63CE08B
FA692B9E9CD763A4F9A9ECC28FC3F51FAFC305E955E9FAD6BFE1C2550EAE0F28
A722A107D9F50522E18C28A0DCBD2D88D7F5E856CBA945A1E599522992F9BC2D
AB7A4C8293B64BE8D1DDA958000AF47B5767650104FF80A5604E068C5DB9E3DA
3933B3B0184FA3AFE624FBF603BF013D239662DFE6118573DDB07F5E27A4A336
2FEEA998154F19D08CBA35CC6A06467A30E283C37B76650E61CF5F7C8B15461F
E1CFFD27C7EFFDAF58794DD2C141EA41B2F6664725ACBBB614E9E8332CFF6735
BCEE262F82249C734FEE1C2DF48DADC582BFD0B364FD0319BC9FDAA67B449D80
001F86AC4A59481F683733DB4BECFD8690003FB47E70388417C79B7A6EC8ED01
557BF941D0420949B66EF625942DC87DC629BC2FA19A2917F83B3F7CEBFA0876
DB3F769CE8392C9F6841D27F895861BF72CE945748515CC615A167D52D163378
4AA9D996146289C5C42ADA9D8F4150FB3FC23BA59AC05018A8ACD3FCB9F6FD33
39234617E60C1F9296389424C78D985904A45549FC3951E7794D2D37E4FF2068
2338AB4A914E9FE9B4652422D09850536391919A10A68898B216F822C90097A8
5D777CE50B5ADBE9FC417859AA58A09FC82F707B0F5B54914B7A3B7FFC28A8BF
18BF222CB58FA7FC03413E80C8DD0B374EB56DCB53F97923619B9BED020C8B77
7DF428700F599C4708E827B7C54E9ADC39E90AAFCF9F9D25AB7477B52B66D2B3
840F91BB16A630885AA824ADAB73D1E1ABCBA215DC2A2DE980F30FAAAC26C4D1
5B7249438A80FA6768C65ED06840927009709969940BCBE30C0423CA7EEDA091
0B3E4EB0270EEF7B3CCF158036923369691D29A4C6749F3056A59FBB3A39FEF2
CA5FD90ADEA5A94D011C708B292E3592B1E9F0FF664F5BF0E45F67143747CC61
B6FF27DE7CDE79E21D8C0E8E8D2A4DB8E812B5D929A367639977390AA5725946
2229FEC0582B1BADA12394F4D22786E1FA746C4A1B6ECFE5854ACAE6765D6920
73087FB8B8699653B19211BC0FFA0635E48FAA33D54C1CDEE8B8428DB149009D
CD6B0503D4CCF6FAA1B06FFA13F33AD07C5F3EDBAEEEE1EC512BC3C867C23400
A3C6CE031344A9E259704CDEAD8C11197BAAD9BF6B512B5F4BD28BB08B7AABA2
4CA7C1D6F13CE10842A183FCB691D4117FA5B51D0619450578AC32775C7AAACE
6B7731A938ED154F99FB7759B6B047D36A5095208DC994FEF71007B7BE889741
70A0F7549605F8B5D81CE633C26771E2301797808E1A103322AF2FCC3ABC5603
64B80233394BE6285B07CAEC8CBCA4BB45C42E3513201BD4A7CCB6B190BEE558
72A096C1AC2E90F0999669AE9D4255FDFCE23A5B701F4B1C79F96AB3D116AEA8
2D014ADF5D6091984E4B3BCF60A5112A8FAADBED862561F6E495E95CE9B85B11
20F98A59EFF8656FD10D1B7A8652B30AC3231985EDCFAE11E7F1F414CFAE93E2
A70EB049A6B07DC333BE914E8250F3E2CF284D5A1A7C600A5A4079A0521F7603
7445ED68EFA2F58F671F458F7555BE29A825E1312DC5BBA3B6D50A0F300F908C
DF2C831CD537B4713D7FE26E9530982FE9A84E8D9CD115FD8807B3DA5630F509
B369516C9F08E45F9E30B27E66F0F072A304CB7FEA019B99CD0635E33CB76EC9
83C536775D3E5C62BF246FEB7844B2BEE3E085F5BED3025F1E30385363161CA7
709AB7F3908CB217091AF2CE326601A434576335EEEBC176ED98FF09E6331A8C
AFBAB845C9D0F5F9DE0A5AC3C9CA72D06C71EF488B1239BEAD7FFE69216E2C40
5957643BA23A4228E6C8185E448B9E063D0F3E856D25174897790032BB3E1E0C
E977C998E0AEB8E2B159FBEDDE0017423BE2BDC32693B13B7A22AC4BE901EDB5
2C881153E8BC8F48B6794BC82CF64081282C8F85BF3F2D4ADC48E81C33D9EBA0
80BE5F530462DE46C1597C114656532E6E1C7A770F36CA5ACCE8D9EF705148FB
6E4B6EF886059EE01ED07F5C39A5A29C278D39E08FFE086944A991D700DF7E9D
0B6FD4AAEEAFCF700BD14CA07E36F730F4D5F4A3B7B353D3375A81E55FFE2143
FC13768C60EB5FBF43FD0288A46546AE2B6DBAA0825FC78160F94E7A7A0A7B1E
90F7A216EE075AC29DEF581C792C249DC3C0D2EC0B8264F058FD39AA1113E042
6D65897022A78E46D0303002597F1E446DE914A0E9AEB43C042933718F77C867
AB29CE72259912A7137B529C85CC7D672856BD37A35E02F612C20813F43647D0
36AF27265D80287DF19AF93E3E848A20FE4C131256E145D1C2D38C7CC7DB7276
04F4FC39E0E5A1561BFCD06B6964A1B3C9B2D828E12A12302FF6163F53A18E25
F8AD460BE49E7594ACDFBD14F0C9996DA5DF8B79C4A64D3306CE7D1DADBF255E
3AC2AE8BE0632A7462653D1A52B253D65F500E02D31F863A45AF48261C0FC6BF
721B7ADEC0DB458DFAECF8EBD7D05EDF016523E1DC2CE9752C3A061434A7F1A2
8D48B1CAF70C9A452D4A7919060EC1BC893E8FD501D5871DDBEFB97B8A44067E
60D9BEC46EDA8D665470ADBFED8C92310360490E014769C8548CF09532E8B858
74297D2A004A395C667EF258F6AF2D9BC3E1539A17E80AD6AAE5212AA9D42729
3C7B82E6B7C135E3E184A70D03ECE2CD87699A7D63956CC992727083A6F1022D
47B4A80E9D87532D54A34771CC5BBD2304CEDB7F0FD73F78C46E9C980BFC8237
18DB7201A40C8431CD77D0E07A3F1558E1BF397A7FECF05E9E9109AF63260724
45B8EBC1C9F722A66A1FB2FDF7F5A1C6177E0DD6E69F1234D6C70E71EA04D4B3
C7304E21A41476130ACFEF8055F1C9A4C9B12DD146C1D3615DB0AFF3B1031843
4A9E146108E8D13D01BE4D022B8BC928C0EFF48855274F46B8454C44979256CA
4E9D143467101402CF37532C28DE2CA13B139A602FABE6666FD1F9E4F5899116
83145A5BE105CF83105863A3DF7E9EF314CDC91F903468CE4C7272FC4CF5B56A
4C8D280FE2609BDBCC43102A8C2CF1919579C0EA223E2DF4C340E1D21493BBC9
2C2E5FE632569F0700C7FA4F24E2741B49B95CDE05CB294D5DAE7218EBF0546C
9ED3FE94F0ED385BD4FB5C8E781994D990EE06B622CBC18565C9ECB662D93246
C8780C2E209E54BB06CD4787A8A8EEED61DF5CCE2D60748CF484DE10D552F14C
A9BD1F5D769F9770F3A20CA3E90C5374FFC361305AE6FB7A8524CC92243AECEF
3EEFE6F90F706378B063DF5DCF1BC45FE439C14C6A121D01D90D44D5D432B99B
3837471F9432E1968C75DD52186D5A3C8B16A8D86A4DDCB11635BC8DCD00F445
DF1B0D06636C2A76C5B47B2A603F4EBCB1E3A1CB1FEFD0EFAA12D67786A876EF
12390D4331F5950C08B126205CD60E8333C6ECD2529385C021CFA2B676AE0ADB
A35A63C0E878B75E9832E9011A737F6F635E8F3768370A2EF9816D194AD2F572

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/UniqueID 5020902 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748076
52C3A3CCE44DFD38C1A870AF15D782F5C403C5A9A475217E3BE7967360F89551
3FBF9B83D58D8413A45EB18DF19455770726B7082E4C33F9449E6DD6F89FF265
2453807A286AFE8DA4988BEDFED0C357A977805FA702F68652A4BAE9F609047D
B5ABF832032CA1F96E550903DF9B8190F9FFFA8AD1D68385057BF5B7592F73D7
024231193023D02D89731376114C1C0300300B9EF15A312AFFAE9B89C5965996
5C1144C7F8E92600D0BAA927ABC183A538251EE2CF46FEC77739437A52505EB6
45502B99547E91C25D86F0C590D7FB9E51E09C85C5BCDE30D15CD9A0DC335FC4
B589DB92B21ABD5F4A1828236BBC63F11D5FCE4783729578878D2C9CC4DECF24
6DFCBBD6E44045F23AF2CC8C8B621E9E3271620735C9C7C11C2166CC9CC6ED53
5A8E49C834D9A67B584D1FAC4714260B22178E58171EAE1348D1FD7F86AF5DBE
94FB5A2083BF5C7671606BF4B02AE069BDB00369B9B9089CCCF80F6FB7A324C5
A752A3774143475E1714EDBEE8E521D9FAA2FB7184AE70700BE94273DC383C3E
0FCD9102FD16EB35481E0B0B753DEF0357913C83BA2B0CB0657399EF0A213CF7
42E22C285B8940F89B5C7F37EC30C88DB6EA541956B904DB911D009F0B209BFD
C2EDA5F6A8082C5D91442EA1B50E761A116748EF16F2BE0F6A35AA1894A23651
DE099389D561B469BE5C064C973976EF232F76C9D0C0793684D68FE95129C325
B2331D56EAD7EC62CFC83DE5D30412F4E1ADF2D35BEF3E50C07073C5F6505477
46D39693734B16AB45A42EEA45C2AC7674DC25EFCDF293E254199E88FF50876C
E41413E660A1ABCBB984131D9A062696D70BF8D07062B9277B6437FB8A325FD0
6C52CA2B448242D6361DEA78D324962D39A3FC13E0275779BCB725F320D9AE61
E84AF9DC5465E60EA124DBE9C3F780001323A4A87B2930E55B90298CAFE94905
30D6AB03879092F74727931DB4E46D2B0A64F6B35E73461E18D88CFDD0FDF847
E30922BAA41946C3B5CE294CDA0FAED568640A6367E66FA088ED6CF45ECEA90E
68E248DD2BAC0AB1C52853C00C76410FEB4C0C5F81392B1EFF6525935D443D47
65DB43B2BD125E56171FF2CA6C201F6A0DA4F1C62FA829EAD7149BC37CC86A11
48B1B22A54B24B3485E72FBB9E66952C5164D1234A97255483B5ECB1AC905D7D
063A4E9B02E582EC2347A9D9D536DF4CCFF73C74F4AAD1D8BFDEA0740C25FAD2
7F92289AD4828DA2817B484A03C561F2703F8A109E6ED8009F2E018A6DF577BD
8F1A3F44CB1C98E0E83B5252FDD141845F54EA2B00A868D352ADC10A564CF095
DA2C9CEC2CBDE3F7CCB1D06D794B711E155442B85FC295D102DEC16E24B25FF0
4D28196C45BF68C0411F2536407985F4267743BF8623630C1C7B9AA0F2E7E87F
0F5D670EFE674A602E90C0E871054B5EBE67A40221FD9BDC2EB03C158F09ED26
618FB9E80168845FAA35BD4FBD72937427E4F481760DD6B53D3F1B4B2CC627C7
79AB8682323159072ABA8ABB704C21111D52461A67D442FCD554DDC69B8CFE20
9D1497290B709967F0FE0ED9B64F9EED0F48C9CE0F760604F83568D74FAB04CC
ECAC1EA93988BE254E865898634CB76A4511DFDE03CCC5709F6D806CFFFDB6FD
F9361520D50FAE42975993E68DA3E1ECEF8F3FB57A5CC84D1EF86A528AB762B0
9723AC952E6D0DCB7D728719F0CEA7EB0A7B58F0B3A71010CE8BC3CBC4698763
770EDBD05DCF608CD94CE466C1FC3EDAEA3ED25C96FE89A7CA2424ED65F147D6
F231B461AF422355101AC49658B006818D52F77FCADE8645F9B630587CD70684
7348B1CDEAF3D7BEEAFE090BFE53830F4FDFFE499FF36BFEB979E939BD9F5E35
65308E9D154DBBE99E3D4C5F8CA95B9FBDB06AE883C302B4E5C2701E8FC0FE4B
1991FA4DB6768B5AA0D76E56F08FC9A9B34EA21D41906EBF276AFC0B10B2A7F8
F2E030BB8286131558CFC4AC59F2045693AF44D65D9CC419BB338FA8B93BC161
D7AB688091D4FCEDCD0999045276984C25B22F3B9C65E8CF6C31D75BD04A49C8
76F1F9E2B9ABAC86F4D37E0E07D3E78A03C19B79CB0803F2D9A9818DFA66EBAC
4EAF1F6229E5D66D7E2093DBB5F6D1E8E65605CEA6DCEB21955C2BAAF8BA40B9
585D80E90740723B18883CD2C133BA659B4BFF52A212CD5C558D9A2A3EEA83FC
CA98AF5344E512626449B72807C836FB73260A6EB2EEDD055003F980C14A38A5
E10D05BD49D95A24463DB8934010F28400A9D77C06CE7F8C09ACDA35F2540923
6924D6C5106BB333CD1C136C2E201EC0DF0A16E0C493E7CAE7B2D89107E36323
C7E43827D94F405CA01978A789CDE7D2B8FA2C8C2E341B5ACB686DF55B3F5CE5
B3B5F7346BC627A486DF20723ADEAC39AE797E871C200CBC42F078106DD341AF
9187AE35B89DC6B3BD84C2FFB343C8C54A39C58AA7671C7A7B959E2D9E529281
AFAF67E92D912BA3D3EB01BA01C7D03C21C23445E773F95E76D70630FE0D3F09
E0F7FFF90540B36955FCD4B3BC0A0ECF11F500EF4B5B19F7C17A43F130300A4A
39990EAEA7A5C87549B55BB8D000782743CE73B766DDA10522621D872D3A23C2
C7A760AE7F827EFC7C3872645D16DAEDE193090DDC61D36A54C89127E120BB74
93343C888796A44B98DD8C31965F3166AB157106223A41CC11131C6AD82F22CB
3897E123B2A65912666B9CC487E9DCACD5B93F1CD1F7A21DA02C4C8510A99DDA
721ECF73939E5820C8D29C5C9292064C611EC76728DF3E01D825C96A3D6B25E3
0251BFE2384F1E12331C135B6EE8551F410D235013374B68B22E84D444F8B0FF
990EE51C11CEC90B44F3B67601B7F4D895AD837079C56C0EA32C69368577F6F1
8D78D8828C1B295CFFECD6C4D8C5E0E8E9362FB3B724961780666C59429476D1
3ACFDEA9909D51EBF6613C8F5B43D6FFCCCA90E9BB22443F9DCB29B18D6707BE
8779A095D31572847CDEAEF46A7359FBD7795AE076033EC47EEE5120ED1AAA1B
D0BF2119E9ECB6A1D0E2B0981A72A95DBFAAF3279030ACFDE78FAB6D2990475E
627E84B2B881ACFB99667F45096BFBC7CB0656BCECD3B72B497796DFE1DBAC19
9EE66E7E934A22BE6DA80EEAC28FCF46E2C0020B3E5A770B2D3BD5407CA5DBB0
570F67C7EA93055607BFFF8AE143A5D959D55B5D05601E8D9480CF442B50D7CD
B7C7E200A4ACAF82CA3E4F3830FE8DC36E085A70403A25DA3C86F92001AF8BFD
0A464A9CB0AABD6A4E32C2AAE0DA8EB8DB356EF553F6C8224C4D99B4161CB673
BBC56B2BE617A2BC0EE09651176EC06FF418E259540321FB6B64A7EF557567E3
C26666A034297DADDC0DEA9E7392A78BED123D632ABE95D2FE9EF70730B7ACA0
1D088C075BBE8833F0EF7CB45D9FE7C62C2459DD724D7A7C6710E452E32353E4
9FA463B50C8EE70033043B3894D383345D98B688B7717B9D19B5BF4DCCFCC1A0
C988A785C42ADC55F988B679FD9447309182C38A718D33C98C1F7ADA7BC7C6CB
8A6FBBB1AC0529E4709DBF4D5D6CFEBB31E155A59C700F9BB43368414FEC0DEF
89BDAF9F1AB6EEE0661F5DE20D1D09A0A29783BB542A353B5DD90CC39602D7BE
CFB8415595482DC12812898F09BCFAFBDA27E1E9165BA42A7BA32DE8A76D5B07
C2B8205D369C14EC542C6E088F52672A92434E890EC0C6933342E8B87E3A2D31
518C77752B4E38FFD6D305E1C31B7022B5266C161B5475BFF392DA424FB387F4
B6928EFF9ED6D58A18643243DD178693E1DD4BECEC60DE141D93AF50A2C16AEB
49DCC5C826B6A5512C768D2276723B048F1B305234D8912CA1C26F402C0E17E8
0F21CAB90597C96A85901380127C93036B10FF97CCFA254E710B0796543672AB
8B5940F5ED4CB428D0562385AA9E6E617EA0ABFE598494804FE7F517560CB6E9
E5784AA6FDFA6894DFCFFF6DC6AB251479EF5CACECA9EC4E597373C676821EAA
4F722D5C5C52C26F79597B99E1DF5B7DC66D1EE4752C2028A328666AC1C0974E
8CF7ED4AE09E5CD242B2922147AE722A6E55D2637B5707B1EA7120BFC1933676
2A068BD9E596D5BB11584C808B41AFC66DFE1CB850D59E59D31484A4F13CD1C9
849D2530CC716187B2325BB25D3B6C49BBE571D57094306219C29BEF273808B0
39D4D0711DEB9235D844995D567220A13B985DA46CA4B3762FD4A7BA294E3DA2
4350DB1ED3528D12D3D52A390139889992FE61F582766982B52A94FD01850F5B
677448E0A904F5936EA70D5EE6BBF072A9BB92A31BA2D3F43822FB5B9EB86D41
C6E0691329868E4CE305C01B4F12C3BBA65A3EC86B6AB89D649E9B1605DBE4D9
71B03984A42D3CA493AA7812AD251740C51D64768FD734AC89F27AA5429B6FDA
428EA6FC78F781EE1B1D7AD610F9F46B09A3B7A901ED87188D17FCA8C4B96EFA
00B482421131E5DC4D5994C545802FF0579C8660A7A24BBB7A5523FD756AAC38
D450E5B59A44DA8B82D544C4B98D21A158F23210904346F047F38D48E9028832
673DEFB8931F0E157D07C8FA65E2097BE8B7487271C9CD04BA9B1A2E19D3A7D4
AF18DD12E3EF5A1643F26708C14E516A53D91E65BD2A319A0BC0359E2216ABA2
983EA48039D3719CDFE2E68562D7BC2CBD6B85B04A32BF2D16681F19C6A862A8
12841128EF535DDF10064E7058763E56FB7A9F3DF2B670E98DAE939BC91428F0
4EF927A1EB4F2EDE265DDBF4548E007E674E4DF6485E2D4623F666825F225B08
785E4D52FDAD9940FAA82218FF4DC124C3FCAE64280D58E08A7A6173CFBB984C
95B6E99267D628EDAB70AA7A60B29BAD58832D684D896EF4AB348DC82C66BABF
0CC0EF46737EAA7C0CE6B0B0B3EFCEEB9F0E59E65A0A2E7ABE8E7CB9BFFB51D2
0864A4F1634F5D54B12BAE634084CBB33F33B23E6E833EE1403158FA11537BA6
C7E545DF06BA02541D44ED01A69301D58F123A4E72F40C033C7B736027C8C625
6B73E8336B5EDD36A455085122C842D25E57FAFE95B6BDD6F2D4C1BE147D063F
DFFECEE4932F338B34644C88FF241468956238B7CEE444F728D35CB997920C4B
3ACAD0260F41658D84FAD3BBF6975A064DB80836BEA54F892556D4452CA9F339
86CB0BF5D213AB8FFF5E88AAA0421082D14018D6CB6F769F3DD9A61DF2B66E7C
6351BB922578DACCDEA142098FF815438022A0E6BA9BC2C459028CA25451B152
0AE28C4B5A74D45373762D067E41E989ADC2194A568CC6A1A6A92D6B65A196A2
EB6EC73EA440459331E63ABE9D4E769195AF23F3692B6AC91036A769A183A55C
B79FE6595FD28B9A3B1DC0E5B66BFE902E807A467BADFB517BCCA2098E62CA38
6BDBA37EC6EFEC3675E136F1E1F7F9BF42EE6021CA66E6373911F1FBFC18C07D
A842629BD09E7EC371528669647D49412652A4A433F589B48DD63E9148F7DE6F
4C324D968C1EC46D3DC67E0AEFDF107443FE1AC9D35921512CF9201270B1518B
8A6EBD2F707E6C05EA6A35CB7288BE44222C837F1A9D33DBCA50965D6D585557
1713D14C05CEE20C29A278093510104484381686B543DB1F9A0712211DFABD97
98CAB755E790BFC5E0B583FD39505B6745833B17D45CC8C55ABF4AA5EA80D30E
38B82BC28969ADB91ADC4655043C6FEE98A3415455B000C1B1A8BEB7609B8C27
1D21D9E50B6FE7F91C9CE13190C93A4E3AD25FB0DC99E21C1ED4D7052024E8F9
9F8ECC41DCF3831F7756EE380E06FF54E3AE375A83669AB0F108D7739D12E63E
E71CFA203007E28ED6F08EC59505A5668921650C280381F69D27EEBDFC1C4CBF
5C858691C9024D470DB4B1137B7A475AA06D5C61CFE3085F38C329CAD8A625FB
22B3D831057D2CDBEF4B0BC136CFD05CA7820D7CE1159A329CB8763A1403A963
1F2915F42EDEF4C3B8F415DB5177724E5D470B97DBFE4352C75857D52FAEDF98
19BD6EB6CBAD88BACC88DCE15B8A07AF954279ECA28821843838D73A99B95755
2970DF346444517F87383D11755064802ACFF8858A9E618F07CF0DD9481F2A93
CB2DCA7CFDFFAD38C74F329E9587B0F41C27F5216818CFDED123C1B0F60946C6
806E059386D563875A309348DA45AB6636A18070E4CE7505E2A512E516F8C81B
4809DE35A0FFDC3DC06893ACF1801DE0CD4193BF91CABF06B1ACABA091016A4C
D9E54782A4DE5F6CA356BA10D853F7E67CF3D2A5F3E384565EAED5B4F1F7DD8F
727C15F8CE312FFF8BB689389275D744A2D99F21514F192372119ACA0A8BF92E
06982234ADB6E2FA58D93CB58D65CB780C6A5C0AD4EBC6FD8C92DF40B034E592
AD91A1F24B5442896DD8B4FF54C31E7394C3262B873FBD25C2B923FD095DEC74
300CF326E8228BF055FA2C8C10A446C85AEAE27BBF8D2C1CEA2EA816EAD15184
205B70E6CC01D9F32E7A76718A1A4344A919EF655B1C246C1A7D0D4FA04F8E27
3CD891A898DFA0A9D1F4AF491794F926CD6A62AB1F0E83DF643EBDBA0DC3091F
A99E914C9F9F24735A4EFEBA6F5C7092CA366C17D8A6695936B393B22A2EA4A4
915D56EAC459AEE921F951DA4CDCC8BB177B0FD00DA4BC52BBD041C0AB6D11CA
0CD7064D87ED6D4D04298C47C9E3036F7F3565B4241DB719873E6B569EDB1A1E
BEEF152C38D9D8B28121BB7350194BAB384B3EF71E22945B112464919F66FC02
7179703D3B5D382CD313AEB2800FEFC21B27C8B0133B54E5EAC6D1682DA8C0CC
CC13D2047B14E425C111625079196FCAE53962886BDFCFFB40EA6BE7E762017A
25D7D70A22378893E105814EE25AD00E74603FE7E8D6FCDA69EA9FA792FDB501
9C50DA3639ED147F434B9E211B02D9B997951870F50A460D749F510C182C419F
BFAE03CD09DE55AC7AA6F0B3867E7E7198051CE1CA99C90BB21EB3B5E8D747BE
849CF649620F6B3E78C73A344B8488B6E82DEA794A079F704176D6BCDA6A60F1
06DF8B9F3F245E98CA8A887B51EF17F3F4539816737E7ACA305CD71837F30BFE
C480BE9242AD5591E58E170EF2A1A4E47874023BC6CDFB93897D076F0D181E63
7A4BE5F0EF8F00A1F7B10D081323A7D2C1B97B3CDBBF62B3F8DCB2F50B07C4A8
B404E21DA137BDBC179E883E5730ED171996DC8C4EE27F0ABAA1C90700AD3C8E
96F2862506A420DF4D6D21EFC7DC07D66E73E8B24394FAE6E81C492362F47FD3
F1D258F64727DEB104CF48F1BC4220E26536D59926B6EF11937860FEE0AC96D7
8ACB20B2C854008571896C49C63AF570DCC3C01377B43DC4BD9B44B4C2545C58
A42B67C04351A9206A7D120E524F24455EEA90E2A02442A6A77223C57E38FCCD
284A7502DF3C6FE3C161F63028E42E3F2D2E78E85100AB30A472ED1E9A62CCBD
4E15BE5788891EDD3E21DEB4DBFAA9CE195855FC8D5A9E325AF222E978DBAEA6
E373F2E7F47C65C6D72EE4C7E164F6D0C6B3E2BFFDD1E55627CC61D53CB9FC8C
2D121C1E35946FEB4D5F388E807F3E3A6BCCB920894EDD35C8CDA07D85C8BF88
AB411D76813BC1E74149E54E3967B50356B12C97322154B744995CEE4537A151
BED60A5FC9DB45225B27D181110A6C24EC0FF3C6E50B1B9205B0D07FA5496BB7
5F0F949911F4B5B8FF466ED1DE857AC9BA54E0DDA12B486FE78694583633D8C0
FB19277E845007B85177B8133A78CC62CD10FE59D10AB3DC36073A7D6C2EC958
A8C0219762F2BD2698BDF7D3BC74906EF81155B1A3AA6DFC5AE1EF9767549C7B
1EE796727D37F76E381F90D0BCE2A68F9B2EC767BB8461D0EB9DD765BAC7CAE4
2D164DAE5498426753C4683C375BE7B13CE7DF054889B3FFB7DCA86BCBA930CB
8CB10B0557EDDDA4DB16F3641DA17EE2E80C7DEA20568C8F734FFEDE6B598092
258AB8F2BAC9C2FA9328E4045D7D82727539091EB0CD0FD5AC567BF8B9CFE54B
CF071AAB15D5DB7793E0FCC6A81F34DB752927BFF24C2E7911A5EAB9CCE573A4
8570F00AE1F520193BCF34ACEFCAC81CE25DE08C0B183829EBC22085F5E702C8
47F11B95B99EECB203AB15A9F4675B7538A3C83512CCE1CDA8577EE2A85036B6
053872F59FE29FFFC09C3B350256A90A39EED7180CC0C23FD3FD274B758D5E5A
8076FE94C34DE1EEC3A9FBA4C1DCF3C55578A928415FAEAC1B03505D6F7500B2
8395646A295B6C408A2A432A4F0BE44B32C02EBEACACC73AF1D045A1E5EF3DC2
0E0ACE58F5C13AE6025310C67A87453D01694B73A9937EFE51DF3560B3F63D8A
54896C5751AF470E2D7DF67074CCF9BD274DB3AB82B98F782C6FC4B2103382CB
CD1E7B5F627901C4E90E245014D51ACC5401E490EA703E923B282990031FACDB
9FF0E0E26763385F643AD9A4D6EE4C37F5E0D0648035661DE56F1BD1AF920FF6
A724C146B5DCD900197222330207B273CE99F5122167B49D78ED641E339655EA
B11629A249287B12D623045F0A9D25E4E60BAD8CF58F3F52E619EA399E8819D3
FAB9FD81FB2224B651371E2A15E480034F04F394D49DA9DAEEAF41C4BD3F2AB4
76A99F78F357B988F361D122142BBC54081397733F3688CC6BF07A9A2614C744
88DA693AAE5F5876B75E89930E5E97800D5F7DDA683A18BAF9E60DBF1B6DE418
B06BA5D1BAD50CB99F62EA4F4B09F8A35F46AD38324208DC6AD32764243F4E82
EB5052BB03DBB8AE9FC0A6005E0D3A7B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (project_reqs.dvi)
@start /Fa 198[37 37 37 37 37 37 37 37 37 37 48[{
 TeXBase1Encoding ReEncodeFont }10 74.9999 /URWPalladioL-Roma
rf /Fb 136[66 1[44 31 35 31 1[44 44 44 66 26 44 1[26
44 40 26 35 44 35 43 44 12[48 37[20 46[{ TeXBase1Encoding ReEncodeFont }
22 79.1666 /URWPalladioL-BoldItal rf /Fc 134[40 40 57
1[44 22 40 26 1[44 44 44 66 18 40 1[18 44 44 22 44 44
40 44 44 13[53 2[53 2[66 44 7[57 57 10[44 44 44 44 44
44 44 44 2[22 1[22 44[{ TeXBase1Encoding ReEncodeFont }38
79.1666 /NimbusSanL-ReguItal rf /Fd 134[44 44 62 44 48
26 44 31 48 48 48 48 70 22 2[22 48 48 26 44 48 44 48
44 11[57 1[53 57 1[53 62 5[22 2[48 53 57 57 1[57 11[44
44 44 44 44 2[22 1[22 41[48 2[{ TeXBase1Encoding ReEncodeFont }42
79.1666 /NimbusSanL-Bold rf /Fe 105[40 1[40 25[40 44
41 66 45 48 26 34 31 44 48 43 46 70 23 44 19 23 46 44
26 38 48 35 44 40 3[26 1[26 3[79 57 62 49 42 53 1[48
62 66 75 48 57 26 27 66 60 44 48 61 56 48 62 5[20 20
40 40 40 40 40 40 40 40 40 40 48 20 26 20 48 1[26 26
22 35[48 48 2[{ TeXBase1Encoding ReEncodeFont }74 79.1666
/URWPalladioL-Roma rf /Ff 135[40 1[44 48 26 35 31 48
48 44 48 70 26 2[26 3[40 48 35 1[40 13[48 57 2[66 5[31
4[66 2[62 12[40 40 40 40 46[48 2[{ TeXBase1Encoding ReEncodeFont }28
79.1666 /URWPalladioL-Bold rf /Fg 172[61 66 2[71 5[25
4[66 66 1[66 12[51 51 51 51 49[{ TeXBase1Encoding ReEncodeFont }11
91.6666 /NimbusSanL-Bold rf /Fh 167[49 1[49 53 45 49
53 57 49 57 53 61 45 2[20 2[45 49 53 53 1[53 65[{
 TeXBase1Encoding ReEncodeFont }18 73.3333 /NimbusSanL-Bold
rf /Fi 198[32 32 32 32 32 32 32 32 32 32 48[{
 TeXBase1Encoding ReEncodeFont }10 58.3333 /NimbusSanL-Regu
rf /Fj 133[33 33 33 48 33 37 19 33 22 37 37 37 37 56
15 33 1[15 37 37 19 37 37 33 37 37 12[41 44 3[52 3[44
1[19 4[48 48 1[44 18[19 1[19 41[33 2[{ TeXBase1Encoding ReEncodeFont }
36 66.6667 /NimbusSanL-Regu rf /Fk 139[22 37 26 14[37
41 37 31[48 65[{ TeXBase1Encoding ReEncodeFont }7 66.6667
/NimbusSanL-Bold rf /Fl 172[61 5[110 71 1[39 39 1[89
3[83 67[{ TeXBase1Encoding ReEncodeFont }7 116.667 /URWPalladioL-Roma
rf /Fm 166[62 3[73 57 49 62 2[73 78 88 1[68 1[31 78 71
1[57 72 66 57 73 65[{ TeXBase1Encoding ReEncodeFont }17
93.3332 /URWPalladioL-Roma rf /Fn 172[105 7[145 3[153
111 1[155 142 12[100 100 53[{ TeXBase1Encoding ReEncodeFont }8
200 /URWPalladioL-Roma rf /Fo 170[124 2[107 1[97 126
133 1[98 2[54 1[122 2[124 1[98 124 65[{ TeXBase1Encoding ReEncodeFont }
11 160 /URWPalladioL-Roma rf /Fp 172[122 7[156 1[78 4[167
144 1[156 65[{ TeXBase1Encoding ReEncodeFont }6 200 /URWPalladioL-Bold
rf /Fq 171[107 1[116 4[160 7[98 3[124 65[{
 TeXBase1Encoding ReEncodeFont }5 160 /URWPalladioL-Bold
rf /Fr 175[60 1[83 22[50 2[50 1[50 50 50 3[25 44[{
 TeXBase1Encoding ReEncodeFont }8 100 /URWPalladioL-Roma
rf /Fs 166[53 2[58 3[53 1[48 63 1[76 6[44 49 62 1[49
62 65[{ TeXBase1Encoding ReEncodeFont }11 79.9999 /URWPalladioL-Roma
rf /Ft 172[87 111 13[129 118 67[{ TeXBase1Encoding ReEncodeFont }4
166.667 /URWPalladioL-Roma rf /Fu 170[104 82 70 89 105
81 105 111 126 3[45 3[81 1[95 1[104 65[{ TeXBase1Encoding ReEncodeFont }
13 133.333 /URWPalladioL-Roma rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-150 705 a @beginspecial 0 @llx 0 @lly 345 @urx 435 @ury
1133 @rhi @setspecial
%%BeginDocument: coe_v_spot1.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: coe_v_spot.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Heather Miller
%%CreationDate: 6/19/12
%%BoundingBox: 0 0 345 435
%%HiResBoundingBox: 0 0 344.3750 434.2715
%%CropBox: 0 0 344.3750 434.2715
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 104 128 8
%%BeginData: 19340 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0CFFCFC3C2FD04BBBAC1C1C9CAFD16FFCAC2C2BBC1BBC1C1C2C3
%FD3AFFC9C298BB98BB98BB98BB98BB98BB99C9FD12FFC2C198BB92BB98BB
%98BB98BB98C2C9FD0AFFCFCACACACFCACACACFCACACAFD07FFCACFCACACA
%CFCACACACFCAFD0EFFC1BBBBBBBABBBBBBBABBBBBBBABBBBBB98C2CAFD0E
%FFC9BBBB98BBBBBBBABBBBBBBABBBBBB98BBC2FD09FFFD04BBBABBBBBBBA
%BBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD0BFFCA98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92BBC9FD09FFCFFFCAC192BB98BB98BB98BB98BB
%98BB98BB98BB98BB98C9FD07FFC192BB98BB92BB98BB92BBC2FD07FF99BB
%92BB98BB92BB98BB92C2FD0AFFCFBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC1BBBBC9FD09FFCFC1BABBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC9FD06FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBB
%BABBC2FD09FFCA98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BBC9FD07FFCAC198BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%C9FD05FFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92
%C8FD09FFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBC1
%CFFD06FFC298BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBA
%FD05FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2
%FD08FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB92
%C2FD05FFCA92BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB9FFD04FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB
%92C2FD07FFCFC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBBFD05FFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBA
%C1BBBBBABBCAFFFFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBBBAC1BB
%BBBAC1BBBBC2FD07FFC992BB98BB98BB98BB98BB98BB98C2BBBB92BB98BB
%98BB98BB98BB98BBC2FFFFFFC9BB98BB98BB98BB98BB98BB92BBBBC198BB
%98BB98BB98BB98BB98BB92C2FFFFFFC298BB98BB98BB98BB98BBC2FD07FF
%99BB98BB98BB98BB98BB98C2FD07FFC2BBBABBBBBBBABBBBBBBABBC1CFFF
%FFFFC298BBBBBBBABBBBBBBABBBBC2FFFFFFC998BBBBBBBABBBBBBBABBBB
%C1C9FFFFFFC2BBBBBBBABBBBBBBAFD04BBFFFFFFFD04BBBABBBBBBBABBBB
%C9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCAC198BB98BB98BB98BB98
%BB99FD06FFC292BB98BB98BB98BB98BB98CFFFFF99BB98BB98BB98BB98BB
%92BBCAFD05FF9FBB98BB98BB98BB98BB98BBC9FFFFC192BB98BB98BB98BB
%98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BB
%BBBACAFD06FFCABBBBBBBAC1BBBBBAC1BBBBCAFFFFC1BAC1BBBBBAC1BBBB
%BABBC2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFFFFFD04BBBAC1BBBBBABBBB
%C9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB98BB98
%BBCAFD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB98BB98
%CAFD07FFC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBC2
%FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBB
%CFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBABBBBBBC9
%FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB98C9FD07
%FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD
%07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB98C9FD07
%FFC192BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBA0FD07FF
%99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FF
%C1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD07FFFD
%04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBB
%BAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCAFD07FF99BB
%98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD07FFC192BB
%98BB98BB98BB98BBC3FFFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB
%98BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BB
%BBBABBBBBBBABBBBBBC9FFCFC198BBBBBBBABBBBBBBABBC9FD07FFBBBBBA
%BBBBBBBABBBBBB98C9FFFFFD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBB
%BABBBBBBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB
%98BB98BB98BB98C9FFFF99BB98BB98BB98BB98BB92C9FD07FFC198BB98BB
%98BB98BB98BBA0FFFFC192BB98BB98BB98BB98BBC2FD07FF99BB98BB98BB
%98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD06FFCFC1BBBBBAC1
%BBBBBAC1BBBBC9FFFFC1BAC1BBBBBAC1BBBBBABBC9FD07FFBBBBBABBBBBB
%BABBBBBBBAC9FFFFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BB
%BBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98
%BB98BB98CAFFFFBBBB98BB98BB98BB98BB92C2FD07FFC2BBC199C1BBC199
%C1BBBBC9FFFFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98
%BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBB
%BBBABBC9FFFFC2BBBBBABBBBBBBAFD04BBFD15FFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFFA0BB98BB98BB98BB98BB
%98BBA0FD14FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98
%BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBB
%BABBC9FFFFCFBBBBBAC1BBBBBAC1BBBBBAC1CAFD13FFC1BBBAC1BBBBBAC1
%BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB
%98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFFFFC198BB98BB98BB
%98BB98BB92C1CFFD12FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FFFFFFC2BBBBBBBABBBBBBBABBBBBB98C2FD12FFFD
%04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB
%98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFFFFCF
%98BB98BB98BB98BB98BB98BB92C2FD11FFC192BB98BB98BB98BB98BBC2FD
%07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD
%06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD04FFC9BBBBBAC1BBBBBAC1BBBBBA
%BBBBC9FD10FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD05FFC198BB98BB98BB98BB98BB98BB98C9FD0FFFC192BB98BB98
%BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBA
%BBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD05FFCABBBBBBBA
%BBBBBBBABBBBBBBABBBBCFFD0EFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD06FFA7BB98BB98BB98BB98BB98BB98BB99
%FD0EFFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD07FFC9BBBAC1BBBBBAC1BBBBBAC1BBBBBBFD0DFFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD08FFC2BB98BB98BB98BB
%98BB98BB98BBA0FD0CFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD09FFC1BBBABBBBBBBABBBBBBBABBBBBBC2FD0BFF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD0AFF
%99BB98BB98BB98BB98BB98BB98BBA1FD0AFFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD0BFFFD04BBBAC1BBBBBAC1BBBB
%BAC1CAFD09FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD0BFFCA98BB98BB98BB98BB98BB98BB92C1CAFD08FFC192BB98BB
%98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBB
%BABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD0CFFC998BBBB
%BBBABBBBBBBABBBBBB98C2FD08FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD0DFFC292BB98BB98BB98BB98BB98BB92C2
%FD07FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD0EFFC2BBBBBAC1BBBBBAC1BBBBBABBBBC9FD06FFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD0FFFC198BB98BB98BB98
%BB98BB98BB98C9FD05FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD0FFFCAC1BBBBBABBBBBBBABBBBBBBABBBBFD05FF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD10FF
%C9BB98BB98BB98BB98BB98BB98BBC2FD04FFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD11FFC9BBBAC1BBBBBAC1BBBBBA
%C1BBC1FD04FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD12FFC2BB98BB98BB98BB98BB98BB98C9FFFFFFC192BB98BB98BB
%98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABB
%BBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD13FFC2BBBABBBBBB
%BABBBBBBBABBC2FFFFFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABB
%BBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF99BB98BB
%98BB98BB98BB92CAFD14FF98BB98BB98BB98BB98BB92C1FFFFFFC192BB98
%BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BB
%BAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFFFC2C1C2C1C2
%C1C2C1C2C1C2C9FD06FFC9BAC1BBBBBAC1BBBBBABBBBFFFFFFC1BBBAC1BB
%BBBAC1BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98
%BB98BB98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFF98BB98BB92
%BB98BB92BB92C9FD06FFC9BB98BB98BB98BB98BB98BBC9FFFFC298BB98BB
%98BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB98C2FD06FFCFBBBBBABB
%BBBBBABBBBBBBACFFD06FFCFC1BBBBBABBBBBBBABBBBBBC9FFCFC198BBBB
%BBBABBBBBBBABBC9FD07FFBBBBBABBBBBBBABBBBBB98CFFFFFFD04BBBABB
%BBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB98BB98BB
%98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFF99BB98BB98BB
%98BB98BB92C9FD06FFCABB98BB98BB98BB98BB98BBA1FFFFC192BB98BB98
%BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBB
%BAC1BBBBBACFFD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FFFFC1BAC1BBBBBA
%C1BBBBBABBC9FD07FFBBBBBAC1BBBBBAC1BBBBBAC9FFFFFD04BBBAC1BBBB
%BABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB
%98BB98BBC9FD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB
%98BB98C9FD06FFCAC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98
%BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBB
%BBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBA
%BBBBBBC9FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB
%98C9FD06FFCFBB92BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98
%BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABB
%BBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBB
%C9FD07FFFD04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD
%07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCA
%FD07FF98BB98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD
%07FFC198BB98BB98BB98BB98BBC3FFFFC198BB98BB98BB98BB98BBC2FD07
%FF99BB98BB98BB98BB98BB98C2FD07FFBBBBBABBBBBBBABBBBBB98C9FD06
%FFC9BBBBBBBABBBBBBBABBBBBBCAFFFFC198BBBBBBBABBBBBBBABBC2FD06
%FFCFBBBBBABBBBBBBABBBBBB98CAFFFFFD04BBBABBBBBBBABBBBC2FD07FF
%C198BBBBBBBABBBBBBBABBC9FD06FFCFC198BB98BB98BB98BB98BB99FD06
%FFC192BB98BB98BB98BB98BB99FFFFFF99BB98BB98BB98BB98BB92BBCAFD
%05FF99BB98BB98BB98BB98BB98BBC9FFFFC292BB98BB98BB98BB98BB98C9
%FD05FFC292BB98BB98BB98BB98BB92C9FD07FFC2BBBAC1BBBBBAC1BBBBBA
%BBBBCAFFFFCAC2BAC1BBBBBAC1BBBBBAC1BBC2FFFFFFC9BAC1BBBBBAC1BB
%BBBAC1BBC1C9FFFFFFC2BBBBBBBAC1BBBBBAC1BBBBBBFFFFFFC9BBBBBBBA
%C1BBBBBAC1BBBBBBC9FFFFCAC2BBBBBAC1BBBBBAC1BBBBBAC1CFFD07FFC9
%98BB98BB98BB98BB98BB98BB98BB99BB98BB98BB98BB98BB98BB98BBC2FF
%FFFFC9BB98BB98BB98BB98BB98BB98BB99C198BB98BB98BB98BB98BB98BB
%98C2FFFFFFCF98BB98BB98BB98BB98BB98BB92BBBBBB92BB98BB98BB98BB
%98BB98BB99FD09FFC1BBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBB
%BBBAFD04BBFD05FFC1BBBABBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBBBB
%BABBBBBB98BBCAFD04FFC298BBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBB
%BBBABBBBBBBABBBBCAFD09FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB92C3FD05FFCA98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB9FFD05FFCABB92BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92C2FD0BFFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1BBC2FD07FFC2BAC1BBBBBAC1BBBBBAC1BBBBBAC1BB
%BBBAC1BBBBBAC1BBBBBBFD07FFC2BBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1CAFD0CFFBBBB98BB98BB98BB98BB98BB98BB98BB98
%BB98BB98BB92BBCAFD08FFC192BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98CAFD08FF9FBB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB98BBC3FD0DFFCFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB
%CAFD09FFCFC198BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBACAFD0A
%FFC1BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB98BBC9FD0FFFCF99BB
%92BB98BB98BB98BB98BB98BB98BB98BB92C1CAFD09FFCFFFCAC292BB98BB
%98BB98BB98BB98BB98BB98BB92BB98CAFD0CFFA0BB92BB98BB98BB98BB98
%BB98BB98BB98BB92BBA1FD12FFC2C1BBBBBAC1BBBBBAC1BBBBBABBBBBBBA
%C9FD0FFFC9BBBBBABBBBBBBAC1BBBBBAC1BBBBBABBC2FD0FFFC9C1BABBBB
%BBBAC1BBBBBAC1BBBBBABBBBC2CAFD14FFCAC299BB92BB98BB98BB98BB92
%BBC2CFFD12FFC2BB98BB98BB98BB98BB92BB98C2C9FD12FFC999BB98BB92
%BB98BB92BB98BB99CAFD19FFC9C9C1C2BBC1BBC2C2C9CFFD16FFCAC2C2C1
%C1BBC2C1C2C9FD17FFC9C9C2C2BBC1BBC2C2C9CAFD42FFCFFD1FFFCAFDEA
%FFA8FD64FF7D52F827F8277DFD32FF7D2727F82752FFFFFFFD04A8FD0CFF
%FD04A8FD11FF7E27F8272727F8277DFD30FF7DF8272727F82727A8FFFF27
%2752FD0DFF272727FD10FFA827F827F8522727F827A8FD2EFFA8F827F852
%5227F8272EFFA827F852FD0CFFA827F852FD10FFA8F82721A8FFFF2727F8
%84FD2EFF5927217DFFFFA82752FFFFFF272752FD0DFF272728FD10FF7D27
%F827A8FFFF52F82752FF7D7DA8A85284FFA85252527DFD04FF595252A87D
%7D7DFFFFA85252527DA8FFA87D59A8FF7D527DA8FD04FF7DF82752FFFFFF
%A8FFFFA85227F8277DA8FFFF7D52525259FFFFA85227F8277DA8FFFF7D52
%527DA8FD07FF7DF82727FFFFFF2727F87DFF27F85227277DFF2727F82727
%7DFFFF5227F8272727F87DFFA8F8272727F852FFFFF827527DF8272752FD
%04FF7D27272752FD05FF5227F8FD0427FF2727F8FD0427FF5227F8FD0427
%FF5227F8272727A8FD06FF7D27F827A8FFFF52F82752FF2727F827F87D52
%27217D5227F8A8A827F8275227F82752FF2727F87D2727F87EA827F827F8
%27F827F8A8FD04FF2727F827F8527DFFFF7D2727F827277DFF52F8527D52
%F82752A82727F827277D7D27F8527D52F852FD06FF7D212727FFFFFF2727
%217DFF27212752FFA827F87DFFFF27277DA8F82752FF7D27217DA8272152
%FFFF272752FF2727F87DA852F8277DFD04FFA827272127F82752FFFFFF27
%2727FFFFFFA8A8FFFFA8272152FFFF272727FFFF7DF827A8FF7D2727FD06
%FF5227F827A8FFFF27F82752FF272721FFFFFFF82752FFA827F87D7D27F8
%7DFFA8F82752A8F82752FFA827F852A827F852FFFF5227F884FD06FF5227
%F827F82752FFA827F852FD05FFA85252F82728FFA827F852FFFF5227F8A8
%A853F827A8FD05FF7D272727FFFFFF2727277DFF4C2752FFFFA827F82727
%27F8277DA8F8277DFF7E27277DA827277DFFFF272752FF272727FFFF7DF8
%277DFD08FFA8FD0427A8FF27272EFFFFFFA8522727F8272752FFFF272727
%FFFF7DF8272727F82727FD06FF7D27F827A8FFFF28F82752FF272727FFFF
%FFF827277D527D52A97D27F87DFFA8F82753A8F82752FFA828F852A827F8
%52FFFF5227F8A8FD0AFF2727F8A8FF27F852FFFFFF28F8277DA8212752FF
%A827F852FFFF5227F87D527D527DA8FD05FFA8F82727FFFFFF2727F87DFF
%27F852FFFFA827217DFD05FF7D212752FFA827F87DA827F87DFFFF272752
%FFF82728FFFF7D21277DFD04FF7D27FD04FF52F827A8FF272727FFFFA821
%277DFFA827F852FFAF212727FFFF7D2127FD0BFFA827F82752A85227F827
%7DFF272727FFFFFFF82727A8FFFF7DFF7D27F852FF7DF82752FFF82728FF
%A827F852A827F852FFFF5227F87DFFFFFF59F82727A8A87DF827F8FFA827
%F8277DFF5327F87DFF7DF82727FFA827F8277DFF5227F87DFFFFA8A8FD07
%FF52272727F827272728FFFF27F852FFFFFF592727275227277DFF272721
%522727F87DFF52F8275252F8277DFFF82728FFFF7D27277DFFFFFF7D2727
%27F8272727F87DFFFFFD042752A8272721522727F827A8FFFD042752A827
%27F852522727FD08FF2827F827F82752FFFFFF202727FFFFFFA852F827F8
%27F87DFF53F827F827F82752FFA827F827F82752FFA827F852FFFF5227F8
%7DFD04FF7D27F827F827F852FFFFFF7DF827F827FF52F827F8527D27F8A8
%FF7DF827F827FF7DF827F827F827A8FD08FF7E7D527D7DFD04FFA87DA8FD
%05FFA87D7D7DA8FFFFFFA852A87D27217DFFFFFFA8597DA8FFFFFF7D7D7D
%FFFFA87D7EA8FD05FFA8A87D7D7DFD06FFA8597D7DFFFFA87DA8FFFFA87D
%A8FFFFA87D7D7DFFFFFF7D7D53A8FD22FFA87EFFFF7DF8277DFD31FFA8FD
%2DFFA8F827527D202727A8FD5FFFA852F827F827F8A8FD1EFFA8FD0BFFA8
%FD0FFFA8FFFFFFA8FD23FFA87D7D7DFD05FF527DA852A8FFFF5252FF52A8
%FFFF527DFFFF5352FF7E52FFFF7D275227A8FFA8275252FFFFFF7D27F87D
%FFFF7D52FFFFA852275227FFFF5252FF277DFD2CFF2752FFF8A8FFFF2727
%7D277DFFFF5227FFFF7DF8FF2752FFFF52277D7DA8FF7D277D2752FFFF28
%277D7DFFFF7DF8FFFFFF7D5227A8A8FF7D275227A8FD2CFF277DA827A8FF
%FF52205227A8FFFF5252FFFFA8277D527DFFFF7D27287DFFFFA8207D277D
%FFFF522752FFFFFF7D27A9FFFFFF5252FD04FF272752FD2DFF2752FFF8A8
%FFFF277D27277EFFFF5252FFFFFF522727FFFFFF52277DFFFFFF7D27F828
%FD04FF7D2727FFFF7DF8FD04FF7D27FD04FF7DF8AFFD2DFF52275227A8FF
%FF527D7DF8A8FFFF5252FFFFFF7D2152FFFFFF7D27A87DAFFFA827A8F8A8
%FFFF527D5227FFFF7D27A8FFFFFF5252FD04FF7D27A8FD2DFFA8272752FF
%FFFF52A8A85284FFFF7D52FFFFFFA8527DFFFFFF7D5227277DFF7D52A852
%52FFFF7D27277DFFFFA852FD04FF7D52FD04FFA852FDFCFFFDFCFFFDB0FF
%CFFFFFFFCFFD50FFA0C9C2C2A0C2C1C299C299C199C199BB98BB98BB98BB
%98BB98BB98BB98BB99BB99C299C199C2C2C2A0C9C2CAFD3DFFCACFCACFC9
%CAC9CFC9C9C9CAC9C9C2C9C9C9C3C9C9C9C3C9C9C9C3C9C3C9C9CAC9C9C9
%CFC9CACAFFCACFCFFDFCFFFDFCFFFDFCFFFFFFFF7D7D7DFD08FFA87DFF7D
%A8FD1BFF7D52FFFFFFA8A87D7D7DFD0DFF7DA8FD15FFA87DFD0CFF7D27F8
%2727FD07FFF852A82752FD1AFF7DF8277DFFFFA8F827F8277DFD0BFF7D27
%52FD15FF52277DFD0BFF2727FF52277DFD06FF2752FFF87DFD1AFF52277E
%FFFFFFA82727FFA8FD0DFFA8FD17FFA8FD0CFFF852FFA852A8FF52F852A8
%FFF852A82752FF7D27277DFFA827525252FFA8272752FD05FF522727A8A8
%27F827A8FFFFA8F852FFFFFF7D2752277DFFA82752277DA8527DA8275227
%53FFFF522727A8FFA8272752FF845252597D52A87D2752277DFF7D275227
%7D2752FD04FF7DF87D2752FF4C52FFF87DA827527D27FF5227532727FF27
%527D277DFFFFFF7D27525227A8522752FFFFFFA827202727FF7D275252F8
%FF2727522752A8F87D7D27525227FF52277D2727FF27527D277DA8F8277D
%7DF8AF5227522727FF275252277DF852FD04FF2727FF52F8A82752A82752
%7DF87D52277D52F8FF2752A827527DF852FFFFFF7DF8FF5327A87DF8A8FF
%FFFFA8F8275252FF7DF8FF5227A82727FFF87DA82752A8F8A87D27A852F8
%7D27277D27527DF859842752FF5227A852F8A82727A82752FFF87D2752FF
%A87DA85227FF5227A82728FF217D7D27275228A85227AF5252A8F8275252
%7DFFFFFF5227A97DF8FF7D277DFFFFFFA82752FFFFFF7D27A87D27A82752
%A82752A9217D8427847DF8A85227275252A8F82752527DA821A8FF7D21A8
%5227A85227FF217DA8277DF827FF59F87D5227FF52F8A82752A827527DF8
%A8A8527D52F8FF2752A82752FF277DFFFFFF59F8FF5227A87DF8A8FFFFFF
%A8F852FFFFFF7DF8A85227A82727FFF852A82752A8F8A87D27A852F8FF52
%52A82752FF277D7D277DFF5227A852F8A82727A82752A8F87D7DF8522727
%FF7E2752F852FF2727FF277DA8272E52F8FF5227522752FF272752277DFF
%FFFF7D27522727FF52277DFFFFFFA8272727F87D7D27A87D27FF52275227
%52A8277D84277D7DF8FF7D27522727FF272752277DA827A8FF7D27A85227
%A82727FF272752277DFF7D2752A8FFA87D2752A8FF527DA8527DFF7D5227
%7DFFA8527D2752FFA8275252FD05FF525227A8FF8452A8FFFFFFA8525352
%527DA852A87D59FFA8277DF852A8527DA852A87D52A8FF522752A9FFA827
%5252FFA852A8FF7D52A87D52FF527DFF7D527DF87DFD17FF5252A82727FD
%21FF5252842752FD21FF277D7D277DFD17FFA8F827F8A8FD21FF7DF82727
%A8FD21FF7DF82727FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 1665 C)
%%CMYKCustomColor: 0 0.6785 1 0 (PANTONE 1665 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-19T15:33:37-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>204</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADMAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qsnnhghead1jhjBaS&#xA;RyAqqOpJORlIRFnYMoQMjQFkvM/M35uOHe20CMcRsb6UVr7xxn9bfdnPavts3WL5/qH63qtD7PCh&#xA;LMf80fpP6vmwDUNf1vUWLXt9NPX9lnPAfJB8I+gZo8uoyZPqkS9Dh0mLH9EQPggOm4ylyU00zzT5&#xA;h0xg1nfzRqv+6yxeP6Uaq/hmTi1eXH9MiHEz6DDl+qIP3/N6P5U/Ne2vJEs9bRbWdqKl2m0THtzB&#xA;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&#xA;4Ev/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2012-06-19T15:33:37-07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-06-19T15:33:37-07:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 1665 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 1665 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>67.843140</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FB7F117407206811808384FED72371DC</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811808384FED72371DC</stEvt:instanceID>
                  <stEvt:when>2012-06-19T15:33:37-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -434.271 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 434.271 li
344.375 434.271 li
344.375 0 li
cp
clp
110.346 193.406 mo
110.346 219.36 87.791 240.283 60.1191 240.283 cv
32.4482 240.283 9.89404 219.36 9.89404 193.406 cv
9.89209 46.8779 li
9.89209 20.9243 32.4463 0 60.1182 0 cv
87.7891 0 110.344 20.9243 110.344 46.877 cv
110.346 193.406 li
46.8521 194.383 mo
46.8521 201.273 52.7422 207.472 60.1191 207.472 cv
67.4961 207.472 73.3862 201.274 73.3862 194.383 cv
73.3843 45.8853 li
73.3843 38.9941 67.4941 32.7964 60.1182 32.7964 cv
52.7412 32.7964 46.8501 38.9941 46.8501 45.8853 cv
46.8521 194.383 li
cp
170.389 207.66 mo
177.762 207.66 183.653 201.491 183.653 194.63 cv
183.653 193.056 183.612 186.096 183.612 177.313 cv
183.612 169.174 181.233 161.923 178.262 158.233 cv
132.572 102.667 li
123.263 90.9243 120.207 75.6982 120.207 63.4263 cv
120.207 54.6431 120.165 48.6362 120.165 47.0942 cv
120.165 21.2764 142.715 .455078 170.39 .455078 cv
198.064 .455078 220.614 21.2764 220.614 47.0942 cv
220.614 74.1914 li
183.655 74.1914 li
183.655 46.1094 li
183.655 39.2471 177.764 33.0791 170.39 33.0791 cv
163.017 33.0791 157.123 39.2471 157.123 46.1094 cv
157.123 47.6821 157.165 54.6431 157.165 63.4263 cv
157.165 71.5645 159.542 78.8154 162.517 82.5063 cv
207.984 137.792 li
217.461 149.57 220.57 164.949 220.57 177.313 cv
220.57 186.096 220.612 192.102 220.612 193.646 cv
220.612 219.462 198.063 240.283 170.389 240.283 cv
142.714 240.283 120.163 219.462 120.163 193.646 cv
120.163 164.054 li
157.121 164.054 li
157.121 194.629 li
157.121 201.491 163.015 207.66 170.389 207.66 cv
280.661 240.283 mo
252.988 240.283 230.436 219.36 230.436 193.406 cv
230.433 6.45313 li
267.392 6.45313 li
267.393 194.383 li
267.393 201.273 273.283 207.472 280.661 207.472 cv
288.037 207.472 293.928 201.274 293.928 194.383 cv
293.925 6.45313 li
330.884 6.45313 li
330.885 193.406 li
330.885 219.36 308.333 240.283 280.661 240.283 cv
false sop
/0 
<<
/Name (PANTONE 1665 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 .678431 1 0 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
ef
17.6558 415.661 mo
11.8706 415.661 li
11.8706 416.039 11.9087 416.375 11.9087 416.711 cv
11.9087 420.072 11.002 421.752 9.14893 421.752 cv
6.1626 421.752 5.70898 418.435 5.70898 411.419 cv
5.70898 403.689 5.89795 399.95 9.07373 399.95 cv
10.9258 399.95 11.7959 401.463 11.7959 404.655 cv
11.7959 405.243 li
17.5049 405.243 li
17.5049 404.655 li
17.5049 398.48 14.6689 395.372 9.18701 395.372 cv
5.74658 395.372 3.21387 396.632 1.88965 398.858 cv
.302734 401.505 0 405.159 0 410.158 cv
0 417.302 .37793 421.794 3.09961 424.399 cv
4.30957 425.575 6.54102 426.457 9.22461 426.457 cv
14.6309 426.457 17.6938 423.099 17.6938 417.048 cv
17.6938 416.585 17.6938 416.124 17.6558 415.661 cv
true sop
0 0 0 1 nzopmsc
f
29.0005 404.403 mo
23.1025 404.403 21.0234 407.597 21.0234 414.989 cv
21.0234 423.182 22.6118 426.457 28.8877 426.457 cv
35.1636 426.457 36.7134 423.182 36.7134 414.989 cv
36.7134 407.681 34.6714 404.403 29.0005 404.403 cv
26.3926 415.241 mo
26.3926 410.2 26.7324 408.101 28.8496 408.101 cv
31.0425 408.101 31.3828 410.158 31.3828 415.241 cv
31.3828 420.534 30.9668 422.805 28.8877 422.805 cv
26.8076 422.805 26.3926 420.534 26.3926 415.241 cv
ef
40.4136 425.995 mo
45.6685 425.995 li
45.6685 395.75 li
40.4136 395.75 li
40.4136 425.995 li
cp
f
49.7505 425.995 mo
55.0059 425.995 li
55.0059 395.75 li
49.7505 395.75 li
49.7505 425.995 li
cp
f
64.1548 412.764 mo
64.1548 412.05 li
64.1548 409.234 64.9868 407.849 66.5747 407.849 cv
68.0488 407.849 68.9185 408.982 68.9185 410.997 cv
68.9185 412.764 li
64.1548 412.764 li
68.9937 418.183 mo
68.9937 418.561 li
68.9937 421.373 68.1245 422.804 66.5366 422.804 cv
64.8345 422.804 64.1548 421.373 64.1548 418.267 cv
64.1548 416.08 li
74.2866 416.08 li
74.2866 412.89 li
74.2866 407.177 71.7915 404.403 66.5747 404.403 cv
60.7896 404.403 58.7104 407.639 58.7104 414.989 cv
58.7104 423.182 60.2988 426.456 66.5747 426.456 cv
71.7534 426.456 74.2866 423.686 74.2866 418.183 cv
68.9937 418.183 li
cp
ef
87.1797 413.31 mo
87.1797 417.889 li
87.1797 421.122 86.4614 422.721 84.9497 422.721 cv
82.9453 422.721 82.7183 420.324 82.7183 415.661 cv
82.7183 415.157 li
82.7183 410.2 82.7563 407.933 84.8735 407.933 cv
86.8013 407.933 87.1797 409.612 87.1797 413.31 cv
92.3965 425.575 mo
92.3965 409.57 li
92.3965 408.311 92.4346 406.798 92.5483 404.907 cv
87.3687 404.907 li
87.1797 406.926 li
86.4233 405.328 84.9116 404.403 82.9834 404.403 cv
81.0176 404.403 79.3916 405.37 78.5596 407.01 cv
77.5386 408.982 77.4634 411.839 77.4634 415.787 cv
77.4634 422.972 78.7114 426.499 82.7563 426.499 cv
84.3823 426.499 85.8184 425.743 87.1035 424.189 cv
87.1035 426.583 li
87.1035 429.44 87.0664 430.826 85.0625 430.826 cv
83.5874 430.826 83.0215 430.154 82.9453 428.181 cv
77.8413 428.181 li
77.8413 428.433 li
77.8413 432.128 80.3364 434.271 84.9116 434.271 cv
90.7334 434.271 92.3965 431.75 92.3965 425.575 cv
ef
101.673 412.764 mo
101.673 412.05 li
101.673 409.234 102.505 407.849 104.093 407.849 cv
105.567 407.849 106.437 408.982 106.437 410.997 cv
106.437 412.764 li
101.673 412.764 li
106.513 418.183 mo
106.513 418.561 li
106.513 421.373 105.643 422.804 104.055 422.804 cv
102.354 422.804 101.673 421.373 101.673 418.267 cv
101.673 416.08 li
111.805 416.08 li
111.805 412.89 li
111.805 407.177 109.31 404.403 104.093 404.403 cv
98.3086 404.403 96.2285 407.639 96.2285 414.989 cv
96.2285 423.182 97.8169 426.456 104.093 426.456 cv
109.271 426.456 111.805 423.686 111.805 418.183 cv
106.513 418.183 li
cp
ef
132.647 404.403 mo
126.75 404.403 124.671 407.597 124.671 414.989 cv
124.671 423.182 126.258 426.457 132.534 426.457 cv
138.81 426.457 140.36 423.182 140.36 414.989 cv
140.36 407.681 138.319 404.403 132.647 404.403 cv
130.039 415.241 mo
130.039 410.2 130.379 408.101 132.497 408.101 cv
134.688 408.101 135.03 410.158 135.03 415.241 cv
135.03 420.534 134.614 422.805 132.534 422.805 cv
130.455 422.805 130.039 420.534 130.039 415.241 cv
ef
144.967 425.995 mo
150.223 425.995 li
150.223 408.395 li
153.587 408.395 li
153.587 404.907 li
150.223 404.907 li
150.223 402.641 li
150.223 400.329 150.639 399.53 152.718 399.53 cv
152.982 399.53 153.285 399.53 153.587 399.573 cv
153.587 395.414 li
152.642 395.33 151.848 395.288 151.13 395.288 cv
145.913 395.288 144.967 396.718 144.967 401.379 cv
144.967 404.907 li
142.283 404.907 li
142.283 408.395 li
144.967 408.395 li
144.967 425.995 li
f
166.176 425.995 mo
181.223 425.995 li
181.223 421.122 li
171.923 421.122 li
171.923 412.303 li
180.165 412.303 li
180.165 407.64 li
171.923 407.64 li
171.923 400.413 li
180.883 400.413 li
180.883 395.75 li
166.176 395.75 li
166.176 425.995 li
cp
f
190.286 425.995 mo
190.286 410.998 li
190.286 409.15 191.192 408.017 192.555 408.017 cv
194.027 408.017 194.332 409.234 194.332 411.587 cv
194.332 425.995 li
199.663 425.995 li
199.663 409.948 li
199.663 406.336 197.848 404.403 194.52 404.403 cv
192.63 404.403 191.154 405.328 190.286 407.094 cv
190.135 404.907 li
184.766 404.907 li
184.956 406.294 184.956 407.556 184.956 408.688 cv
184.956 425.995 li
190.286 425.995 li
f
213.147 413.31 mo
213.147 417.889 li
213.147 421.122 212.43 422.721 210.918 422.721 cv
208.915 422.721 208.687 420.324 208.687 415.661 cv
208.687 415.157 li
208.687 410.2 208.724 407.933 210.843 407.933 cv
212.77 407.933 213.147 409.612 213.147 413.31 cv
218.365 425.575 mo
218.365 409.57 li
218.365 408.311 218.402 406.798 218.516 404.907 cv
213.338 404.907 li
213.147 406.926 li
212.392 405.328 210.881 404.403 208.952 404.403 cv
206.984 404.403 205.359 405.37 204.527 407.01 cv
203.508 408.982 203.431 411.839 203.431 415.787 cv
203.431 422.972 204.679 426.499 208.724 426.499 cv
210.35 426.499 211.788 425.743 213.071 424.189 cv
213.071 426.583 li
213.071 429.44 213.035 430.826 211.03 430.826 cv
209.556 430.826 208.988 430.154 208.915 428.181 cv
203.81 428.181 li
203.81 428.433 li
203.81 432.128 206.305 434.271 210.881 434.271 cv
216.703 434.271 218.365 431.75 218.365 425.575 cv
ef
222.538 425.995 mo
227.869 425.995 li
227.869 404.907 li
222.538 404.907 li
222.538 425.995 li
cp
222.538 400.749 mo
227.869 400.749 li
227.869 395.75 li
222.538 395.75 li
222.538 400.749 li
cp
ef
237.357 425.995 mo
237.357 410.998 li
237.357 409.15 238.265 408.017 239.627 408.017 cv
241.1 408.017 241.402 409.234 241.402 411.587 cv
241.402 425.995 li
246.733 425.995 li
246.733 409.948 li
246.733 406.336 244.92 404.403 241.592 404.403 cv
239.703 404.403 238.227 405.328 237.357 407.094 cv
237.207 404.907 li
231.838 404.907 li
232.026 406.294 232.026 407.556 232.026 408.688 cv
232.026 425.995 li
237.357 425.995 li
f
255.946 412.764 mo
255.946 412.05 li
255.946 409.234 256.778 407.849 258.367 407.849 cv
259.842 407.849 260.711 408.982 260.711 410.997 cv
260.711 412.764 li
255.946 412.764 li
260.787 418.183 mo
260.787 418.561 li
260.787 421.373 259.918 422.804 258.33 422.804 cv
256.628 422.804 255.946 421.373 255.946 418.267 cv
255.946 416.08 li
266.08 416.08 li
266.08 412.89 li
266.08 407.177 263.585 404.403 258.367 404.403 cv
252.583 404.403 250.504 407.639 250.504 414.989 cv
250.504 423.182 252.092 426.456 258.367 426.456 cv
263.547 426.456 266.08 423.686 266.08 418.183 cv
260.787 418.183 li
cp
ef
274.701 412.764 mo
274.701 412.05 li
274.701 409.234 275.533 407.849 277.121 407.849 cv
278.595 407.849 279.465 408.982 279.465 410.997 cv
279.465 412.764 li
274.701 412.764 li
279.54 418.183 mo
279.54 418.561 li
279.54 421.373 278.671 422.804 277.083 422.804 cv
275.381 422.804 274.701 421.373 274.701 418.267 cv
274.701 416.08 li
284.833 416.08 li
284.833 412.89 li
284.833 407.177 282.338 404.403 277.121 404.403 cv
271.336 404.403 269.257 407.639 269.257 414.989 cv
269.257 423.182 270.845 426.456 277.121 426.456 cv
282.3 426.456 284.833 423.686 284.833 418.183 cv
279.54 418.183 li
cp
ef
288.501 425.995 mo
293.832 425.995 li
293.832 414.653 li
293.832 411.082 294.929 409.528 297.989 409.528 cv
298.48 409.528 li
298.48 404.403 li
298.142 404.403 li
295.798 404.403 294.172 405.58 293.492 407.64 cv
293.149 404.865 li
288.501 404.865 li
288.501 425.995 li
f
301.324 425.995 mo
306.655 425.995 li
306.655 404.907 li
301.324 404.907 li
301.324 425.995 li
cp
301.324 400.749 mo
306.655 400.749 li
306.655 395.75 li
301.324 395.75 li
301.324 400.749 li
cp
ef
316.145 425.995 mo
316.145 410.998 li
316.145 409.15 317.052 408.017 318.414 408.017 cv
319.887 408.017 320.189 409.234 320.189 411.587 cv
320.189 425.995 li
325.521 425.995 li
325.521 409.948 li
325.521 406.336 323.707 404.403 320.379 404.403 cv
318.488 404.403 317.014 405.328 316.145 407.094 cv
315.994 404.907 li
310.625 404.907 li
310.813 406.294 310.813 407.556 310.813 408.688 cv
310.813 425.995 li
316.145 425.995 li
f
339.007 413.31 mo
339.007 417.889 li
339.007 421.122 338.288 422.721 336.775 422.721 cv
334.772 422.721 334.546 420.324 334.546 415.661 cv
334.546 415.157 li
334.546 410.2 334.584 407.933 336.699 407.933 cv
338.629 407.933 339.007 409.612 339.007 413.31 cv
344.224 425.575 mo
344.224 409.57 li
344.224 408.311 344.262 406.798 344.375 404.907 cv
339.195 404.907 li
339.007 406.926 li
338.251 405.328 336.737 404.403 334.81 404.403 cv
332.844 404.403 331.219 405.37 330.387 407.01 cv
329.365 408.982 329.29 411.839 329.29 415.787 cv
329.29 422.972 330.538 426.499 334.584 426.499 cv
336.209 426.499 337.646 425.743 338.931 424.189 cv
338.931 426.583 li
338.931 429.44 338.893 430.826 336.89 430.826 cv
335.415 430.826 334.848 430.154 334.772 428.181 cv
329.669 428.181 li
329.669 428.433 li
329.669 432.128 332.164 434.271 336.737 434.271 cv
342.561 434.271 344.224 431.75 344.224 425.575 cv
ef
174.531 367.66 mo
148.438 367.66 99.291 365.946 99.291 365.946 cv
98.3872 365.905 98.3862 365.066 99.29 365.024 cv
99.29 365.024 147.957 363.311 174.531 363.311 cv
201.111 363.311 244.373 365.024 244.373 365.024 cv
245.263 365.071 245.279 365.899 244.373 365.946 cv
244.373 365.946 200.631 367.66 174.531 367.66 cv
false sop
1 /0 /CSD get_res sepcs
1 sep
f
19.5308 271.322 mo
19.5308 288.85 li
19.4741 291.543 19.8325 293.718 20.6069 295.372 cv
21.3843 297.025 22.9175 297.876 25.2124 297.923 cv
27.0698 297.876 28.4019 297.352 29.2095 296.35 cv
30.0151 295.347 30.5063 294.151 30.6821 292.76 cv
30.8569 291.369 30.9272 290.065 30.8921 288.85 cv
30.8921 271.322 li
30.9272 270.124 30.8589 268.933 30.687 267.751 cv
30.5151 266.569 30.0366 265.582 29.2476 264.79 cv
28.4604 263.999 27.1577 263.586 25.3423 263.556 cv
23.4409 263.614 22.0776 264.139 21.2524 265.126 cv
20.4272 266.114 19.9253 267.213 19.7456 268.423 cv
19.5659 269.633 19.4946 270.599 19.5308 271.322 cv
cp
8.82178 286.581 mo
8.82178 273.042 li
8.78857 270.444 9.06787 267.955 9.6626 265.575 cv
10.2573 263.193 11.3696 261.031 13.0005 259.088 cv
14.5337 257.354 16.3481 256.113 18.4448 255.368 cv
20.5405 254.621 22.7319 254.259 25.0151 254.276 cv
27.4839 254.252 29.7964 254.609 31.9526 255.351 cv
34.1108 256.09 35.9995 257.359 37.6177 259.156 cv
38.9634 260.622 39.9946 262.588 40.7114 265.051 cv
41.4292 267.514 41.7905 270.75 41.7974 274.76 cv
41.7974 286.993 li
41.814 290.504 41.5034 293.468 40.8667 295.886 cv
40.23 298.305 39.1694 300.358 37.6831 302.047 cv
36.3276 303.537 34.8589 304.643 33.2769 305.363 cv
31.6938 306.085 30.1626 306.555 28.6821 306.771 cv
27.2007 306.988 25.9351 307.087 24.8843 307.064 cv
23.2671 307.095 21.4683 306.835 19.4897 306.285 cv
17.5112 305.735 15.6587 304.712 13.9341 303.215 cv
12.2095 301.719 10.9194 299.564 10.062 296.755 cv
9.5542 294.904 9.21631 293.036 9.05029 291.151 cv
8.88428 289.269 8.80811 287.745 8.82178 286.581 cv
cp
221.709 268.455 mo
220.928 266.979 219.842 265.723 218.457 264.686 cv
216.969 263.573 215.248 262.995 213.314 262.947 cv
211.494 262.999 210.111 263.384 209.242 264.159 cv
208.414 264.896 207.881 265.683 207.674 266.524 cv
207.488 267.282 207.389 267.828 207.432 268.122 cv
207.502 269.94 208.176 271.339 209.473 272.302 cv
210.717 273.229 212.117 273.949 213.68 274.471 cv
219.748 276.806 li
221.205 277.353 222.67 278.122 224.143 279.113 cv
225.604 280.1 226.824 281.277 227.793 282.63 cv
228.133 283.029 228.645 283.987 229.318 285.536 cv
229.971 287.036 230.34 288.97 230.414 291.341 cv
230.455 292.13 230.371 293.282 230.164 294.797 cv
229.961 296.293 229.387 297.912 228.436 299.658 cv
227.498 301.375 225.943 302.968 223.748 304.437 cv
222.311 305.31 220.76 305.943 219.08 306.344 cv
217.389 306.747 215.922 306.943 214.686 306.938 cv
210.564 307.018 207.145 306.329 204.424 304.89 cv
201.764 303.483 199.398 300.884 197.342 297.051 cv
205.035 291.675 li
205.928 293.715 207.131 295.33 208.645 296.51 cv
210.238 297.755 212.102 298.385 214.225 298.406 cv
215.061 298.422 215.982 298.263 216.988 297.938 cv
218.021 297.603 218.92 296.999 219.68 296.135 cv
220.467 295.242 220.861 293.996 220.898 292.437 cv
220.92 291.168 220.654 290.11 220.076 289.29 cv
219.502 288.478 218.523 287.738 217.17 287.062 cv
215.832 286.39 213.969 285.575 211.586 284.618 cv
209.152 283.676 206.924 282.575 204.904 281.317 cv
202.906 280.072 201.303 278.446 200.096 276.437 cv
198.898 274.444 198.273 271.833 198.242 268.579 cv
198.273 264.407 199.619 261.062 202.264 258.508 cv
204.902 255.959 208.66 254.629 213.578 254.555 cv
217.043 254.555 220.039 255.3 222.582 256.784 cv
225.066 258.235 227.252 260.397 229.141 263.283 cv
221.709 268.455 li
cp
318.754 338.294 mo
318.754 330.783 li
313.281 319.491 li
317.484 319.491 li
320.734 326.514 li
323.984 319.491 li
328.162 319.491 li
322.713 330.783 li
322.713 338.294 li
318.754 338.294 li
cp
297.945 338.294 mo
297.945 323.118 li
293.424 323.118 li
293.424 319.491 li
306.424 319.491 li
306.424 323.118 li
301.904 323.118 li
301.904 338.294 li
297.945 338.294 li
cp
278.686 338.294 mo
278.686 336.52 li
278.686 336.52 li
278.686 321.138 li
278.686 321.138 li
278.686 319.491 li
282.645 319.491 li
282.645 321.138 li
282.645 321.138 li
282.645 336.52 li
282.645 336.52 li
282.645 338.294 li
278.686 338.294 li
cp
256.582 334.977 mo
259.66 332.688 li
260.164 333.571 260.691 334.227 261.24 334.651 cv
261.789 335.076 262.42 335.288 263.131 335.285 cv
263.824 335.272 264.369 335.085 264.768 334.719 cv
265.168 334.354 265.371 333.882 265.379 333.305 cv
265.391 332.288 264.732 331.491 263.4 330.912 cv
260.951 329.852 li
260.201 329.517 259.543 329.124 258.977 328.675 cv
257.727 327.628 257.1 326.222 257.096 324.455 cv
257.113 322.776 257.633 321.453 258.652 320.484 cv
259.674 319.517 261.084 319.022 262.887 319.002 cv
265.494 319.015 267.439 320.121 268.727 322.32 cv
265.893 324.455 li
264.951 323.045 263.877 322.342 262.668 322.347 cv
262.049 322.355 261.566 322.518 261.219 322.832 cv
260.871 323.146 260.693 323.559 260.688 324.069 cv
260.688 324.541 260.865 324.963 261.223 325.333 cv
261.578 325.705 262.117 326.056 262.838 326.385 cv
265.35 327.488 li
266.111 327.825 266.766 328.212 267.311 328.648 cv
268.535 329.686 269.164 331.135 269.191 332.996 cv
269.168 334.733 268.605 336.126 267.506 337.172 cv
266.406 338.219 264.914 338.756 263.033 338.783 cv
260.223 338.774 258.072 337.506 256.582 334.977 cv
cp
214.598 338.294 mo
214.598 319.491 li
226.645 319.491 li
226.645 323.118 li
218.557 323.118 li
218.557 326.488 li
224.08 326.488 li
224.08 330.114 li
218.557 330.114 li
218.557 334.668 li
227.158 334.668 li
227.158 338.294 li
214.598 338.294 li
cp
200.594 338.294 mo
196.416 338.294 li
190.941 319.491 li
194.9 319.491 li
198.518 332.635 li
202.109 319.491 li
206.068 319.491 li
200.594 338.294 li
cp
235.59 319.473 mo
240.086 319.473 li
241.281 319.462 242.336 319.505 243.248 319.602 cv
244.16 319.699 244.939 319.922 245.584 320.271 cv
246.395 320.727 247.01 321.358 247.436 322.168 cv
247.861 322.977 248.074 323.931 248.078 325.029 cv
248.074 326.297 247.793 327.363 247.236 328.231 cv
246.682 329.101 245.869 329.73 244.803 330.122 cv
248.713 338.276 li
244.338 338.276 li
240.869 330.611 li
239.549 330.611 li
239.549 338.276 li
235.59 338.276 li
235.59 319.473 li
cp
239.549 322.663 mo
239.549 327.602 li
240.648 327.602 li
241.84 327.631 242.719 327.482 243.281 327.158 cv
243.844 326.834 244.123 326.158 244.119 325.132 cv
244.123 324.106 243.844 323.431 243.281 323.106 cv
242.719 322.782 241.84 322.635 240.648 322.663 cv
239.549 322.663 li
cp
177.914 338.294 mo
177.914 336.52 li
177.914 336.52 li
177.914 321.138 li
177.914 321.138 li
177.914 319.491 li
181.873 319.491 li
181.873 321.138 li
181.873 321.138 li
181.873 336.52 li
181.873 336.52 li
181.873 338.294 li
177.914 338.294 li
cp
154.168 338.294 mo
154.168 319.491 li
157.98 319.491 li
163.699 330.912 li
163.625 319.491 li
167.072 319.491 li
167.072 338.294 li
163.821 338.294 li
157.541 325.587 li
157.614 338.294 li
154.168 338.294 li
cp
134.865 319.491 mo
134.865 331.246 li
134.839 332.602 134.99 333.589 135.317 334.211 cv
135.645 334.833 136.309 335.139 137.309 335.131 cv
138.32 335.138 138.986 334.828 139.31 334.201 cv
139.632 333.575 139.781 332.59 139.752 331.246 cv
139.752 319.491 li
143.711 319.491 li
143.711 332.198 li
143.716 334.407 143.193 336.054 142.141 337.137 cv
141.089 338.221 139.479 338.761 137.309 338.758 cv
133.012 338.771 130.878 336.584 130.906 332.198 cv
130.906 319.491 li
134.865 319.491 li
cp
272.738 287.834 mo
269.928 288.24 267.773 289.109 266.277 290.44 cv
264.781 291.772 264.025 293.349 264.012 295.168 cv
264.037 296.499 264.402 297.555 265.111 298.339 cv
265.818 299.123 266.719 299.523 267.811 299.542 cv
269.326 299.539 270.523 298.905 271.398 297.642 cv
272.273 296.376 272.721 294.497 272.738 292.006 cv
272.738 287.834 li
cp
274.072 301.964 mo
272.459 303.576 270.854 304.776 269.258 305.563 cv
267.662 306.353 265.957 306.745 264.145 306.742 cv
261.381 306.7 259.199 305.792 257.6 304.017 cv
256.002 302.243 255.186 299.854 255.152 296.85 cv
255.152 288.832 261.014 284.01 272.738 282.383 cv
272.738 279.558 li
272.729 278.492 272.316 277.627 271.506 276.958 cv
270.697 276.289 269.553 275.943 268.076 275.923 cv
265.477 275.958 262.746 277.168 259.881 279.558 cv
255.551 273.972 li
259.238 270.843 263.59 269.295 268.609 269.329 cv
277.469 269.362 281.932 273.468 281.998 281.643 cv
281.998 297.052 li
282.021 298.229 282.576 298.971 283.664 299.272 cv
283.664 306.271 li
283.119 306.326 282.609 306.35 282.133 306.339 cv
278.379 306.36 275.693 304.903 274.072 301.964 cv
cp
316.186 284.67 mo
324.846 284.67 li
324.846 281.574 li
324.836 277.593 323.391 275.598 320.516 275.587 cv
319.199 275.591 318.152 276.085 317.377 277.067 cv
316.602 278.047 316.203 279.483 316.186 281.373 cv
316.186 284.67 li
cp
332.84 304.386 mo
328.865 306.079 325.09 306.933 321.516 306.943 cv
316.969 306.925 313.504 305.667 311.123 303.166 cv
308.74 300.667 307.541 297.036 307.525 292.274 cv
307.525 283.795 li
307.543 279.071 308.641 275.482 310.814 273.028 cv
312.988 270.575 316.135 269.343 320.25 269.328 cv
324.119 269.366 327.141 270.518 329.318 272.786 cv
331.496 275.052 332.602 278.206 332.641 282.248 cv
332.641 289.985 li
316.186 289.985 li
316.186 293.081 li
316.197 295.149 316.807 296.75 318.01 297.885 cv
319.213 299.018 320.936 299.593 323.182 299.608 cv
325.557 299.608 328.398 298.801 331.709 297.187 cv
332.84 304.386 li
cp
298.793 291.438 mo
298.738 294.163 299.084 296.098 299.826 297.241 cv
300.572 298.385 302.047 298.94 304.256 298.907 cv
305.523 298.84 li
305.523 306.78 li
304.102 306.893 302.814 306.938 301.658 306.914 cv
297.16 306.96 294 306.045 292.174 304.172 cv
290.35 302.3 289.469 299.198 289.533 294.87 cv
289.533 277.172 li
284.338 277.172 li
284.338 270.376 li
289.533 270.376 li
289.533 257.522 li
298.793 257.522 li
298.793 270.376 li
305.256 270.376 li
305.256 277.172 li
298.793 277.172 li
298.793 291.438 li
cp
46.9585 306.234 mo
46.9585 270.454 li
54.9331 270.454 li
55.5444 274.997 li
56.8354 271.411 59.6206 269.577 63.8999 269.493 cv
64.5122 269.493 li
64.5122 278.214 li
63.6284 278.214 li
60.9097 278.197 58.9761 278.892 57.8296 280.297 cv
56.6802 281.7 56.1235 283.913 56.1558 286.935 cv
56.1558 306.234 li
46.9585 306.234 li
cp
134.628 291.305 mo
134.627 293.034 134.695 294.345 134.824 295.521 cv
134.876 296.008 134.968 296.454 135.085 296.87 cv
135.322 297.565 li
135.753 298.663 136.349 299.347 137.106 299.621 cv
138 299.9 li
138.415 300.006 138.748 300.047 139 300.023 cv
139.682 300.022 140.048 299.978 140.383 299.897 cv
141.156 299.732 141.75 299.389 142.164 298.868 cv
142.401 298.569 142.603 298.195 142.77 297.745 cv
143.093 296.999 143.294 296.131 143.375 295.143 cv
143.488 293.741 143.537 292.293 143.488 290.799 cv
143.488 287.571 li
143.5 286.772 143.506 286.003 143.488 285.267 cv
143.515 283.503 143.454 281.929 143.302 280.545 cv
143.149 279.16 142.744 278.065 142.083 277.263 cv
141.421 276.46 140.341 276.05 138.841 276.033 cv
137.429 276.066 136.422 276.539 135.822 277.452 cv
135.221 278.366 134.863 279.521 134.75 280.922 cv
134.687 281.704 134.64 282.5 134.628 283.311 cv
134.611 283.715 134.617 284.11 134.628 284.493 cv
134.628 291.305 li
cp
125.919 287.357 mo
125.886 285.629 125.953 283.741 126.119 281.693 cv
126.285 279.646 126.75 277.686 127.513 275.813 cv
128.279 273.941 129.541 272.403 131.302 271.2 cv
133.062 269.996 135.521 269.374 138.677 269.333 cv
139.931 269.306 141.25 269.397 142.634 269.61 cv
144.019 269.822 145.361 270.32 146.662 271.104 cv
147.962 271.886 149.113 273.118 150.116 274.801 cv
150.917 276.227 151.467 278.017 151.765 280.168 cv
152.064 282.319 152.206 284.986 152.189 288.168 cv
152.256 291.792 152.091 294.788 151.695 297.155 cv
151.298 299.522 150.269 301.59 148.607 303.357 cv
148.102 304 147.181 304.706 145.841 305.477 cv
144.504 306.245 142.388 306.664 139.495 306.733 cv
138.429 306.755 137.167 306.679 135.708 306.506 cv
134.25 306.332 132.957 305.936 131.828 305.315 cv
129.994 304.192 128.654 302.785 127.809 301.095 cv
126.965 299.405 126.431 297.418 126.208 295.134 cv
125.986 292.852 125.888 290.259 125.919 287.357 cv
cp
156.291 306.234 mo
156.291 270.454 li
164.798 270.454 li
164.798 277.069 li
166.011 275.08 167.35 273.372 169.011 271.948 cv
170.673 270.523 172.65 269.777 174.943 269.712 cv
177.813 269.789 179.869 270.482 181.115 271.789 cv
182.359 273.098 183.117 274.556 183.389 276.162 cv
183.66 277.771 183.768 279.063 183.713 280.04 cv
183.713 306.234 li
174.484 306.234 li
174.484 282.876 li
174.504 282.37 174.473 281.739 174.387 280.986 cv
174.303 280.231 174.049 279.557 173.621 278.96 cv
173.197 278.364 172.48 278.05 171.474 278.016 cv
170.191 278.047 169.093 278.422 168.177 279.138 cv
167.263 279.854 166.376 280.718 165.519 281.728 cv
165.519 306.234 li
156.291 306.234 li
cp
112.554 294.748 mo
112.554 281.392 li
112.429 280.136 112.212 279.121 111.9 278.33 cv
111.341 276.916 110.217 276.214 108.529 276.226 cv
106.704 276.211 105.582 277.146 105.166 279.033 cv
104.75 280.918 104.58 283.839 104.656 287.793 cv
104.656 288.599 li
104.598 292.336 104.817 295.153 105.31 297.049 cv
105.804 298.944 106.921 299.896 108.665 299.899 cv
110.876 299.908 112.173 298.234 112.554 294.748 cv
cp
95.1714 314.351 mo
100.943 310.79 li
101.385 311.468 102.042 312.182 102.917 312.929 cv
103.79 313.676 105.011 314.08 106.582 314.144 cv
107.408 314.164 108.373 313.951 109.474 313.502 cv
110.576 313.054 111.423 312.239 112.02 311.063 cv
112.429 310.015 112.609 308.622 112.552 306.889 cv
112.554 303.31 li
110.255 305.996 107.634 307.087 104.724 307.075 cv
101.148 307.08 98.6538 305.569 97.2437 302.546 cv
95.8325 299.521 95.1558 294.955 95.2134 288.848 cv
95.1802 285.496 95.2798 282.587 95.5112 280.118 cv
95.7417 277.651 96.2983 275.58 97.1831 273.909 cv
97.9487 272.504 99.0181 271.418 100.393 270.647 cv
101.769 269.878 103.349 269.487 105.132 269.476 cv
106.877 269.485 108.832 270.18 109.767 270.657 cv
110.454 271.006 111.822 271.849 112.554 273.12 cv
112.554 270.335 li
121.578 270.335 li
121.578 302.264 li
121.617 304.041 121.535 305.954 121.332 308.003 cv
121.129 310.052 120.927 312 120.044 313.85 cv
119.162 315.699 117.71 317.214 115.691 318.394 cv
113.669 319.572 110.854 320.183 107.244 320.222 cv
104.605 320.19 102.447 319.847 100.769 319.19 cv
99.0913 318.534 97.8062 317.757 96.9175 316.854 cv
96.0269 315.953 95.4458 315.118 95.1714 314.351 cv
cp
245.535 291.438 mo
245.48 294.163 245.826 296.098 246.568 297.241 cv
247.313 298.385 248.789 298.94 251 298.907 cv
252.266 298.84 li
252.266 306.78 li
250.844 306.893 249.555 306.938 248.4 306.914 cv
243.902 306.96 240.74 306.045 238.916 304.172 cv
237.092 302.3 236.211 299.198 236.275 294.87 cv
236.275 277.172 li
231.08 277.172 li
231.08 270.376 li
236.275 270.376 li
236.275 257.522 li
245.535 257.522 li
245.535 270.376 li
251.998 270.376 li
251.998 277.172 li
245.535 277.172 li
245.535 291.438 li
cp
75.0142 284.67 mo
83.6733 284.67 li
83.6733 281.574 li
83.6636 277.593 82.2202 275.598 79.3452 275.587 cv
78.0269 275.591 76.98 276.085 76.2046 277.067 cv
75.4292 278.047 75.0327 279.483 75.0142 281.373 cv
75.0142 284.67 li
cp
91.6685 304.386 mo
87.6929 306.079 83.9194 306.933 80.3433 306.943 cv
75.7964 306.925 72.3325 305.667 69.9507 303.166 cv
67.5698 300.667 66.3696 297.036 66.353 292.274 cv
66.353 283.795 li
66.3716 279.071 67.4683 275.482 69.6431 273.028 cv
71.8179 270.575 74.9624 269.343 79.0776 269.328 cv
82.9458 269.366 85.9683 270.518 88.146 272.786 cv
90.3237 275.052 91.4312 278.206 91.4683 282.248 cv
91.4683 289.985 li
75.0142 289.985 li
75.0142 293.081 li
75.0269 295.149 75.6343 296.75 76.8374 297.885 cv
78.0415 299.018 79.7642 299.593 82.0093 299.608 cv
84.3843 299.608 87.228 298.801 90.5366 297.187 cv
91.6685 304.386 li
cp
0 0 0 1 cmyk
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Heather Miller) ()
%%Title: (coe_v_spot.eps)
%%CreationDate: 6/19/12 3:33 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&q-GO4dkH)cJ9q82`<ghl\t'_0LZPn5'buu[!WqfQg#!n7g.t_'::f\H@DD^<NpF.gdci#WWB$q'R4Pdr>-Eq:Ha3P,Q+3j[
%EAaAL)gO62;mf^_\^NO?pUodeo9u)$MYXWNca(^Tp<1c`^"#@3[U8=5?E)asGC(k1@^Ge!)+t`gZ]EX+ZX.Km^M<_WWh^@\<40d+
%:S[`3o^h`\n#jTMVM<(d,C06^=*q-S`5uXCc9L`G6-39ChhM4uj,2?)l)3-OJ+7DT-\\>ej.f4Oc/l8$dQCJ[*FA2-Q/M&>P0W/`
%6W`:tI.;JNL'J:*rhXL.lgKg>^K^"_g9(6t2X51lo2Y+*p.45"R!@Is&=qFf3mCjC:@P24flT-T><2U55-p].-]2asDCG%VA]41c
%K0BrNY5d%Ns(<X,;PLZ^hlTp.RL@sN=l]M^hGhBh'`+:_3W3[C],.S=+3$f?A^P]4gTU8s.jFF`S$dGEK0jOpIa\Ye[I/CT&#@Tj
%rZLh`EKg+so6=+/]8e\?dLM:!p""EcP)OP:aJo54%P_X!HJI#P\<\Aa)`^5h]LS7eVTiQpfE?+S%s)dnP]5Dp]Jj"ECh3@^m;Cra
%:e+iMS+IL7I+jha>Pp]+,ll`hf3<(@5aA05M9;(Ti>M%@qu[54<GMTC<5jZoRMe%m/4H4c<k6eb6*[9(SF+i+)__3HYP2Kt"b(P6
%J*1kIgTp<mWPhGP*WPCc51Oe'WpB:+:+1TBQc!";*.H)mYZ<B3[;rfmQ+(I1=N@_ONWhZB[Uil!bJIHX$%HHe;@.-(9)*"tKMP2d
%XAc7\dqUb,_mc[HHsWr'GNakIGj0HdO7Xm8ae.mF/;_-H(;ba>Ynk3p+f3Kr,5dFC&0h%3E-"_"G7c2"NSb9kr/E:*4OKH,,5dF>
%j'O?+R'9AD:"hh_6FcMDeu;]TN6`#pSDooFO^\WHdl/`:FS'\AFDS=.*''W9?A&5b/VFXa@nUnJ.Fdu-SMC&#[1GMc_\=Wn?%``<
%j#;XOc9M<*,KCGpNO9<]r(Ugd;@1;mm2p]91k6h6oY]jNNfRWiCJh`a]MQ]6k],[*>dRkl17p4'KE#="KT8tX6AKJXW9I66%tA(@
%9&Bmr`<gr/Iq'LP/sbR_c$>(RNqP`;S's'h'i&U*E_7dF(-#[j3MgtuUSCqhrDL;eaSCd6f]^tm(@Rg&:>_tqkmndpj\/:kFNu=Q
%BF@i26g7Zk4+/KBjP24EMrRCU5,E-lpO`D6D*^OZe&<kZ/;neh&TLM(gB&=AXF.[n?eR,\;cOS'K7Bk"<8!>0d3mp,rB\DV5N4?p
%M']K2=sEsoT7!5Z(Ot\1C!uIIann!L:SC%GLqiS[=JXin?htF/QHQX'r1uWC$N2UVdN?I-U%02d%Y)rQV;M)-qA8)=N09=*Q5.>P
%[A9-GphW4iKoufCXAY`q<Y>([P#g"g`KH,YiLa/fR47G*G\33tb:FDls'$cW>0rq.<`2MG7\9Z.g@aAAe5?Wa$jH4JobX4^aXGec
%TP(5.4KZCtQ(bA=rKm.Dl4TPkBUN45J.lpR1rV/cCW)D2LQ!(jUj9@6hC[`Ch&):5QMt[$7ATE&JQ1`u$@CMKM0MDa91G(7mN?EY
%e0*'Dk3:M9(-VXp\9WoJ/UY#NO75'AQP3K_24QXK[fC=_`/G+62>BE0D7<eYF?%4njP?m>_pX$p@3"Oi]Y`DM*H_p1HN-F8Q)YO*
%hK0P2(HI_?Hgn"&2k&@Q-&oQS<iZC8(i2c_CTR8^(Y6H9bT\n'L\66Ckh:Y^1j`9'IPg:ZZS6DH8S%0VD8grCl*We<XA93Vr*qbG
%'$ao*!m;[8oNa,<C==LMJHqLN*'cOmP"^$<Sl2/@&hPX&&P>lG:b(ZAU5;8KK@D<Bn:$BW03N[emM]'Qd&1bacJB%tjZ,QI5q(9h
%H.6o4W3P>PWJ""PV--ge=e`,0nc>:9=i,O2*dKe;]o:ML*'/"eTJVT_hH(nJ[SHf_E%Z3jN,pYD&ifWNkKG:Bi<qDU_AchPSD+^K
%R\6I'A"2JH84?m":Lnm6BN%^+biH=jpAh<uZG^cI03Pr+0.Q*@1ADoWoYg%bOnB?qh,#p("H1^#`X'#$AjZ.WNR7`BEuFEk>;U]^
%hUY)[^HG-$K=H)%]u;]8E#\6.19Q8+3c^(XjZptSkh>U4p'Q8S`,,g,BELD&Nq8RmD[Tfs;%V]/p0>ZS2uV1&5'/I"&S<OS.G..:
%&'Ac>RI$6Wn812Ia8k"]0>9:Mhk"a&PTWOQ.(,n\"6B.u[Ys#9\Yn4(`:b>)SCij2U%A($(>D0ILWXI.[NkjN(A1*f>f?a6E&KcA
%4&g+p8SoDa9<p_9Q:G*NZ,(Fo_lRg,aXl*T+d1O%Ju>u1&lp$h`b&>2,_(5Z#Dt<E^QZSWoKbM'n0D<5ZUFgWPULc-&9F_Qh7_\M
%kg=E^Z&L.E<MoBH-)t1P$&\J_H0HF)#EDXE0aC]K[!Vb!")i(#8kpA@O(VmB[AjH$D4ou&.OF%jQ^i.oM8aj9bI[oilVWpU@i"_(
%d3PHZ(@E+E74h%L0%hW$>&]/39D1A'E2_%(r-[tB*N`;R-(ujp3Ia,+7'TSkD+3UM'_6]TK`BQ=Y)F!75[#FOO!"r^(2_C7nt]h/
%P:1e2T$3ZC8L=dZ$'g>m,#n.*6QK8YrMrhY7L;6AbX"rl&pK.B;gQVUkK&F?M^7<I(GT?#<,&Hg5BJ`m-n$r</f"[<T"mA:cZ4F2
%Ip=IL`n)LVW&D>hh@[&%jeA6q,07`dLg#*"7#^!IIoRtar?GC,>g*/*;R,4/d3NJMrMrh9^eu/6CKsO3Ro5BN/:"^U^ZZO7/ZG\3
%PtU":291oa^[aT4'oB'XWM-:5>#OSjs"13@r=M7&g,?JDJ!*Sa[&(ig/@%Yh*hBYR0G(@K<_T#8GkoKWW>JVRqS]n"1dl97:S0Ud
%kGIi)3Tu]ZEb*OR3PS[-Q)p\.s('*dras><b?I0A=/"\TVW"AH)t#,'[(q=m[T;H$1cfYAMK_H>^%HTbb*,2)\om4E'[93hcA8<$
%IsXW3,[,>m2`\AnZJY$OG6G\82m-ftbF!nHQ4I;nA9@Y4Lk'h?/KM2V&@6J[VHSVS4/dBHB$"W-BPU>*<"-dUB?ZOR/atpIC6NL[
%N$+0m8f_KNM0n]#%:kjVVZ3W_VAClP^)>N5\))dW%k#8+.O+^N</19I^/tp=o!lQfRqRIk=R28GDqek2TPjf&-J!ApD0nDjP`>!\
%_>=GL.#?3TfZ3)>AHgKU!8VGagOAN+I+OkSr=/j7?V]gEJcB3?Si3[h/2V8P/Fp4$X<6:ESa!g(_6S7gH.UC_h!5agV:[AE8Q8$]
%@c*$/5=Y##_<CPWXGaPbjF+XU0N\^3hB@m+e#6G8'Umt9ru"/@G,PPn_A+N7B1+LpSG7&,OmU0YP_q6hnCX%f&*NpbEF*3l;1ADY
%"RS:c$i?Gd$g)s7mRD8`&&p_Ve0rJB163=%5c4$VA])9Bs/T-]=rjt'/RULONBDJZirQd2`>-+1Lc:Y7AT!TPlB$E-XI&j.`5qs!
%eihX(VQ[?6^`%^ODc`-Phdhbjrm;5E^MI7Q^b,`X^Z;KuQ,qA0@8`E2;qsHMI<f$b9\Bn_br[E>Q3[n_-,qa4G)Q5<N#qRrfA9KD
%+_$amOL#!AhNfpr=]/i1p5I,HhDBf5neeo,@if(oeJE\ZhF2>8En]bL;Yc56>%E!rqSbn7?X:SD8MBd4G-\H?5%FSuRV2)'Y4nS`
%6_cQ39'36ZXq5=sJG#H8q"!OJ<].9Irm-q3AR32//Pf$F9^8D.`&EnnO0@M$N$dX:ZmL9T[%UkHEiG@[qXC82bsY_]*5\;2aB=(R
%Tk\0srYG4$<QJ:q'AW3*>-.4;88BOI)f:Yc;L-%P/=&+%g1&XMB/%=TI?2:&oc0__BkrM:JD9.(:n2)'Y4C\+=b(spm4/+SIu"9X
%1g(4$(!JdB4]mpAa6R,;pag4>-_(K@7c's9j5Z"CBtjh8_b]0eDioO8s)Z*sCH4%[7R139o)rB[qg=fuj)5ntKit!]/7UZb1VD`Y
%))L_)9@pof:/MG/=l'o\MW:?]n8IkRUf=n^!qR;74g3PsUW2gIgiSir$TLeLWWdNdB\;4"TL4*rIc>Dm=sl")APSq$_i`k5m$m]F
%0]a3pgp@9\>RHJUS.XshA[A&XE>D6.F]sFAVbMdX:=>J$qA-GS6\r+c3E._HMmWG_K*)D1fN8\tS4BephCa4OkF'aNj^dWqE;Xb5
%PB!_03$^0;E)FhU>2t\N#WZhX4DrUmE\ube^JUN5hk:`S\W4md.6Y#l.@A1d=e3_VI"tY&Qkqg,7Z$/`;[^R5c$'lF6oNI+rhaa;
%";^NE1+su>bXhVe4]8>tk<_^/hEPk2cF7$;H?"gS3p%V^AIG%<*!)n[JjnR[k!F:9Kdl-cAW)Md.TuMBUS&1NZ@V[DnA2%AEUKD)
%4piXAZ9ljH,o4J1QjLVcI-+[]j5qH'-&`o?)k8hmr)A8`*.%`s3.<bq&g\9mJr=>YeCGC57n@8bk;%2%>*@6-RC=\\!]F552)"=D
%k!1#m(/_tG^7\u0>XG6OcJK0oJWH*h1XTZ_cE/[\"eBWAatlcaCS".%Thc58S;+S]`&b>3EmBHb1]/3T1!r=q8pQ-6=d2dHp#();
%WJ/kF]VaB1?BThr/H<5&7,OkDX1I.;G^bulL!7$!/BQK%nC_AQhBR%@QV>[CdUt27:^0uLf*M1I3Jb[Z$:MmSX+3N;0Y->Mb:HMC
%eu,g-]Nl-IaBPDpL;(^mKXX4K*q>ZMTIgh6;Uu,^neH]X@R$kl$3JL!D#e'G\.+OBbRKn$C5#5T_KEdl-1s6>d%;qMKioU!1NH+i
%B*>tH\@J3Wl@]g$FM8<%33NLL>E<57.@"k/b[hI=-Bqp45p8\kJb-=S<0:?DmIRdu4*Fn-b%Hph[5A$7-/:\`g9X@@bhlggB-X)?
%Z!^IH!7)>h+!3.iPZ!mnOg])Q'KQS]28N!h?=:#ndZSH=iFf8D_p@]c`qpL]G:n$VB3@+m%FFpZD+tsqQTW;D:f*s#4t?\PJiD-b
%2jNM8G`]o_7Z]ZBC(^'VnL)6!9$:D+gL")F3ep\Tr<P\NP^3J66D>)ec$U^^7e4F:i'$X,[#DN`m!"T[=J/A%+#/\FP=#4=pe1NX
%b9HsdqEHg^A.`17^S.ou/F$*ujXST/-8A6iCR(j]C6?gXnQPITmdXAFl<,Bjg*6@C[(WIQ\gdrdC@aOY\$1NVVQsBI@Tnp(U_]rI
%UaPgj\Xglb#gP<V_o2-t891d]4BH,t'Y,S_l=Olo-;Q&?g*Jbq)>G4V-I40+=ucI7M+?YQM$%]]SQR74[S_O,;5tJ<6oA54E=M(&
%eu7rn)OO0?=bBRX&hQt[6KK`r%WL`cPI^=]j"Lr-`DW_%>N;?T<"sF[27_3m8fUV1Xsk27dDDRu-M;q\;M3[)>WPM[AJP9L;^GQ+
%p'gUeW5h5/i3UH#i]V9WJ7sFo3aCP2=q!_rQATd]$F]DZr(UUr[IG\oS&=Nu,,eL3D*BT(KF[,;,TSV;+FuO&c)?l$E-(l[qm&nJ
%@Z09,Ng@,nk<W5EPQj+-$I$4ORtJ-XV'`<AW7"cS+"<74YW"-pDKu`Ra:4KZHlUX*7UHAs_D.Ma`<i(9B4'.9@Cf;fR++mm,Nlcu
%Zb)$1bpC&M[\u,T-2HJ80tgAVZG\j2Xi"U2N]C\GZ"K!(k+4/@%7`&F`UW%Q>F^k%jG-j+(%SeI`suq_5caB\3%#!7T`1<0#pa43
%aXc?;dufR>prM]9d8;o.'7Fk9Ku8phF8X*(U2TW_)un-!5-@>b5?;/M2j]%gDeH$RV`gcEP&4m>%!d5[8hQ(@EGD0c>'e3bVj,=%
%0eRP3;_A)"O7=r&)*fK1V-U*P0N(;3(giU!]/9+a-eMHT53MndeUhfJc=4*-HGsC*kbh>U$]e3OnH6F!]'X,,SNaAEP:(#9r_J:j
%77P!U*jq\bUP/r+`K&"QoC8XP"-9n&m@V[Al`D1#'jfY@p%V+\rt-nBl`JdqI%6JLYAsCCPTD[\Wme7qXjNOICTh+6[Z4S!iU0M1
%,C\Ke2snUf"np%*UX8Cl'!1uFV&-)thZH"=hqWOWend8$]=#pSj2J&$O6:[^o[seHS\5SVHhHEHA9YkIs-NCu=b#\F]8chhIuPO7
%s+)iM$9?QiIbq3?!&q`<]1uldNE9F*n-U+:S5^FM<:;k\s/GZu4q8LWh-.9bO2-4pB!#8R-m2mmhZu4@qs1fKD"PFEC8I)W>.<C6
%C"CW0me,mQiN8C2DsctZ7)5V*de^$$Cj2[@g*O/XC]&CYgPLI6HFMLWM#bBQK3&!Zd\@'g2/B<tf@BWsBse-HegVhX=\tm7mVe*9
%.hM%":SV85m+D=&i(9g9Z]A:f:6=<3W03T^G(\I<&H/nR?X=5.qA+L27rJ&#DUs0>b^QVkT,.58?\tUs@>\eac2RZh4EFL!WlLH8
%RBsn7#NhCR;<#VNKq3Sd$(jt&r!^gJ(dE@GM-p2j?hWEq+"6t]>ZKd=n_8C:rX-VGV_L:`oBJ3!TdX-)`A>jor$<QjOMpo\JNTnh
%lbG2b'IV3]^[k3?9YK)o.B"UIZ&hmaU$07rJYQ9)]p#0R3'N(*:k&J_ORYI64/jpV*30Ep6oc!Oq0uL$1up.YBq10J+5TUaON.e0
%%V1+I)D?oc>5)t3^!Q/tkf4Ab&0Qcc4\H9HbWb)>NIT0Op;_IL)Z'`WGLhNM]`\'V+'1c.FPE?Q[pC:bb`bpNT%Sg[Le!,Jm:Sj!
%n%_Q-WZ$BKUMf_XGbApO)(cXK])sO4[b<C,m@Sk*ST=Ri#KZV>2%YSHf"Pn4:KjRbU0abRVaX`Hpm60192"go.sgS>d^2Qk`A=Fb
%)SF_%]tVd5>SMAAKqEfUITciIMeZl9$mkmBc\D\'!['<=Xa7Wes"EhG1Gk<g##cNI+o^9"F^O/^Gd_Kp",Q:9Q9BD`HI7$B<bm39
%)/_:10jqguY6-hap$t%`fQ`DMCf!G'ptYcbK\D<-5YuWtSZeY4iGVmGQNb^N^GRn*XhR?lf<-"FVM)h5\cNd-Vjk8'eNPCmf(uGu
%41!>03XGGT>OU+STPDb\Jr.lOHYtYZIE!V%X2BRbp1rKJAV$<LqpfN!j(4UfDWCPjcf[p[k'st!$+)A9HMM52?b7<RSE0HDr71hZ
%__@LID=ntMWc`Zh6K0u)r`-;fL6VF[lErlWg'l+R0)].<S`^1hPA16]!#!-24<eGEa,jPQ6:<jaN3.9HDoa\]9i)&8r8FmMRM2.h
%0qhYNToV%6N>h$(."i['PQ*QrqT<0-=WORBb>aGY]o]8rr`r+hcdC]DYD-?h>,!-#U6=P$c5/1#s$]<Nrr\V]hZ!,]=<%:`CsZrU
%?N+l0`HZ5(o4r_$2q#YDgJV*3%!%n4#Vc9m]_4Ra!5pAd]0I7FOk0)<-r_;]`qr7?fk8q7GN#h\!=FDDmjK;QcF4],)X[\'JaqO`
%K/%=AJ*YQ6B;.XKps/m@`D7c9=o5,o;C<8BrTfmoo[CQ<KWf^:p'QQ$\Dsg5*60lHQ:7K"WNnUA+U=$6RZ1)?V2_q?J)fA]4)bn/
%2H<W@d"p_I/d[1_s$`5^im5#EXnCZc.Zn*&n=WAMYBm[1Thj62lLqI]gA(K$Mqas['RnGE]Dt2:8.p0PK:uh\2.![0-P;bq>e%7X
%<oIKm"$hY7hM3,b,Cq>D2l9am`uE&`rQ\2'j;eOg"+r\6[GHCPe`rsdiPA2JFI/21;eu%FnQN7r@joHfp/n,E'"kd?&S4Dm^O:H,
%"0.re&s2FVe6H0K9;14lB48:GdqnTK?U>,#*'@f\`]r;gjE4LAmaV+&mQp`HejS<fUgUH'?,0OT]3CS:b)alrXN"TB,Co0Xh0lE?
%%LsnY3GS:/O#`OK^oS8Qb\suWPQ5rN=1kaV5B`0_.aM\fjD:JU53ls7dRJto7E16L9OPhDD*dd`7Z4KS]13X.g^HPs/g3TJ(djn;
%%&jZb4_@RKF$%r8fH.5;-:`f][#!6>8;.5C69A$4_j_9;&kiE^U5UrjRK0^KG=S,.kg'PN#4;_iOtf@=+UgYs=p!4tj=!Kh&UHS2
%Vu<.RJ7.SmJ>bPDDkJ#39Wcui8fMuVDB5[V=3#b-hkgV>Vu%b]&s"`(hIiVT%(#RD4H,VM':4$>6,^AODBb"?,EM3!T5g\c0''g`
%N;9eNaIIpV"q]3Uf35;"h]IlFYOiXDc;8qO5"iqGf:QJ.!<$^2/p6mbpuH<Vrg+DU'f=D([bi"J!0iU,<,]KurVbuh&dCg#"&a;h
%<%e[0iejYco:OG1G1,bQ0:4BpJ:lI-.AD)T##efGE8BS4"pt-Ls.eHDY=ZS,Bt]0"o_K6L"rL10J6mjWrOL>UWo;%S`kW_247?OK
%BkXdNg4"BA;feR3chUTh[tD8mHVoR)nXj,.'PJ)n#1"f')`<C9oVtG#7lf*"<Xbu$dVX1pWcY(3!!-)HBb9GuT7T*M_ouEZUBVpG
%*WRckC=V3W@[T7Yesg&U7BYG/J:#Pe>H=BFD$jG)2*tKEdsZ#dL5''ChTp8(ND0)$[0`:p)0tRS&L?k<=^3Y/Y'#A:gf2[uW<G-`
%Z3dPHAG([c(blg=.eb55%'(npmO9MF<([KI,S#ME2ncibJ?J[sm!;22Da_#0A;Mk1c>s(&>TfM'1LM$kqm'WI:lfK5E#EMqWX_PF
%=3/+_KDPc$*Q_!K"@tA<d#u,-g;=@^+a(luZT;ePlUrS.of'8MV!)3NTn7%C2u7n5+`I#L9a4h"o,@E6@Qr>S6FD-u(b<>K4\g1T
%T'E*"jn5"b!8GX(,u@B(KkgHaC>^^=#9/!_.2s^5@.(\%#]7!qT>GfBF9o23FR61=1<71XXV8lTMB[_(.`>9<4OA@`0"YZt2_,34
%]]BO$*9?dWGV@n)FM%FAr[Ye$Jgs%NSW@sgs$UOW;h2>H``g'B>-f:$A+-8CI/,k*57gH3=sn?_+2NC!)bo)BnWIclLNqpsdM_jC
%e4+h"G13n?s,<<!#EQ"CD:HBP$LSfOjeB?8Q>D7_o_fN_>S,]([!G"b3)U[J3#:"N1iakL5l(-=I=K#IFqUEMkW-]q-P[pD.Y?R4
%Os:.%NP<tjNV?I*`3:W9r'uL]Dpj7)5N*=NW*@(\!MKZ8kV`A;GJ)]7o<fO3J7(2Dd/6?ajLE\%0(=a]f.BKXZ6I#.deIaoGuF+F
%eSY%cNj_gjICi^17B.^3a_CN-.,[^)3l(4lAmO=fA94==-"g"1)Dl83oW8CIEU_e8e[&:n0VEbnql>/OU;##hedLp0`]tA-m(7FY
%pr24>NPIM!r[aAOEk)<?)hkWHm]Ms0f9%Jce]!O7;gr`Xni<IU((V2t2a@."IaX1_?Rr_di0XD!4BU,mchk]PS$i4*1OZi@/&*Ob
%)tm3IEW%`gOdOaEee?5p\^OY9Z+0>7QC'nJYnB\O%=%O;Q;0"1XILT&%^4$3A`Z`e1@*O@dX=#NRf?sk[,)r7Y5E!M*^=N*78l-d
%2n?,][H4<$49&Md?H#iSkHS?N-+hump#j1ik@edLhs,'G4);U[eb4uB=m=f!.-6r`om(\nYl:@L'_3j,M`rp:BRhfE>dnJoQ7a8&
%'?fODR94i.T-7/\Q;nPjO0@6TI,hQ$R-th1#hlp"R^$slT8G=a])i"C_qLOS,63TI#tVbJrENKpgR'J&.]"paF'IChhKaXTgJ-dP
%p:AJa39YLsX1c^E?.7S11<(2#Wk]:\RCptWI\frhbNl6%0QAZ+Xa=DYfLkH7k0N&,G%+KG"R4ELT:WIg3dp5K5CT-53p!T5gZqYg
%mtHe]g$(llk/=IPSa#9Xk/P$^[DZp#qXXIcHLZ[]fD=:B9'LNFX4,&<(Lt^fe(jTfjipZReLC2Y\i$X/P\Mpsm+LW&ooD,^dT95W
%3`W1u00?n=c>(@AKlEjnXN'q6ZG#)-p4fsNIA)qOT5dVcp;!3DIBB_K:Zge1Vkb+eX*XLqo0GD@P'jDlBD&][?bSY=:?MjRaga;+
%l&0-A:-1OaZ)"F)d:r#>=e59PoVMFmW`S&J*`WuQ^N2VpU=34BFPE;Q'WZ\RmVHViou=UBA,^do[<ZcQg$)JDQAm1rh9*(8s/YA4
%Bl5u"27&c9SR+N1eb8gLkS.Ee]%rr\T09-&>^1G'rQDkGKlhJuO_/Z<\biHhQtC(sQL)k5/bQ@&K`P;"*ks\4ju`!+%sF$%=f9lp
%.2SfUCcZth3X$Fc@D+*>#@G7:hOX(0rKmiA0;`B[a3FI@Dl9l$Iep[_j://0];V5?I/eG8]!"=<<3)JpcVDf1)nVhCQksDEB8=%h
%-biF"b,+Z:H$=S=4FR5*\?P8K.7fiLL\75lXI#p_A&ke%6fn(5B$mO*b2VkAZWeWE`fb4ADjJZjHoq9_Fad0Zl1?U+gt/,5]fH<8
%Rl\,oI'+`UQ95cWn8S'agM+:6R<nVnoMBh5*0a$m87QOD]hkW0qS.3e3ph*OQD[l`chb;4Bbmh)MG?78:%btaVeBA;-!%TAH:bqj
%QNfK6?;Gu6<3E[&e+KkJe#]p[QWU/Xeq0sOjP0(O)sK2Fe;DlCY#@TU.[?d`D<u@i:_Xs&F%oTu]?si^r(5@42cGtfd4*/t9J?8t
%pU\GAP!63Mg38FkqVo)3FGl]%#!:'UVq/%qG+d<tKWERT<]p@(S`7;`r(=S/rR5)VI*tbK0+JJ^WZ6!UkG(c$S$MX-;NdYerNCm_
%dX$("[5G8`1Rl`u^H14i)tUj%)qhg[dk23L@Dh7WYq@MA`teGu5V:lp.gK:i7\1(spmY">i,mH;HWj5U?MAO%Be8N=]VHMoI[be)
%=-Va3h,D(dO31ViZgW2iCm`s'jm7"KiUcb[=ukJ$9_gir.Mms1[.i%WKED)BPK:)nK9Bt>\\(J7e#,r1_l%k(jnnVGhpV\hpP`,1
%(`RjOV#8M<8q(]N-o]WNHbZJ.Pl%MN"kQ\(Z+IYhs6"7@kNt?(H+6u,rLRmUO1@d(kNQIm?qE$<B76B';QBDc*VqmHSlUcU%opBB
%BBoK"WBFUI]sQ=b:T`UIp?TA;rF^W2qe>btFhYH<^[]4/eiQIIc0l76.KuD;C<+0>]g<pVZaE)k\g=!"D^O%o]g(@LNVPYt0PfD>
%0>H]EMefA#Vpa&Bo"ljIpctQjFAf=*MoBl.Le=k1ohJD*bpmr1,*S<FkDVsJDKf#RDIrZcV<[kgrgGg5jdXCr)Tn:ZWL/,`Q&;".
%7<n4$_d7[^2K:Q7m8*"m>+[%jptcg0G:kr$>9Pp]LLt<3I)r?1ipM>9I9X%+f',k<rHTGDE2iubcH:u2=Eg[M\b2.tmd(o83qPUZ
%b<*st/0rg[D=:5ZlRW!1VlHp<=/V_1lu&*RH1@4sVdL>`2\'VPSN[4!]"Mo?o`"1Cm'Pu`gKRhIfq%Dg:<ag>lJl9;GIlUPTQ_k3
%GA<Ym`0-kLma%)cp?e)@Rnos?9nMPIkM<+WI7q3u\Q];j^GOhCM=9BW.=)K-U/QT]d;@^S;tK5)Q%,]FO8,G.Q:-Yld1=f8"1(&%
%ZGa=%T,=-&"P6!I_eQ>DC=0OQLfSHnK[rM)6#?OQS23Lm@,:)Ypuuk/,t@j@diu'sW,U^_'caub/mYDKp9.[Y0?g;$&Yb<0:JZm#
%CuSD$`GM-h[W-P*bF`XnJdK'Hb9iG6(Ja.3V_?%N34?k+7aJ>3.e3N32Hd7uqr.amc6h5Jg/V8mq5tPT<5'rbQ2BDrNPdH#V'0bV
%P3gfK@@L_]gAG1q$OD7a9+D*IGV<YmlK'9f1Ah09gf/HL#A%!,):DDoM>guZ<2IC'n6RQlIj-#+r*o.-TA1*oPD"IIkfNo3m9ccs
%$fj$l?t1:5c/7OlH:_rBe0B!f4t0@^P<A..@B>MV\@OXFZM]PfFii0u*?b_5GAgsJ^?u,&QCoa#ao7O$]W"i]&MP;cGLZM?q(OR`
%bW2_](Z*iXKHnYhHID0]d<!"NEHGSU&'`.X_otRR_:Y'BY_VQV4nH"5.fHmJHE$?p*]=RkmGo)$*=9<'i3%*El/G<<E-lXPFaQ;:
%gJmnX,(LG%\q"jP[QGQ=)Z<Z#8^D9rk1;ZN38QjpMC&5NOaq246KLr.%i(qtqtqHC:s=!h>dQk?KKTOqS'JM;B3hsW9OfbRjiet]
%oB<BS!LA'3,/\*7VI\uLGW,9No52^\.7kaGq+g;cnD1GE*<Bb*Y&i7n0V0bKTQUG"o'p?&Cq[_4>:+VJb<b5n<P/8[P!p^g7c8\A
%'S!C(die?,D#erY)<baKWL+ks,+aKFZ:3Z5.;u'TXUgN6^V$X%0tS-0c7(K^#H$S2liudc@*p370nAPhkGO\0D+:GB-t[\X,uk7Q
%3YbTSq0h("CGU#n&Zd?g?)V';X,&;W&VdC[k>^r4ckD1#BuM$,c[/Ks2<SW#3JTF3TI\"B78P%Ucd/"E_dY[Fk*K^7`2">]r_SX*
%*\SkhQr<r_^[u8ubfe@m3>G0]\0PcKd+I+.pXR29(1Pl)"6A3/l=OKBF%N`I0ubDA4:]itpi\[#>4Lmo<sZ@=@pp<TC$?W)qi4V&
%#8so*$@2qYB6F@<Qu$/Wg'Ri,kL>0pEX12mp4mXPkC$t5I4(?1B3+a;`kkK\gD:7<c=8nU(r7:0?a2<'1d-/2/Rfj--pn<)!hf_4
%e[MSLD/>a;Z99'r/32o5Y'bSsW;]7>5hgR0L1El>GtB:&9aHQgZV1QL_V$W75J&$AC6e!'3.`%Y)s4ld8dlq.r#"M@Y060NH@2E=
%EX\p3*E<)!GMN\3h!S\U!0R2/G,#Fq@/0SVF'e>:/41XFbYiE/XO4I&^QWCk;rta);#F7_!.;Hj:"YcZ@\#\H3I![@GMg-Q&5*Lg
%X?[Qq65F8=j2lqp)Nr&[aDs%\RV=J]Mgt+S=kq%h$]Qe'1FlC&;'I9:Z%T<o!'bBU,V/7Z*$dA+"q&3K!T>2)eAs0*gmDN5Y<@=*
%o)-iNZriOmLH]3r/)u:A..?Uj0:2(2!HRL*.0^_2V/o>ZhN(U07umJfq?7Ip*A.QU'<g)1`G>B#H.k@.i&%8h=&/TE;d/(k81%T_
%kBdmFNTn8>kj/fp1UABdPGgAmeDMIBgCj3YKDS%G10kb3gl,VIGP7SBE&<$s]NCdJLX$2PGP9kX04HbAVXp'[$)cXD!/`(T.G[QW
%`eX[]U9XXtI5c`X!496M*=dqn*;36P5.3"Oa/S8hoFU`5X]Z072[;KAcUgd7n>QP%WNU9.-*Hj!.U8O(\3;''[=.TlXX-E`G6.4`
%Cs7pK#4bE?GUkTdb^>O`1,=hMDCciAD*I&r`I!Rt]UabM7cV$+:>/j@#ZQrr1KHT\&OmFlT_V,gkqSE9a19suBmtNXV7\i2H\FaV
%(hh.TGE&\AE*SDlT4i"f^8QFMeY9-4`>f(qO@03&,s1RYBMc,M_2Ol'Q&uVNip'uhM2(U'B&ui)I#paKVE?+Bh%;C.$5,0RPXP,O
%PV=_lO3RR3&AKn"hB1POi(IRRm6m'[_6&gtafA:W8,-aQ^.ph;ipF^-:.58I/WU3B$sF9Q98E9m,A\&am"-]Hc78&L/@[W]6!9G/
%LpH3D"HR_Sf:F3jAlk<caDtQHnj4rc(+s--;8qm5eD1XA@`IR/mH[NO2]]`!-F;jieDr,g6JM#fm<r2Yl:S[ZEOS3[<c!OPE906i
%SZ!Kg@\*qNh:QDGC7u$38FINHhX*b@2QTUn7.=nW]P?Hr?2^@JI=LFpCVdI!,ATY[/C;-*dY0k>=DVeAqd,jmFXfHZ/QS?%S;7r5
%G/i,t,Qm%FllAK)2#`%eGqWEI40#JB%+^+R&k8Eq*aTcike`T!m^74R_j/`5?A-WO^_.(:[a4pNONg^5)htO->"SP%UBHi:%u0^\
%I04+j6q__Xc;,>tR_+!g7<gmJWXpFkSJ]NRcX\SA=;C#i15_@][<a<JHrklmC]EdDIRB8H_@a6cB.knc9e0OU0>#_sCZe*MGd=N:
%FrdBEjIL'/a#s'u\`#2JICKC,6SXoP%eE^nL\O>92b[XYfmn>cC@qcM$R+Nn&JD3j4Z,<[M;d<D-rKOmM6fWfb_OlDHX<1[75$Dj
%KPl_o6h1`q]:"T%M^nuWZc*.j(K5bS,\K"?,[50Hpg^p]=aM\q^]%34f$)]4omGeq68Ib6aiWVj/I#h68Jsm*jj;,=W!5'AjAQ-"
%ae9*fTG-"1j5nWZSU+hn8NV^Jb+T3gTTc\ca2t"_cCbQd(*"fZ/i\JYc5%BILFtQ=cC$7DH4F5""s)6'j6+bmB@%eJ:EkQH3.m7.
%10b<[F$jt5g7'*!i2^d)G+F*eeoucj7>UTQTY`U)+1?f]F1R:&m#L.f]G^FOm'M5L0d=:YF$o=@pKusm/NZ<n,N+FAQ+=5;#'ZLr
%>cs_F]YOJj?>FohNJ6c;nq#,X1D1jP/i%hBaOM+uIgf'cV*g-)q%smX$5c[]BdXF\1cL)hH)P-Ee!SNM)#SA<GUj'm/0\m7WJn/A
%-X01G\?Y'o!8?89$T-182ke?2_eoYJnFnZjD<QfG+@,%11bU:/fe*&$&79,XM"0++16NT.PT2PJ/'8X/NG#B\1*K2e3$e)MR`p*/
%I_m9SOcrIS;ial9'B,?glB0+'PeoCZi!a+W>!Sn8&LR#SS2g\,B^%-0_^*umQATa-`u(dirgHR(8rJo=B(j-dM';Hb*e&jd3!m[d
%F')b?H$g!?d)nR1XmVY]j#3`$p:tSOm=@Jc[3Nj<o>gFs_Y1c8cf=WP+YMrj&!=oqMI;/N"5+:FhcNF$:"4.p+8O?7c$X1I6Ve"*
%VD8,$M\.WYP(#2,`q46hEs@*XnWJol:*f]c,^Ul$/\C&'q$q!F$"f6a0,G`_HlBeG$$5eGGH7Fcq0g<,g%3i$)o:4nDhd>&#hrK=
%i63&'DpAjMKVO*XT&O`HMUQp[BA*kD@>T"g1F-,-3s-uX!H+9CY+6rP3dEq(*Kf@iI^/FI/@bfSk$tqE5_]Z>J\@gRpF9i,J#_:H
%B>ra%hYUV-QZB0tG,,WpKBaF+Cb[SGI3Ao;+]??F,Kd]PBOlJVc`SqA$W`<Wicr7;A9RY"LEpR"cgGc2SUep=k:-t'JD78d8-7b<
%EK23q-\?XSC8cq^^lWM*`+8'\-mE/nfbJ@#_aS*@?BR,D]A@a%A2#<DS;<,sZ*1jG,;T,>8nuAhO-:k`7(6TCpkXm4^]1]#G!lO"
%1K+4a4//XH7?#:jSYnm(d)M'd?kSprb"*Nr,-r(/+qom#TB@;YM3OOJD&C4:;!Buk]-K-aA!uL^L#eps17%Z_2b4@@PIU06A.j<=
%K7Q0eqW:416L&6;F2R^jc<7nF]obRLO%Q#]+7lAVrJ4Yo_U?JDlU$8@_9fj+E$60YOB35EIl*7,8`jMJfIb5M&ICOJ+]'O4qsgk*
%Wuf@'3VPQaPkbuF['M91nR:L+32\FL1ZBaP%l`qPA'sl+_J!a@q/GsO4a0BNnEgAA_aWIV3_hl/A1("fEKe\'$U#)D,5H0Y]:la6
%3IuQ;q'I<s2OmT-*8L_ccA7s35+GCakCiHcJpfAgAY&53p&m/:;8ItQ-',\d&t2^nfp36D6pbD;"F)$XI2681b0pc\G!]M/_OMaN
%%."BDIYF,qj)gk[8)k>>+mk5Z@o$9:9IT-tBp!#+*RDH4!.4*aO0mpb%.T;\2]Gfc9#1e/qt_M@iUp<._Xb4ugK`C1.FGUOc[EDc
%-X;]-DG?`"Ngrl0DiL*r[PeOgBU=oC%@FL9G.('In!179,TD&EZ-/!.iME_1oKQ'nGFS9e^lcE@VkG[HT%42:%I>R]ZCr:RT8_:R
%e>_m;`_d?CH]f8G^F,G3qKjt8WH[55a@K=/Q7%iX$LLM4,8JrN59gnIR7'LoB!6n1"7=gokF93i$kdMmC8=Qnc5Ugi5RasW@s@:L
%(6pRO1>LMDHG!/7A1\R.7un>)W,?tW=jW@'KbI_5P2ZD&<4J(hb+V_lr6HLSA1AST&J:0I3Hckl3CEH_=I2GJc^oKtJr*U6Ot_]X
%puL3Q&Ukq:I92lXr47q)*r/&YMQq*G"e_Oka>g?:VgULU%<Lo#A2nsV_)E;RPLq'1i<5^sMkW=$<1[IRCNsm+CIkUl^7>r]m=Gi)
%K.7<',!">oUHeQXo[N,!5-abMk6s"45DUWU!qF=L_Z$R(==TsB`XB`2n,i.O`56dCLS%>GAgt!ts-QeA=.ac8N7QaUnrS.8aa%/3
%c,GkD8k62A8OeiIm)V9Sc-<WWb>XtRDQ2fednd^e4(J7B.,!urfsan#WO>U#\S73Bje#uU&<uOIaSL+<QYP9Gl@\j$q<+<N-11jf
%;>[bD.Wt$f/e5(Rp<BhbIOo=6?Kh0\J6`C+]=f_t:7_.Lh=(,OfHia<Qd:,OecIng<`T:jj*T[Qp?a\V2k@SM6gmoLL>>gOGLeXP
%aKE^^Hh*#+ir-MZWcpR2GOF_gX#Y=8Sqta&pZM'F5):.d(5Ab.+60F1D_Iql$8j5T*5:NX^k+_;rGlh@G=PV&9'r>H=ESun:Ynq^
%s*LiU4HF7Nh/h\Mg(Sd&bM_BH=0->QS)g),qJko0T@?SU?;hXp$?n6a2,6'*M"KPi_f$N7m->%hb059f>^-s#LeHfVi=!Ep/aTd*
%..DMQV)E?$C6X'7U*;b]-ALa^U:_K`GEMA?a#s;RTX-eqM.P.]\JIWQ@3T72H2.K4;7Nm:l+D'$_U!uT2OhuB-5]BN3h+DFQO`h&
%ZIs>+PS9O22P"d9HD9)7?5lIj3?]YO2I4rV`Q;Z>H*,P?YJ#s[:$8$FRS2hY1,<T&SbLk(UpK=`F%.LE9c*>iX"gsFUlG+l/tM1*
%kZHM[?HO\Y#SKlVS'Ge?dVAH.ZK]#Bkr`k-))Ic-C]<ZV+X`RMkLC8NiLO@7SQ@G78']2CflWuuCq+;m&<'=3S'EONDFf^TaJSRO
%V=Vg6)C(`sbOTc<<f`kIk9Y);pEiQXS'GfWK_UfGc),P?0H9/fNgNQ(2:&ue,9pjMaYUl%<W_p:LtQn,I\e\Y7a.`nOC=WArg@#d
%B%)#+,b76^B9_DK`cM4&qYj**+F,>7%Q,tm'#aP^rp17&cuE7LW/4<Dd_]^(9]Edt&F3dlpXO,*gfETL>suS/kfpOKOckNps1NBF
%amd\K!7)Vp]8:\Sg=1QG.pL>jp-H12Kj@"13M_5^*B9uGll9_1gr#(!@05q_M_8Fc4X,<oqTLo^U-5tU1q<G(*<buE/^&Feh2"(,
%,$sWF+"!^R*q>]2=HnX3f[no@fL=F]G7bMQ-?+;)=P)?M=e*2Bh*k+<o"!n#aGAi3fA(X@'\sS]%@O7RGg5'[8`3nkh2SYl"8%1e
%(]1/o>jY<@c_@a1RFA`e?<2N7S]e>]]GJKB#oT1&kI(&'aM$.ak@7k]ZgYO#f=b*/oR].(9cR$:d`C6d+ktbGD'D@&j<IO-mgWK]
%"d&Q0TVII6GRd.iqdMpppL%YuEai+cmW9;E&KDB)@Q,"+q'WKfMWFbt9k/_B-l\j(A3Nar.>5(f0N^JM5@Q^lW'&t.?.dFn*&u:P
%\?Oq[_@\Cp-]Rqo/K!FNG'@E_T6b5pZ1^sVF=eqfin'fKUappXm(:(Sh9ae@,[i%a/mhSL[0S7;]C.UjBaLlK_&_$lo[)@N>;Dt,
%r^m8S7n1Zq\X;FeL)6&c_=5=,a=nh,?ab`qhu,>Q(WS6X6n<i#3eqE^r)3Z14/:V4mI4JeSU`:Z_sLG-#4Y5p(h879Cp-,_KJJTV
%L(PX!,M[8$R9t5"2B,7_:%$m'YT*#)=l\Q!E$o3\HJWX#AEJlt%<j&QPW*\JOj?aIj0GBEL:b7mq'4sU7(_D1k22OfZ$)o^m\6:f
%^4#`=G%)8Zd]?2tS7iKtYu[FdoGcnu#GWZtW`-gkP4"h8=HAPj&XrO:ZeNM\kDHV[.@M!akDHW&?=GL#L$6\L'5N(&SdW#]\oO29
%p4:IGOfllkD&@I8e)9@,bhou;<a_M=/an&D!n_J5,c3)tdc@IJ][N7"P16*%K6Q[p^8R&R2"hMi]:dnqpZ>(]ln\]E7S%"",/3qb
%r6!&tYQO@f.t)Nf8h(jcQSHuDF@?pP:k<=S_]"9UFM65T$^=EGlo*'`H^,(3GMeWDClW9[mD$tBL]Z0gn,XD8iuCcNJ?ar:p\<MW
%$a>2meIcVb;E>mcCIYrcn*2Y(/YIQ.8`W@PM-]i]6OGld,BAgFi80I[@EYuA2?O2tDHH/M`0)ZCDpQ#7m(RQ=[?XjA8ag(k?]!k;
%V=aq+`h'bE(WP)T7qu5:V^B$M;l!se4`"'NMWLB>[l-,0Rh+-LGtRr]iB],4g:R7-\OCKKS&aoBG*^cT;!-XWe`jiYErY!Vc?q^E
%<VIPAr&T9!9hgNlHfe2q9S1f_Rb!u-W;G\oR6)AF1LE&9Y'da).1+>7.nrA"]&qbH;RM`6T2'IV1T+U6K3+tU,f1I]E&^kb)?-1E
%00NV;Fui]#jZc/ob+49R%dN[ocF;8?mp[O#eS-R+F8r]:Qd6\Y>.8bNj:e#=q9mOR=-S"A5@6!F_YDX)9n,B,Y)YkRb^M7W@qlWT
%AF9dWUJpN88::q8<N88hIhcNF\d7%;W@.,=*ctVXa<^t#oX1^E's"Pj6NJ"M3G`$*>KifO.dBLI_1aLEo#&+?K?rS7C?_$iiEVG5
%=X$A!DTe`?TST/#_0?l1CK3o+g4HMT2-a1Nh[WB43PCR=BujR`^3b2<^<f%-;7#]+mLJ<EkZN*Q]@gX\%*JUcRj%T=2;hM]3h!mu
%Ytip)j"O/Io@G6mM+[8WZk6fPf1Z'^Jm/_D<UMJl\&(O=\#rD8Q03I=HMmP?AJ4/a@LaODhU0ZW-9(3Y$u")QW,EGZaFTo0EW@?I
%MhQF.Q,$[/OlBlr9dAr]g<R%u*=R!g#udm"c:<?7VkQjQKKT%`e=e.h#'Sf2H.WiS/)Vh'*h]3pp!KK`T4Z,lXc,?Wk[T\#;eSM(
%gV@k$&c.V&ai$g2lZTMo2FJaWq;]mFj5a<*LR`E._IZ,=qId;5T5tR[)OE%PJUlpfWIWFp\X!oBo(OB,Ee`Fr1GF<-H[@s$DJ5b>
%A7Fal\19.WA%qc=pAJI<1c@20#@K)>QY..o:$Tq7BZt\^EYOH9,btmF$ThC68'D$nC)oA(8fKYrd)hRP3Ii0KC(-4.kT#5)%\W-:
%j<:i0UZMP3am\Nsq)'n^NHuZ3@RFZ,qM;_6*5K?O;F@bj_c;W@?A5)Y!.F>sO96>aA*&W/Tl8HPp5u+^!Ck<7o_"?-0>*tsku,5-
%De'gX;Eiuse;7MS(D9`8d%u,pkX&d<9DMh5llWg'O%)W0]`BeOV0kB4pWm0gLGXa<qI_JC)ufiZ;(gu%N%3bYlCO>W'&/h7-L>Os
%q,T`U(:-T&%HW#=hp@cr554o5E&Q2Op\O];2M&3.`4^W[lr/djY?u8"h#u#X,5:qnIl:8jHi5/M=,q^4T>6Ig.)U\#8%R;j,OeaK
%=>GKMDI^`e?GGGS\OO9acV5"s>Q*>=<CX[R0,V(3q^[H3f.Zo"^Th\W@JBU%!u.6O]maBO<$uaj?gpKdZ/cICc3!G,$g(c5NP!Z#
%L:u1l=OF\GZ'"MJF)4\l\CGMV';uoFq?:f.MG<;@^[Q'"8_iVJI&l.Dp[S(:lSmUII&#QakA8+cX.R^0X[D"3kJ*RHp+i%_rIPhb
%W#QcV?GF;J'XDY);H[K.\,*Z,?:V]\06j#lp&66)oaBVqm@05!jLp"k=^]Zm_O,TZcrc+nLdfX:W!D/E(S1<@\_#.S1s]D)7_Fe#
%aAY3Kn)G?Omm4P8Dldc8$X_N?[6u!K[r$eFrIQu:gA1V()if*F?gr=^ia/5Hme*nbXumAmjc#nskspC#qM!+t8_iVJI&l.8mc+]0
%U_38`^6&rT&`2gVme,VBGl,q,S_c&FY@$KnI/XajKR<ZLOtH+9WF%[b]mcR6A`)c3DH9pt1IkWP*:$qG?o(<qX<6b75Cm[T/DO+j
%iu:/ifB5?3EMH[>>Q)RRO"Y5`DSVhoO*ggp9nm:@M.>H/k?u2Y>Q%)G'=cYT-aS*Ul:9sgq"OUgDfd0=licbL$[18B`[7#CjF+(9
%oXL_2A+"^B7eS?f]%>8(#1?`S-FA-('RZsRla6JMn+@(&eM!5I?lFoE[Lj0^4Z2d9p\G'Nl5*oj78J^K][]f8.#rGRhZu-a#l"2k
%c6QQ.M4@ijEj&i7rKcL$lPHWB0KSK"&,#ppN<Wtnb(8f2JK5hU@$fP#b1jm-`Z<ceZ2anI]^ajH[Rd\a,^Sac@TY<E-RHV&Nn)\!
%QAbm.-=E`:eYZLrL/2L*\V'+N?Ku\m:)dE*rn:[E21M64EuS%h;?cZkFr&D"C>D;KDK.RcJY9s:_p1ar^&Fq6\@V3I/Zu4I?8%m/
%52/]+ngC23r[b6$ebrhYOSmXPj$;;sAM#D;]17q)_:RGREnmaG-te=HV4@!4/sV@Oa.%+KoUF"b_toGbHhfFngalaT/,.@ga3)<;
%eXQ,SWqVc+rG#)Q3_]M;G.X#5[s-G1mJa&db?2(Io4Y"IF88rq#u:AbgGuauGhkC:3O7MM0(3`8'+;.gX-4EB[961pS8I`>IXEK?
%VQA!=C:a5(gbl1dj6&X.jg>8`#akBil53#eA4fDX=Y,sh<6rmSb"VaK8l+0415*m[aY3&S0V.hYZ!=q"UamS@4b>1Q(U==H!+Xcu
%<X_76caWJPp+YCk*\B#P=9fs+k-#QPoXQQM>21b\e[Ll.Ac)8dX#L!=HcF:["RC!d]<\qa*o/<6l=5G.,lU[kQha-lc(C.ZXtR>E
%/LUETY3^L-I>N3L"Id\$[bdpM[^1hd[3Hp$S=."-N8&A^VJKiW9Cl@l=LOPur&&VMBt$V-?o,&mcsIGZLK?QoL$r`+[.\>lR\n\L
%C5XK!B@MWu\f+5-)RYN]E'8*@*[J=-EiKlAd"G2-*HgWFI02Z=IM91saa?j[akQZNp!m-.<'!C\U/4Og:OhX;nA`a9mI+o[H]dg@
%c6=c@8M/uSAbPf4?ql.ckZ;(S^F^aqh,Oehm=S_Rs7bu/O90ig%<EaY0-1Z1pk*_Q7=%q&.BW23V.K0^/)FNIncucEnGmC/pB#h`
%XP+1+@)A($-*t;!5g#`9/=$+h/hMqFEmNLPBu'Jk!iWE:7;-=[?G#\)q1/dK.f$)_?6nIpaju("^`tQGEV<2.93>m/XR(7q8.u\k
%-:lSf'*Q`<9^TrA"s_;a7.J.G$e"ACSXdpGXe%O8qpaT\F$T`sg,)!!KFZF;9'5tX=i/f)n)Xj&5'O><cICEW=5I/&(Y,pNn].M;
%SrC4.oh0I5]t@,-^`mf_bl1#"jmnZn3ko>,ZHV]<ZFVnp5;2K>Z>1oj_CLmMo!u22?:t2r;`hV'g3iL3RM"7rc*1&AP6pXPGSuXO
%"R++>i9NgdSHoRpY8$[*@!<YUh5]!(bre4()qM1CL/0[tIsNtC'5Wgr:J$Jf7$5C=Wsj@Lo2ahB*`S!9SjA\aCp<GW^?YDWT='H-
%r`FT=^YRM5%_n29QHu`SOYD+/eBQP?_u*a',?I#\2U,r7$JK;qJ!rb+a(VDHqF/;P4E@?1qH%CCdhbJ3r<GdI<jturWM]5^YF;Bp
%WqmFfli/\Ageo1h[XVFcR,;#j?S5+p<hBkc(=B>^lsh]PltnCf@BT$>Mj;JdS\kAk1**+1R<<MRinP.)N)GcgL_oK[5H%D]n?V![
%Lr\CSM><p9'U,1S/*+_/*K[:jkDB"(F!IsFqK7QkeIk@h:g]/&@_ejWrL/U,@%TcC0HYAa5^9Ra[;V:Rf3Q1sJ]LH[iTk!GPNL.1
%DMJ*Z\[b8l-G<KFS5m/AjQ:SHNG[!UF'FKJ1@]$E/s0Xk_#IZobquU"Bc>T</?LH9ZPb#lA^;mJX)D;cm17E)5.Z8No%a=$93;0>
%/0FH^&s;!`;'IRgRDk0`j\G()Zgd7AY6PF,P'u3-35rT]3)JE`Ick*ZhN-X3d=Mhb4A@]2`!92*QJn*A<0e.'$D,tD@WSPL<Hjb0
%.Q3q$`^JQCS#7\)IP&&Rg!l8u8p4^X,7Ir7qbl5^(>aRi\+uVV-!0M1%^!TC0"2#!er%GEUZj#oF_/!e?7A\%QZamoMtPQ$[rZ[-
%Sn_n<CHB()[:W0@9D<e^40(U7@,.Z>mNqAr_DX=Y:qmi[.<<9*Z!]@D343He#7b0$1UFJeq7^(\9BF42H0O:jZ?+Gj\%W6<6@&=+
%dArS&C69AD7_->E]&"#\beUL#.sDr^l#a,7fXU`*S6u9`Y1B`CBAr2)nWEk.3Ba=jC3/X^c0Nja@5I,dr1OOcCu;"@!Q-*+S51eg
%K6mO!Q.,!*hpodH]t1V_pNc$-Y&,Vu!Oej@2h#?P/q8s:&r,k:\b<biTb#\o7DcAtK'&q3%Sd&Zog\I-Pl`UQ#ZO1;S#[L7_tVBO
%jo.sLY.VH]r`M36leb&Q*F%%#ijHA`Mt2@N`qjajA#D<L?5I,"Z@9*nLshIBAR2jIIbUagWkNc8h^UL`Ze_b,\Z>2$p.k@nqREmg
%>r[:?3rfs31Zc)Q]i2e+]u9kS=a<`Mb.s8m0J?q^F9HEtm!I]<iOtR':6&A(3Snj=js'jI9+D.%LkNckWf0A[2W/nTRjd$o5)ks>
%m(%-C;I;/i[^Osu/-",-%mZ)F*IpMj\R4"2-Ft<^b@eeO[^0OFba5.upL3/lp#_nNr3G.k]Xi_f\&qaKfD-O#3m<7SR,(4$?s<gk
%qcI=);^rMHk?<)7A3$3QlOCi",>4D3JB*smj:n%:J0TRPK[uP7N'nj=)]+PCQ%=(_a\8uK1IaW5b@Zt-)Z'?+F'DUM!spcd=HB,m
%_6Xt^M\!#/0lHdt(bJ*hZ&t"](S\l?7o<,H%(MhSE5bE^lN'hC"1,)J]Js\#)Iq>:8BX8F/Ws?^+gfsIg,DEU>cIC;kepWfVNHMo
%MMWX]H:5Nn0,1h4nm1>c?+^:3me5VUEYh)QB/Fo=<L+9@k44/Rj&<2Q-?8qHHKC8FIPs\,qdKeW*O[X)ZV3ldbg2Z6dOVeaa!Y*c
%eT*SF<&e7`P:H%Xk4W1@;H$e8S(4kd)uaHMDe'>5+3@P"2oo*=W2'*7=l6gG?f-PT3)<MFElT9=QpBO&2(-snVFU#QH[/lK>.sfX
%/>l:9]!5f1D8#T^abIW,>t.4Ml\Ve5O(C:?OQT$H7+0o/Bl7BC%I?q3%Gt$f4Xhs@N2>T3UQasa:``8)`dS3]3L1ZA:DdEPr^39%
%@c=$6Z!F[MpQEP8HnaEJqSb1>d?WEN$m<n1fD;g/UQG]k#LY=8F=j*djq0.L.\CI\,jGic,r[8L/PW"/=F,AN_ll[Al+?PV0"<J3
%RT`,hEh&MHH8A]?naTVWLSFc8qIO=@?s=FPi(h9tFc"jLrA&9:Q.f0u'7AllGNK29E-`Nj[;s7??MYbo0@;U\//\KHLu<l<\XY*q
%"_4@\pr%e>.+D#u_a,riOb$rQs&FN;m7a8Ur<t*!Gnbc2NJ5XLQmNM&(XUg]qK7#q#QJ@%@BcDrfhRg2lnou.\PG<_B;0hWEbl.&
%o*<m2`r+M*7$rPFL1.7tRELf6r7Pk!k/(]?bAV\#TPJTuH*L=B.pD%YnbT2ge5<X]0>EOIjitd2?=BhH10;2hp?rAN\Yl4)\+@m[
%V0i5i]Xk(KRcWecT1XBMTqYW72tPY+Uau4!RF%SLWf&/N*GtO+DT&"=UuE*+7n=gUY5#s2$X\Jqk`39K4k7r-j9`gT]E"!=K4BIr
%EFND!&OV[JFWV0I*BEINBMT-\*ufpn_&E(3Hd^)oDXTI$Q1u_:Y_2A-B7*An4[,1#\P6QblkmL/7.=3h4;G.h22KT/\U)$_Oh\(i
%<&3?hCsQM_A$KtMro(INkZ[u453q@q_Hl-uim0spfgb].iTKK9!^<_cW6^>.Nbp6d;UH;\O.X[NC8"f-'?NlkT:haoC+lhp^L[3a
%GS"sFC.!sAk#/$Fic[L8O&6h5:Wj-P];oIHKN>acomOfk\=;M#RWpUTnk.n+1@aE=h5g#U:-=qfcnGFc`04oU?(M#Z`04nr-3)q\
%+)-^Qk_U+&HN2*D-dtiYJ,(H>SkOKQ$T;t`WG1f0S4WUUE*gTq.[r<[Nc'22V[Pl&/X$f=`8Rm#"K<E^/q/lY?H(3(a1c<";1)$b
%d^.VM<U,I+9pH&ap.Ef1j/sHW^c[I6g.a+U.]t*69/E%Pi<O'GlWP)9OKtjbNQl>.S[K>Fk]+V?WmrBd`(>*J5*aC&R^fpi.G.?O
%;GrMW+[0:a']!q6\Q`@jB30"On@Hb8lLmT6V@etHd)a2,b;:famlfZ:\@Wg>\bFa#4%KK<]_fdajQBj2`T$1+nKDdgTCTMj#P0<&
%5T^A<^DCY54[:o$c_i[>mpVm/2EXg,KY?$toCA(Vg[,YDmrh`NjnoiWRcZ^3090R@\mB,+N"tOM(\nLu488!=58T!Vkd=3rWSJUi
%;rF3O8'3#WMehG2R>lk])$rO:a#4R5S<lAj8gq4:lH^FR/#n8Sd`q([nW=+jSC^T"rK]`?J5-nm,SY'\^1D2V7ti,oYZ%u>,u$rj
%'(d(-1IF7So>dI3"ko%&9*^,W,U?n'@:(>7R0lAL[s3<OOH=d[3PG$XKDCab`T14^M;;\',,N(%k.R4>d"(UmjqgL'_JWc/QQMTt
%%-<<@V/aL?cg=jV(Q<Gi>>n<[(lZ\K@o-]M3>tbo&K6HOK:5o2O369B]Y1Zp`@aVr@XJKg[,f\(eCdre81KqtD8H=.]8:W_g!I3W
%V,F)ijSdfpZ*T:,M/#V%2*g/2__n,W5c'ApS0o@?/SVkSgpCImhUM7Ja\a^t+R74Yo[OV(pY;+tXLB%'`e'l+7$]lc`nX9>O3&jh
%M*POlOZ5N\*.\\"ibh(#(C[e&iA<Fq(u"IhE7%cW&*LAAA,WX=8=Sg\A9CBER]"XY(lO7XD/$pC#`YpF92o*KQQft"*&JU<']VXg
%/sk37)Hh.)SZ#GA\6RrnD=s,eG(%JtDd5H_>e-hU+4<*QA76j0Zr=!<n,5QH3@hCSB_o#_K-PT8J#B50+jssP%kDEHDs+Xe@OYki
%T?GsKcKc*7@\W\q1Z25[OA*)>nOE/qM^b*b`7+D;'-<PB6T4)K=0P!"g@05rOX2`E"L7=E1AuOVX-65L3IPLVm0RtIP5M24X`pA!
%\h=S98SL?@%i442V<"u]?qGfdTt]4kdc:H$66EnE^Y+Y^l(-q(h%0MCLo.JXgBUY7]51>>B6m+`fFO:e"5s.Fc3hkr;22!&*@\pH
%=*JZi3;Z3&[%]`K,ji$i/^c,p*>KIMf<T7,cVSNtb,G3@^>qnNP(+q!'2W%ZNj78EXP&r0>Erdf?<7s1Cf$S8V9S1(CrDjAj[J\$
%=gG>Dbs-$H.[MrL)tH]m/0&Y%cd?_QV??3rK%gTLKs)^g4,P"Vb"VQ\(,&_#\W%!WW0"cD:!m@fr68ArVfLXO,fD&s8i/nUro`s<
%"8R:8Spd`RZ]5+H2l1&eI']kO&hh!>BA'3FKuQ=Tgcj()LWY#3OaY[70k9`tQ8\5WZ\@f&V"$dR2L+5Bbl`[6rV1HVg4#L*Z75*/
%:.p"=IJmY?0N\hGn))G(/5O"o,s0b$>&:(n(P)6U?JZ17qn%\@Z0[?^a!l%fL4._)XE<q9?Sj1rae.BMn+8e23I4`<0PHXDm-61A
%6S,4_Q>6rAVTrp_IMH,J.3+]"n#PR4e4\cmr,/\.]Y*nVA^VL>%A*.En)S.MJd/lfO'*&n,&tWH/;n^KVE&It(Q[ki'T7%uB+#us
%QK5@bR=p,^Kup.JPo:A^p"CWca\I`U<7ZDg9/IT9JYf!>;]2^MI(MopXIYQc9MVsFZ;MT:d($C'FIjN6P-&?/:[cHo.O:#,4q!gW
%0.WG",DFg/C#q4;>2_K).g1eFaPYTR11YOl?kM(@J!hTc^9;1lHY[I%.Tb)>_RfCH<Zb%iFGVO/*%LbMAu-AmgKTTWI"s[#Gp\`a
%X36%*B8+Igm=Phnf0#e+6ojpkqdEU]6<l)u.OtA2)mR%ik2L"(1uk"QT4Yc`ghj\_>4JHAC+N<9<Rm#YCV/<&f?`d_m?cQ\5@=(a
%5J@cV'[B=_]4SKVIqc[Kj)en)nksF\dKeNt-Qb>-fX=;kY?67[[Qeu5:Y0CD2s#A']r>pVhc[uOIAc_onhn!6[e.uB^qG)/bQ0oF
%orrIG=ZOu&B!9g#7T-2\-MMYh[es*AkC;g?X"<'l7:Y\!A,WsBe2c7;g:)AIk0D]LFL?O,>ZSF[2bNnCH@9+*0<DpMr7\t3;\#l7
%.EqjN/#bP:>an(Tp@-Z`*X6Tc:sV=M,W-,#$gV`!,^q#!1N7$Ng<A.h'h!-/f1\FFY9&Po?=kaO^$FWY>Mik81]*E2\`^b\$Vh1"
%96"U$F8oGn9is;j^R29[iLR].fdUsu0iHFK&Pf3dd[)9'An,UJ4s`NjY]oT&G5q0<-*imaVN\UK?6SIU]\G=4R,aD:WGc0%JQ?e-
%,3:a5fX?hUP[B@8k_AI4N?j_27hV>BV2U0mY^Gf$h.9e<j'b<><DF%PoL+MGodd6b:JMYcD\[`7in#^7/FZ;jT&ZNhc_Ta7Ks43^
%E`#$TiqbY%a;57L<^7WN+K(cg6NsVg1LBIB,TF/1$Us'tMtN?5iF7!'WUu>1mhF%TXl&ctLuRg="1'Vfq3NU9R@WY%Gs0:@qg>Un
%SIIk\5Bo@ddpjONGNF,HWA\ljO,=K0$"NH`q@;1n9[`OS-T8BYmoarH"LWeE0@C\k<ajS'3V'sL8mkdc9B<FV8I%MRI;bb6o(d0B
%`H@B0lird(*cglW%H?uS2f+Jm24?L#lX3Ga`r9h02ut`$_?0[8\_C>aT;6K$hfVho'sAE(Y0l<J^35t,[q+qI1sF\9PsN`D!;cg+
%WpO.BAqW"(Zc'k)b/f`nMA2^]5#]Kcnn+gVFk1B>\Ohj9=ShG*H_79I+55a`YJ_c*Z$=qP#g6a1(,(#gX<pZk@e$a*fFI!L=tF"R
%MXqlFT/2pH\MA,AVctjs%f(G5NtdB@>i86n8*+**JZl]L=sNBWf/CrCX?kOQ>=psrpgBTKfNo;pGN#fo3@umqhIq8=V+d_kG$M:R
%6[oP'n2'IaFZ$ce]-DB_EAg<<"JY^BjGl&Z;]CR3B+[A)mBV[V#4o-BL.B+V]$se[;X'[%*Qk.tFigX;4jNA"3jia?p$7jGTWp@)
%^L]fDZuMBDag'h6@hI>>S1A:DdSkC`Mo=RZTe>B[7`'e:"L>>VODlG>!(J3.!0<dmU4?+HN.fp=O[+MIgJgm]+Wn3L4oB?+Par@s
%M'.Ta[XNU*;T8'q^uaYE'1#67I\c&^!'(YbX>N`djIF`X#/XH\\$%k*3$P:%G"VKg?p&TW1_@`nGcp.Q@$"kLg!7;D_>*LI.TZ_"
%+2L2Ubs^&.I&,5f+K5U'Z!k3?jLRL=GQ:hMR^h[B-Xfakh'1"uGnG0W:7f)S@uqY>EAc\0T70],NO@YQj5d!(7G%T5F>,n.7V",5
%=88S^#ff=EDk(qFVC:L$9/N=.*+$B>0m7tXe'>?X>,?P[j#AmhqCr&&>WHNB]q+?^HT\9K?$?s<9k.&Bo_Kf&5R,6d_Utb6M$sDS
%lc0Bu87Rduk`.-8C`9qbR2V.HDl0GM26tfF'29b7/jIW$HNg%^OuhZ1VYYKR-:5`Ai?NL?(oVli_Sl%YD`io%DY7k+4JLb[rf/1F
%4>h/73M^=6^9+1^.12KS>qdtoq$Ogs"-QKrGL>i7V6DIliGouBM*;Nlai#.'Q_9/pAE&S.00p2jai#.'Q_9/pAE&U0QD&hbj(.//
%r9R"iLuW%*NQg;SNAsZ[hAAli7iWliD^9Uu!>3Ao`#E]?:JeuL1@[iRqn<Z_ai#,QEYT:.N#6IaMURpFh?bYVp:g;RFs&g.kn1/-
%WBE"(MnIL"2m1&q;,X598S&8G[ei"aVTA^dn7s&O>rKG_[nYALc4%/XMGj2<+-+%B9Mto\kj4eXNMXfN5K#Fo7K]E((Futd[u\0b
%Cu%Z5mX3^$Ub9o?AB;FMcc[7TX?Q%Sg0_4BN8*'0460(P&d1U7s.ggOV2'G(g.GeG#jYYLTrSJVU^,O,l)M8)I??;P'4KSaZJ4gP
%Y-&kC=^5lWMh`$5H4`Fk+5/<49V*#(4DN^OIlCi;Yp?J<5#tjjo(liIR=pa0HN0mq's`n>qKnu[;#@l]NN$po:P"#j4)`)<c&?Gk
%/:>QKl+qEl7I%nCq=k!_pR!COqrPgj^X6rL\pqb%YitBAi*s/8?]!7CO&1$XSq>?<O&-c:c/YP],E2+HVSil3s6;hR+8E>7".tY5
%^QQn(9gbh28Y$QUcB"#9EAa*+`_5o"o\Z%Q`X2,5%:Ahe_]L<':L$oZL[j,G-2n8@>b/kC<DVduWZ'L\C-&Q\bkP752m[5A1j)Zm
%kOc-T"/*6%V/s55'.&BJVR)S+`a<2^9ZtCr8iE4tE`Tgj1DD.;>H112e2,U%3iD-2c8$]:f5g@Hae^jnfAM:Dc>%V\DNE=#H&3E-
%RT<gd;CsJe[^:FR[?SqX-*0=Y&'GC10eO;-JF-3GQi^$^bf5BGW+fP(&2o?qQWQ,B.sbAXbrclFY$2%^36Ia@Q0E$9S]a?8#XDEF
%*@:NgSq@LRfqQ\a>DCF<W>_"70RntT6oWOS1S<dtOYT9sRp%]\[>_JilUK[N.VU3$_\+i/OYLEi(gIRJdrKu&]P7ME>6o![&-9k+
%H<NM(`EC8L>8k/I.6rYk4dX_7eW`Z75[[ngjGU;p^lnpi@u6X1Eq(^=(?ii(9+6=tCU3\JR>"S?kMfZ/$g>QDKHXt;_hqA4",cFX
%J6@Zdjc$9?$X1]PL+ZXB-)*V$VWZF*@cdZ&MYF2J)'I&.'PCQT9BWW"oLWX5&<P/SN+n/+<kAKBZuTja=BUl&0LSpiEhXjW_Y_7F
%lnY4Y2:$"LCtVq!9;K*0AI@O4%B);q1^"?k\kRFF=YTS\9U_5)/FoABeLf5MWlYA=^uQ`a5X7dKL2>qX[%UWJK%4[D6#+T@'d.+f
%7&!8bbbeWsH)+?g!XMLf/hmAF,AYU9PT_8`FVEDebVTm/&7(gh,Yk.7UKaIO;ANZdDTOMnq@dE?NFcWt(f7jq5%Vg=GsW$>)<5Hm
%dmd*lquQVD;F?G1@kaNh'=^_lYV3PGM+eWeGM^[lOf;M<@b#LT9FXCl@HF:?(`)b5dtGf,8o0V]b6WmaTMYg1[OB>bBgp,FNKMd$
%'hU$M$fEQs##c0]0/5Lc<@Xcj.&prPPjnZY4Rg^V]n(bca#!m;B4UU#:k+<W>>T)R!,+r5fg_&k*\),o@DIC^/X2Nd+kklYP4kY>
%RS&q[3)PC'M)'tq8D85^#>q9'bhs:&0FlB]Z/A\EG%fQX<KrRTFF7QukU$kb_?J9pYnMqinqe.#BhS]m"G)4K_jl;15nYr3[#+Eh
%QSmk[?q03h/?om39.\29?uQfn39$9l<2NQ1M^=74:b$2/["o,%eWsJ@0Bj6`.(bLWVXrFd?j=D'liJH5XJqASlloh2<QUCbVM,XY
%e^B=`dB41JDfuEs:ks#kr),*KL]M3*=V?]";5+'N)O0;N=UrAg%WRH;bX*74AaE^5%.&Nr?jh8\]$6XF!r>2M)\UP-k!]<'ciAe9
%PsCmT.'YTd$i1H+7Kr<rU@,go<C8';"Thn0ZoeB1Yd+6?(^N)jdnia37>3BE7D97V"sIfFk2=d;SkY6.;b<=5KsYa7O;3Im!2(d:
%/-c6J9UH"+67&?R$ZZ6@d53(\(E`e<I2s]#f0N"s@T?-!E?G=Z&f?[`r;@7lb(+'QCtqlqk&^&YMFMRl<jG?^h4bZ250`+G`%OuB
%BZOCK"&P042$6IdW3_#NeJr$(&^*gD+oj'e8sF(AKJq6Uk6SIgm/H3qX@rfBLdM@C`lauG0nJsKYRa9S-LqNtGp23)'a2pe-(s3K
%%DZU,$dcTpLepEp=c4a;0\',kPKMB+^ng3#\WJca,R.SL>+hrsKi#Ni#'4@-2#t$L#cJ"_T2#E;4ln[;pfc!8FY)%PE\hlqe/9pW
%+mC*OTGGla(jOK5#Cq/p+qKq='m-*6_#C3!WZ_&0Xu):.ZD+ELb)jfR/1G"G%[KZS]n,lD6VPT_H2taZg6-d?AYM?ek$X%@#=?@?
%9#sP3()gI,'MUH'TOsD2%,E,Y\0t9PC(Sfm2'^;C.#7.!goBOXU'-Pfpc!>.XaD&Lh6\,a$G[`K=+S**b!8Zd_dimq:^=P$:Dl!m
%.Y_2_o5&1"j5C6ib;+A&;"I._SnHJ7Oa3Z:C1r;u9MX,,M+guoR8&+VOp4*&-W!J.B:#:1"/F!OWb#`C)AABsOd/Q6m(@Se(q3Bg
%XF]10NXesI>\7P5@l?cDV>to&Z8huHAYQ.2K2T$(1^/V9$11kM9W8dFMeZ/;V5X3[>b[sE[ePZ`bT9j7A$!na@)T$qYn"3=<[`SR
%;24*X*^EXV"*<9$>/_+.s)BGp5:@ZBYlqYd#s&eo1RU6+W\,sIR\U@.^cZm@!F$A`^dTq6VW^9I+M.ZW<)oY+<1B2Q)_s9bi:f![
%fX3OSX<9*/(:F>UA(IB=C0:ludtkD>js5n[]$6Agd?t%d`@aI8%*_uB4^&&KVJ$7:MKGgQqGL9J9J@i9])^a2UC,DF3h1q!'Hp!Z
%L_N;(&l!5;77<9Yb#!HI3UURC`diXR-'uNH5Z6[jl\<Co@cHnj*'k'.YIpVGLal,q[7mql$%<?5;^PDTV)*?^1J24QB3@,_3(&q(
%EM#a9!0]n(EEr<%p`i0pZPg/D&4@k(6nL]e$;/o9$:S5d]EM&#WWc#1;M\!]A\^C-Wlt$hU<q*t)\]/%Vp\]NdnHZL1T\5;6.g%%
%fX9)h1oZ#JjbY!mQe:GYUWbPCc1<^FBX,Y^WDZ#5iY]nPSeWP)KJ-"fQ"p]o!CB;A4c"k0-]b$JVeSu_,F<E+,KcDA!>@A(BTf7?
%FGp2:H!0lT3_W@NccWZ2+O+\fe<!sDlQ3$!kS\JH'I3'F-?KbO'=nEB<asPc3M80Z,>/DMKj(?Y97s2iAB/hR>pAMS;9!a>V?88u
%W?Z*lhOglrd#cPR=fI\rNNIO1Hp[Q9ba@c@$`r$ma&0iuO'QA`*h4S>g2O/<0I1`N9KBWJN`s4KH;<$SU."2d?7+p)_6F@'UO``R
%T_t&`Hb2u@#R1q5k\+t"*@$qZf/jCf%IHg;bf[=Y!c"$3f\7^8Te2NaF.BV5lB5RO,,Vs>0^NdY7b5Z&[;9OCQJCtL_]E%+)0q!G
%YFu&.=AkQQ7@RGbKOJecaE2-_flRNP6)cR),lkG`%ho<aB*lI^!s;]P>&lEBM:<CrZOM7t868NB`<Lm7)tk2kH0.3AAiHYc?nWdL
%@6WFW`8FIt6pR0=`,_/>R4p>5]3]%aJmgX]<0^l28ohL7XU$/,;AOmiC>KXNJ-iNiK)VXGL$K^JhH<1cKd@WH=c,!4OJQn?``*^#
%a<>k(&-tas"r"eXTHu(qA69/`#.WKhQBQ''bbA^s9ML^D:_&])M^Xd.P:&$EIED\q`Ogb6dbIi4)TlgEO4#SC,mr6TM__H(Ta\%[
%NG4Hi1(.&d?752N+?/Ud7"mWu(&",gAS;sM3K(RcP$!6I)0>Fd\->SGY+H29%Eu9GJ=i/_Z&'KW,)sSmF:G,$@\F3>m-87aB8sPP
%H%G]tSq%pE>$tbO+,l&';4sTRX0T4=8B/EI!R^/3B,S.SA6%)]#36-`)V7ge&h<"5Nm3dWR)Jk]G\Vkh>,YL2aj?B9JC-kr;dc#n
%)\+@J_*"H\bZSOhF*(Z4N-Io?+?0ho81FW@VQ+_=NKqV)&'S1?8"u@aY@g/Xjg(?A/D4TtZQtejB*h3>7FQssKI'c$L'EuSd"]b+
%A/U]4<2/*l&if`NMaMGs+JgPCSdgqhiT/Yl,u'\P6nR5j_U*IlTRU3Bct-hrb]kf^ntn)AYf+nR]Ps2''$48hA_^G*eoQ*mD`^9F
%9X8afS0a`E_l]G.#<[7[</%Z385\rr"0nCCWJio3;A!u98;U)ROL[[0\=tLbln%B*<l[J?W27qmFPBqB-,d*qI3f#_kuHJ>Eg/:c
%8X+4%#q&1i2B_aGlj8r),sVga3&7O?9+WB=Pm.PZqaraa8\U?eB)>1u)&'_TCkSs.0*oU1WM]#3$#J7:5bjc93\sQ'.^;,_7iCo_
%ln[<&Zt[JPJI$E-B"9Zm$-/I[=]r;$brX'I)T76V;pr!T[W%%\k?/O^PQO&//5ao]MjP-=hA\$)YJ#cZ=Y'!]A4^<U+NXYr6'!d6
%fMSr_oXk8'SMqNOnhNcIM'B*Xo!j%^a@R9sYH`VR:d]M\XtE81$ng_Q*YKbc&b.Uok.JY7!?PgX-5'lp';5T(3cke;T1'*PAKS(e
%/%R4^!YDc0/4B^\KI4k%;Mr@KdW8fh\]$BB^'YuV;FI74.j@h7'G3!>JF/r8!C]CcW4:D)4F0L8oB<#+lA4KS-YH`EWe22jAlMa_
%Ta0Fb$W_F&>iRP0<11-=$>bK(.^P[i*NUL)`9'5+Ckpk"ZQ4AJ+ssTP>rY`$-QSD.)M/,4BdK"LMU&=e<>QsE-R6dD^OltEQ7=o`
%G'B*2:W?qd:;;=5]CQYW[Q?]5?/2!;E+Z`RN\]bBgLYu??uGO\;\tJ*KHT$?a8)V3YGe:-(u:?s\L=`=H+Qajh$;!c$mciBDE3hN
%;CZ)XBpVXO1:Z4Q;]9O[:eY.A7g#*69h-Lsm_#9/U)d*=PG;)hP9+U$0Ql3`a<jA_ACI9(la<8A$(^$/<HP/b@\ilaZ>qOa//m=*
%e7b1>e0rI!2&[=P0]ZdR]0D,jEE!iZrY2aW/=[O\E&K;ZB8KQ]KJ&`,*G(0Bm4t.DEIP4)0%$5C*Ld[]Wkm'+bI,\s2C,>$.^:GM
%/sE5OE3)bTA\d,`RS(dn8`eo#6.>)ofL6Q.o[E2cX9^ZuaoVYb)NaADdV@i_/"M^tV(>o:^]8L2m7elWb*m>g,6_7?QMBPsble^#
%6!2L38sV\,.2b[N3%Dho1uZ6uNK:)J;+$rM8PL.?O!7poK%mcM+k%]`#O$t]GnYpj<5bjWl+OnG@IMj&nl5+ujLMKV&.2DokY^JX
%mhfFVX+oS8e@!JQ]d"7HH\ZF,r;RZsQX*1G+q6b&]u/O1":H@Mm_5JqN&4F)1L`Vn[T+#99:W.cFhrmC+8^Mn\=C^3@b>dnT83md
%GB7i;r+=@)4AD6$b@V-*20`lBb@_pKX.\(HG1d?QEYpnDG(&UegEpjbZ&?G>_8>-0Xdf)m4E#[4_PF(f@efP@2X2"jI%&mJ\P0nL
%n'l)UIapB#VAV%]%"/0$<8)'T>`c160$%Ji*8'qd*u=60:<g`#\QgO5Y:"L5]J!AHhEkVd*f`0M)4-\p6()TRESS_F%O_\4h1sln
%LWfBOJT)XP\5%&dmb;$6!eMeiYKKqrI,m:`[i7AKEQL8sD?uV"(r6r_+aKVRGPll/\T_S.\G=s"&_rddJ8Ln28oB3n\'?MJr9Ui!
%e(s0"Qi$<.]7%M=GP_Gq]+$MaDqQ.F*[\nU`SI\F3]H98BR"@Xn?tX&aD]jN?<&PXMnAol$[;KdG'BDZ8aN7jOZjQOibk6XBKs<;
%4g$ib;""%P=RPVN+[$WcqgojVp&thJ>;G?WNc:gP[a?_L9&BN6O5h]of*ZY3GIT<IiGcQJ_Vm\__r9H`jRAr_6=26MrG;bmo3@W_
%c7K_/p>[tLl%&eP#mB)pgSU($Ws@ZKRq10;C+!VJRRt51:-q(feD*8Oh)DTp_.7p!l&MisVC90Tpj4i[Y\eA],62/Pd%bgJ!!;u:
%4#8X?&^RMR=N^G<s"mMh3k&Et(4ga#.[a*9KY6Vf)E35Ciaf[]jW:>X+#]72HsW?6M[a]lrU6(+^\P(ZT76S*qj1Z;qsA=Z^]42s
%mlu:#N_@&HV*epDq9A@mI.oR7=4YR0^]*lqe*!'95Q:W%5QCZPLQ=[qFk$]pQ0Wo!_tSZZlrU'f?hs*0c_!G9`hhdt&&3VhbNDM-
%c$K3)044_U:Rhc'gKo@+l,&C%JlSsK"CnIMpNJAX?a05uLH>t&lkM>SX,ol`Mi_-_Bt_::hEaaSX2e4-)Aj!8#TI%5iWc&Y`3u=^
%XW%LS[s$;NGTdCEW<tf0EgYbDhGe3BUmG#eDsn1W9L4"tHFZ*o&lI5m)kaE1'L+GceEJT_eCZfME0je'nlLu@G0/8H#L;V&:mbPF
%fEq%Z#@8JXB@q(a3D@Ic0M%M$a"JmjQ*FZ-,*h/l3d%4Y1,Pp5eXAA"0q%WNCMQ8N*75;Y7G.c=4/)#jq7A!/rgBBg%*%qpNoduS
%'JnL`4P9'PMXi^27CGX$VJ=E$jD_74Hn%3cChRJ<DKPicfaaM6`E%:0E4OGQDSb&+(CYl;R2%W,:AQX\kMl"kfep5dP'Db"8F#qs
%c/DNd<tTNM5lPrnI_j7cW6h(;K8k`I3JM>ParYk1LlHDCNTpeHkKR@?;l6Uk_oVu4hsK#jf&QP/rkjZ:YP/s6R8gn^Af)i=o2^\F
%QqXN=jF!BT:AF4uqq_!+#C:s2Hc^(:HgIde3CuYG.RQ%'R_I9\0&DCtT33;NS<68oVOq]oRT?,g`+Imdk8n/4S6r`>2s,"8'4jU,
%PT[=n]3d6C6ZW?`'t;].bW@1+PWep+$A56snsG^-#YA:urR#,f@"^g?r[UWoib?Xf'9F>I@bTcUO[[6Z9[fI;c.,p*6sUA68`>pG
%c@4nH.:@MTJ\`Dj\*aSp.dHX?,GK'RJ%se8"DT8bAnQW7X7Zl_Dk38qo,2Qd`GsckCmP@e`&8C6YO,)+aZJ?2e/"7_.Lg9-OnJuC
%i'_"JD@:o5Bu0*n]c#lN7!gnf":t^$*jej%7GP.!81Tg][0Meeh+[MFFP:=3JB9V_<?$3Y;/@tNW"U0(J&uu)(!dtoaUg+)TW"Wb
%i+)/:4$1!DiFmi^*WN5SqpgTUW&$Q;`P-uI3Ghb]qDP+m9\d$J4ug/jaTD#09M2Wd,M?4DN?C.qG/L?npLjq?M3!46J,qJ^0m%!F
%.slsV:6eaG=(thN<Jj_ijB95aV$F$X7(6&Tn6X9sF[Vs&LDZboTMYLthMmCUOIVQ<[XHf6`m.SJH,r-X[okW;e=e$C#1AYE(22uI
%`q'Cp#D,r*ZlrOT.o+4O,<&,,`[SI#c/3I"Zl2!J<'l9FBUb!@6@B3(@<9,>mi7P?(3Hs8NhXsS_B8u]<0RmG_A%+&<6t[h[bc<K
%50'UA'aYWP9cI!ZO&'ia,X0,k@XhY-]DS%#h_cbTa5MkdFFk[]bW8dqg6j,GE+3Y+cHaS@M45U_NtA=H!1ICI`^3+n</-<g<1aIn
%%A[\$KKm]G&-YY\Pj0GC/"fb71F1WL_j8#O+/C4o+Ld=,g/U7J(K%`P"Ts.7l=E\i"IX:#W$YgE<AA$aMAn(r8^*?@M>98kAg64I
%9Fuou=TV3&RU7>l]Vp3nl?<m&[k.;ND.WE6=RV2l/fK7=\mRX:p^T2QHUsI<Kq>QOLs,-a6(PKb$m\u+TN98e&..g#VRu42_QeKs
%ASdr;s)tL7L+;]+^$?!u6\eB53Q//oCtqso+QR)_UL0NnoNo2P!_\ltT:_:00V;Q79RJVKSSfO:i9ioo2VB.r%pI?`d?N)EO?Y&h
%Sa(6Sf'[o5e-iWA<HMtcR2[qMF.'kLAoXUkZ78]FolA,cT$!e>YdW2YAiV@I"sO,G9YoG2qj#*FLUl6R)NUGoBg/d1d)U)J15QQ@
%;^QNZDqmp,3jQm"6a0%(AYqh`#u7eJ;@+8aQYU`u3L]a($c@_O(mhsC0]n_HA1qMp5?:n>&"'H'D$X?p:s%'RYAn(e;'TK4Ah!$c
%f@1(:^/q/BRuphCUV!MSfn;d/?9'oj/V+IW\>bpFb.n'?m#f"e6co?fb\NfJCEV.a-^2V!OZAXSqEu(NC'>KQ7jY?qP*2b@c/(B<
%&T%J(?"Fp/4J:+)+iK'_XfbOha?Idk71(LIQ`$5<biE@ChD?ShOL&9'BZRiofBJc#Mun$_h;j#FfTmNsIC_Ed'7bX7c(cJ/,/g/M
%FI,_=dN6<.Df/4ZjX]q+2F)Bm6HIZZA,-`en1__eaK,(h[D@$Z3bW2Y=Wu=Z+rn-0a6^`a1T3j59+#:hi]pfK]#9_)jEKgX\jo&P
%S^qEJco=)5_dA*li[Pr-B'W?@4lILY<mOn9:fC;]50#Q1d^%5"iCu(.OiTtFD4>;V-V/GCPuD\m:G>//i7a(tc+>"_NPiMpf@#(_
%kFu!Xb=,BM/ahq,nWI^tM)s%,5K'O0L!n[4T`ABpBHVpVTI%<'#Jfm>dT)Af>*r@[d&3KYK+qZp%"m$ObhgdW0UP;f+)&"AVu0g!
%C4r57BA]YT[`=dHP3>f<F']*mUuiLcZ@+#hoHl>o%O5'10I/!:FpOZUc:j1ajsB_s\t$sdnZ&]F2^c9#/Js/40/*P/)h#q)2r0^t
%?,2!:*8mDQGHtN23NG&@dlh3E_?Fu_9dV%h-OeeuD&$fkNBgapNr.q(/AcO.X=oDdV^Gp$Yo;,..E6niW'eff>0@tF)=6iu&N!0W
%>9Qp-DDlj1f%/BshJ`J,7t*q]%<037Z2R%jIJ=j3)2"S\\i_!1Q+U&B>p>N/R3FsJLa_;_98p.5A94/nTHf(Pc@f4UAo\9Y'h,@E
%f#ALOL'&<,PB4@`e"Xdh0kp07oW2e3&UL_HQ4;$_U8*@da545Tm)^]/S;`Bii^aciP*=Mg5ORsW2Luj?ENBmUCPo>&;n.O;d8$D0
%FWZaq,FYeqOc;bhJ^7DfY;T2!DY=YcVpln1%6]3`pMIP2$W^d@Vs;fFG@;uj.pd56SL[D*PeFhh<cR^U?C<R7)T-mg8,Ue2%H[N!
%6?mBjdlj@a5SOO@PP=t@+!\_DShlL*@0eb#&8I$4.3V4(/1&LKf=@[E*g3)$*-`TD1,3miQUgX&>fA<fg3[2V9a>_GNsl3!\TQns
%0snuW^+dVm&*n4].+ZA,FPB+3-eS6,"79A]BU[PI(hW3ae.TA;2^Eu]b7g#Y,pl'K`;K"C)t?+DR!6S-Fd^UAV?rkjMPRdQEOi87
%Q,A*P-.E^-oPp/OUU%FcYG"VDPC"\<i^6eR!hG?D&hkhV>Z$?X?6!(ag!:V6JDP'EWbb(<Atg2Q2k+qrX+]Itf^LLi@?e7B/Tcjg
%Zi?&3WZ\A1`7`UCQ2(Mo%V6.IT_KS6__eHP6'e9Q/a5!6S^ZUYc#VG:.TW8-Eka!qCLei2IS\r/i`)L$8'+EN\%NToGooZ.hsFk@
%mu]brC9,T<`pS\SL+TAlS!<O\Rrn5#3l],4!$d$KC,k8=1r7SPH-!SZaEP42K2_.^KZ@LZIm1.7"iJ*m])h6f-<JEE@9Y?!F3Du2
%@W]*"dPdZ%1c)9B[bmsh5%Ese?"aOFnEMd2CGO&5#AM;n)%PAT4J18?=$=jh>mq'<Eoe2t'i\d*_kn/MFk/?`$4q4,,ALCn1?NUH
%9rm8cI@X56gDGU&ehqPQnapj8f*Iq=fGQa3??<jW)*6mRV^QP3kZ$Ai>+ED@3e^J,T8h33c/XbOdRqUVf4WaCk+IJO@8i?r1(*U]
%Rt?HZF:"G.fGTKECEK(.Vq;U44E#WLSKZEkZ(=5DNFg*L5CkG^fPc-=?%]$6(@2pU8:+?_3PZRndU$l`[^kOgp8S7>;FJ8Em0+#1
%Bcd#U=03'tgXBK;=k0qBb^.YobsU<Lor@B5Ra.^qJ?3hiaEjE0RJ-1jbF/%_VbNfV1[F/h&Obp.HI]Sc]%aPtifh0.3jN''AAXsu
%S6'PP=pF@S0@S6j=D[r[H&7"oG3G@dK"7SJiK<bA"hFhd:O3>p0-*Wf$ZmZ(1sAP0j;E+f]nFLWgll%eF41/kU_d8XZNfPLklk'Y
%S<+u[`?[#-s4``D&;eVsman8$kXM[]0Z9rl8>sV_?kS3qO!Eo^.#3/tlggK7dYlfQ.Z-#ZFCJn293@%AE=BCZO9m5HGV,9C1[2m%
%CSXJKM^_Q>Gu&e'L+6\<ZX/U_=@q1l+F-o`33llRgDjA"`tuBq30g!!>dI=#f;mpg2"to^Pt`WQiq^`jJPG-Wd':XGjV?3Id>[k]
%%L+3fKu?:\'4g&:>!:B^\%;V5Y,ppD=^aqIXF4hsc%mZR#?tEU@i7A5+8V(@o(('sE.:5-,GlSO'8gp-9^29=`!GgQgT'[.1,WMu
%nbR]\iGT>I]"L0["]8MPJuQ\BF,S`s&DI5Wp;0R'kHdn"T`gHhWH]kbHsi[Hb[kSCPLS$%'c,`k/fWO^MKk8m;1K(6OP[iLm#b'W
%*Bea4c7qe<h55@?"<h/Wh*nj!-+$N9pGe:`\MbA)3_!Ms?tABP82^_<.l$c<]_YkWR$,JRM(TsoY!ma=[fs^"d7/?-K%8I=JP(9^
%kfZ\=bd!`_$Rt(9h*Dqrir%;dm8JKNk#rCs'/_;J)#G@H"A'ocE.*rD+(rEW/p?)V;i)rk$rH<%F10tDNnr*qaG?h%hR..)pEN&2
%7Y@IH)a[C3[&;V*_S!?NMS'MJceu'th)nU=.^HJlV3B.ef'\KAiZ-)=;ibi&U6h7;;(QGaW^elh2r]+HcU]MOWNOrY0J=fh&7MrA
%qGLEB&ho%l#+^i&$OaD->AH5[0:E_"2OAY]ig-dhK,;%#mkmgB1VfHPi3dOB/e`td?C0J[8$DjDgZ.Ygg<.)=>Y!KqDGcS3@roQ0
%<eqZqOG4Xr#:88U/rsu)g*c\VL$1XMR,Q<O^_@&/-n.>Md9Cjd;lpiaHo[=S+sLNlT7LRW3`d"_5:!E(a<(0/e!:gEj,t3a5(a82
%"jeNJ1faaK]GG3Dhp,MQa7`YT^JujlSml3?dCEcJH3lg8ZN;0r$maV%:BTY&=/O'/b\<A5pm^#CmV!*8_hN31!chF^VT'2$6f'qm
%R8i?T4DmpG!V;k_Sg(<tS]\B!cV`QUS_3%@*nFY[hT8AaO'RS&qg-(2G;!Y"Dimdf\tOB*2TOOVgtpgXXEpWbm8IhNWo#lQBY7fD
%7slbdf>6pC)E;!*H[#qT:!kfF]?b]5?kK'HrsK75&=NH_f_K^C9[Na06'j\5Ds06BY<^.?5/-9!RSaaM6suD*,A42]/6!+,%9%6R
%(LF?b+Vc]mL=D;Bmdqb:!@G1W[l!TM'\c`#BVNZ*q2`$"r2j`;E9OO/P;\7/D"`c\:06tXNh<"R$#\/dYj'd/Y[^4+n<d2<Ya:QS
%0/"-*E-j>p#Eajj_;'a83pB^?O1a-JoBGem**mF%*d8rX]u16BlB_gM=afc-M)QuEe@;Lt.@pT<j@AR)kt,fadl/"1RRZuj\"<tJ
%F-f-R!`]6[Xaq3qahacn`@JO0DG*`JB+d-tl\p?-X0IC7[$Rh^a$TPIkq/Y/7>5uU=6:(Q=/tW#7bMc?88+qtM[3Ys4AOn.6)%?^
%#/q`PZp.<R4p`nYnm)pj-!=<Nm(\iKa`tS'j:gm#n$0%AY]F+M,''itZsFK&LarAJY0/MchOYUjK"(,!<[+<=dhI?9,D<A:\B^D=
%cS)LULS=fM%Njf%c2f!=jmHa(U$@\OfSieY?/5qM&O+8!.\/Duk,`h;k>MfK:)e-?I=_ps;/oYLFAaIG)0F0q_qSo9k5+b"Y6=`&
%QFX<FRV:.(GEk1g&AX8.JuR*kQB(VMp8-C_>E#>g,`AN4L<@Ak/*_$[j_.%D(@;#G'"<tfmMNt])[C1<8';s"a"N^slC!1])T;#8
%27O\1Ge<j%Sn/qkRh%S94WC6uXa;qrQ$MC,dtgJmF72`9]!E98KDMHJ&V!-(a6Mr]?Ai#q<MeR;0^dW9WA;mmLTofso-)86VUddR
%eEL@X;)40sJ=tp.b`"QpYIi\YeEIa^Xj6@50t[oZot)%(G+;9KScSmumOC.a3d/O.D6[l@Qsl]$KF;>8h>:Dr9T+%KQ!Rb\->1fc
%Zc/Cbce\GGWbsgdI[B4/F#SaIadOHHgo0/oMA2b7i[`Q28N:5[1%%M457g8Y,_u8"juokMPUS=pB.AWYnPuG&dS\NkW^D,6!8dDC
%'iQf<+&\r_g`<"%NHn@th2ABQdXDhiV2.K[HA<C_M;GLheY0E@.>2)T^t.lSf*eUe%Efk'I>2/6XbHo[,)X)]OZ#uJRt=IYb*G?;
%;5DK1>dk\W=GIb[999mS\WZmYA*l?KWF#>8RqM0RMoa?]9orX%$safNh0N1%E[+!fXh,HWI<dbO^Oi7F@t&jsA=,=5*--4f>!gd]
%1_efMlChj;@rPeZ_ohj;G1qoT!^"oG]_X:AJdZb4pM8E(/76@+7K*"qT(L[Jn)AI*%dZ<2<#M1C#(43=Dc5.fYfj_5!k2@)A!^%W
%N)-4W,>:;^FjpXSP7%WSgjZL:@l/RS6&g/m(o?S,'\H-"1l6[a0<a\up?Uu1]e(e4bB"3\ng4lWf&>:+]F0M*HI!/cF:NGGfr.@l
%/NO9d;oQX,<1KsEcL@t#*G[d4:o?6<iu_Etq;nHEl?T1e5"JU?Q(C+P8T[t\83GN+/MmW^7rC"V;e'q<-DQH(0N%^8X&7AA:Doa(
%m,$.1B%7:'^oD#YWqUfAEL%O=%WASiM'/Zj3UBWV(0clW]Xq#2?=8):\futKSt0]!*pqhAaM2IUL\N#>E8,)I1Hr#DeTEDjpbY<\
%p,JO]BhGJEV$K.5V<eLs8rj>.fXhCSe,/m$l%$gJ,kuI]hBm%>:FF=0`UK(&6?$q#);)Dh2aJM>'IH8u'^EljI/smDYK1o7h6n\*
%fSSG]AjCFbjZ.?JHtCA,gN)iX9D\(<(68lF';\9fc;;*F1'ZRTM+@3`Q`>fI-g$QSAbE^="@`3q%l4HYO*8?A3=NRgacI.<C#?kc
%0C"kD>gD7sDN!KjP'u/Q!!6S1ie%Qh.4&0DgAE0C$;l]WUJsk/;2M!>WAdso]8.n>:SNTdlPp<q^Q58hMRr6oe=383F[c,,kB4]V
%gZ/8?-];i0,AjHX(@P8,W"7LAGYfkWPWOpTg9PHl&Ql2M%k%5m+Hh)RL<R6@0\6LX=9KO0fpn&fnlL%W8?enu?1L-<%P%^+PpB]c
%Q_TkE%fc5&Ln#F@)/"'_OLFa%R4Gs56#Nt/;Dg7Z>BBID?:BOaM-CC,OQ?o)i4uQR^<slM;<j)DXB9/1Qmr]sMEAtnYY5BI5'cH.
%Kb?Uf;l-8jT=.Th1FM?dJ9^W.gLcbQ[d6V>9!TF"]KGrs,F[&'6mZPBffg^.JPCUs%JJ64c)t=%k,:^<GH&][nkq:>9]eK*'3-aO
%#q&llLXgfaplVHgf2QKY=YoSi8phID=W$>=g;$ohC1PDD28b[R8"4mpcss1<Fk.cO<Q$p'>a*pLB4XF_(I]HH%1&5UBUd<K:WX5_
%Q4"$;NuLAIDWGf3oL\BN5+a+>5tY?*e:pKaDq^+qi>p?%'g8ZhBbmhZVZ56nC5*@$j)&XX&]jhr+ui4D=t"\EElujRrpB5t<A[IY
%+N[b128scFG)YgcHmk*0`dZ?\LH<_P0"++>)Oi#3CA(tX;3[YO$T.eZ<9BPYU3LN)o826JlArD6fiQ<EI(oHNk-5=uSnG'"lSO%K
%7jX2oMVQihFm#YKEj?nLC>'j$@"":#a,u14M<P\Q$NqQtSqdNAA\W!F6P3X]b7ERTnhgp?(%\pR?hTSMRi9d#ZHp!1S><'6F!"Zs
%&qVXO`P;+6-@odslC4[^Vnhs?-aXN6ag;=%*p;,Z6RQn]%Ajqr$Dn]^f]i@!jm2BoEj+]CmG3W8":Bkrc3?LN$:;*$J@61g:FYUr
%'\2InaRoIG%]'>6C$NS[1pEW.#$%g>T3bTa:K2[!A]=I#7r\a5=^rHr'k.,#ScA+0a#_dVGK,C^H2[gYIBu@i&fNY"rBjd7ZYOsg
%`!MNqB&5b'`Q['PV3C\&/GUbISHW\`"TR7MdQ!;+qT;B13L%+<2#jG0QOLb`64+\"rUQR]CrJUrj#(9k[b6ZIA$Ja@f6U3r<W+Gg
%C&;mBgF"I`2DHgC2pCrW+]2W=a>#*)/a?5VDVaqbW2'2VC/83]+oC;)f]$,_bW4!5:(J@Z=6ki+!=D!R5rQ/N%^+rh2V:s']Qbr2
%=I>2m?S@e(l;[\Z#o[5H@?^j^Fl)a'!;<?IXY8Q_U;4r&So*`tF4d4O;Ugk7[>&"$`&[/JF&mVQ49$T'kBEr9n#:VPSW+Vq*-l#s
%UkAs)5D'7$FATJa9Gg;SCR8rb^MiZl4IM*'-rJkpc>mr/Vlo!R?,rbrhOW:_H1uOGS]pnc)mq!!k1UHeH'VI3rtp:X;/mf0nO2cY
%HRR_2MCXTDN'/Dk+EPtR;GW]%8^U6-<7=QKk13:@=48Xcn_I%-k2p*?>0=:?n.3!#=LR"jl_l8`/ur4T]p]1/Oar^$GWG%Y-\nG,
%:Xd>Q%lS"5g#^^Umsir4RX@h9NqFfR2fHV+a.lAHrEK<mlL03"ZbDLsX'`R;k*uDKme[NEq"3AQJ,Aa"h=j-`pQ#h<hu3<p%4OL=
%AH1!!pRaYIr;#BN%kg0Ip#H(&fId!^hgG%-s7j'IrsQ1.H`6~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 310 1097 a Ft(C)8 b(S)51 b(C)8 b Fu(A)g(P)g(S)g(T)e(O)i(N)
g(E)92 b Ft(R)8 b Fu(E)g(Q)g(U)g(I)g(R)g(E)g(M)g(E)g(N)g(T)g(S)54
b Ft(D)8 b Fu(O)g(C)g(U)g(M)g(E)g(N)g(T)1488 1369 y Fr(N)t
Fs(O)t(V)t(E)t(M)t(B)t(E)t(R)35 b Fr(1)t(4)t(,)d(2)t(0)t(1)t(7)871
1941 y Fp(C)10 b(D)g(K)59 b(D)10 b Fq(A)-5 b(T)g(A)61
b Fp(S)10 b Fq(T)g(R)g(E)g(A)g(M)59 b Fp(A)10 b(I)1617
2429 y Fr(P)t Fs(R)t(E)t(P)m(A)t(R)5 b(E)g(D)36 b(F)t(O)t(R)1316
2734 y Fn(C)10 b(D)g(K)60 b(G)10 b Fo(L)g(O)g(B)g(A)g(L)1600
2990 y Fl(C)c Fm(H)g(R)g(I)g(S)34 b Fl(S)6 b Fm(M)g(I)g(T)g(H)1649
3295 y Fr(P)t Fs(R)t(E)t(P)m(A)t(R)f(E)g(D)35 b(B)t(Y)1492
3601 y Fn(G)10 b Fo(R)g(O)g(U)g(P)59 b Fn(6)10 b(5)1569
3906 y(S)g Fo(I)g(G)g Fn(F)g Fo(I)g(N)g(D)1487 4161 y
Fl(J)c Fm(A)g(C)g(O)g(B)34 b Fl(G)6 b Fm(E)g(D)g(D)g(I)g(N)g(G)g(S)1621
4375 y Fl(I)g Fm(N)g(H)g(Y)g(U)g(K)33 b Fl(L)6 b Fm(E)g(E)1566
4589 y Fl(J)g Fm(U)g(A)g(N)33 b Fl(M)6 b Fm(U)g(G)g(I)g(C)g(A)1815
4895 y Fk(Abstract)p 0 TeXcolorgray 0 TeXcolorgray 127
5053 a Fj(Our)22 b(team)f(has)i(been)f(assigned)h(to)e(assist)h(in)g
(the)g(de)n(v)n(elopment)g(of)f(AI)h(f)n(or)g(application)g(to)f(CDKs)i
(e)n(xisting)f(Data)g(Streams)o(.)f(These)i(streams)8
5140 y(deal)f(mainly)f(with)h(the)f(classi\002cation)h(of)g(documents)g
(as)g(w)o(ell)f(as)i(pictures)f(and)g(inf)n(or)r(mation)e(contained)h
(within)g(them.)g(This)h(document)f(outlines)8 5226 y(the)g(v)n(ar)q
(ious)i(requirements)e(our)h(team)e(has)i(been)f(task)o(ed)h(with)e
(ful\002lling,)g(as)i(w)o(ell)g(constr)o(aints)o(,)f(time)f(fr)o(ames)o
(,)h(platf)n(or)r(ms)f(and)i(str)o(ategies)f(utiliz)o(ed)8
5312 y(f)n(or)j(their)g(completion.)f(These)i(requirements)f(r)o(ange)h
(from)f(basic)g(functionality)g(per)s(taining)f(to)h(signature)g
(detection,)g(to)f(stretch)i(goals)f(such)h(as)8 5398
y(license)19 b(plate)f(reading,)h(car)g(damage)f(detection,)g(and)h
(per)r(mit)e(and)i(license)g(classi\002cation.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fi(1)p 0 TeXcolorgray -148 -144 a Fg(C)t Fh(O)t(N)t(T)t(E)t(N)t
(T)t(S)-150 80 y Ff(1)178 b(Introduction)3487 b Fe(2)68
224 y(1.1)197 b(Purpose)74 b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(2)p
0 TeXcolorgray 68 368 a(1.2)197 b(Scope)35 b(.)42 b(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(2)p 0 TeXcolorgray 68 512 a(1.3)197
b(De\002nitions,)21 b(Acr)o(onyms,)h(and)g(Abbr)o(eviations)40
b(.)h(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(2)p 0 TeXcolorgray 68 657 a(1.4)197
b(Refer)o(ences)49 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(3)p 0 TeXcolorgray
68 801 a(1.5)197 b(Overview)77 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(3)p
0 TeXcolorgray -150 1024 a Ff(2)178 b(Overall)24 b(Description)3220
b Fe(3)68 1168 y(2.1)197 b(Pr)o(oduct)22 b(Perspective)28
b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(3)p 0 TeXcolorgray 68 1313 a(2.2)197 b(Pr)o(oduct)22
b(Functions)j(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(4)p 0 TeXcolorgray 68 1457 a(2.3)197
b(User)21 b(Characteristics)28 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)p 0 TeXcolorgray 135 w(4)p 0 TeXcolorgray 68 1601
a(2.4)197 b(Constraints)20 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(4)p 0 TeXcolorgray
68 1745 a(2.5)197 b(Assumptions)19 b(and)k(Dependencies)h(.)41
b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)p 0 TeXcolorgray 135 w(5)p 0 TeXcolorgray
-150 1969 a Ff(3)178 b(Speci\002c)25 b(Requirements)3128
b Fe(5)68 2113 y(3.1)197 b(External)22 b(Interface)g(Requir)o(ements)29
b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(5)p 0 TeXcolorgray
68 2257 a(3.2)197 b(System)21 b(Featur)o(es)36 b(.)41
b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(5)p 0 TeXcolorgray 365 2402 a(3.2.1)196 b(Signatur)o(e)21
b(detecting)h(capability)61 b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(5)p
0 TeXcolorgray 365 2546 a(3.2.2)196 b(Missing)21 b(signatur)o(e)g
(detection)77 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(6)p 0 TeXcolorgray
365 2690 a(3.2.3)196 b(Multiple)21 b(signatur)o(e)g(and)h(multiple)f
(missing)h(signatur)o(e)e(capability)73 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(6)p 0 TeXcolorgray 365 2834 a(3.2.4)196 b(Car)22
b(detection)g(within)h(image)k(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(6)p 0 TeXcolorgray 365 2979 a(3.2.5)196 b(License)22
b(and)g(Permit)g(detection)h(within)f(document)74 b(.)42
b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(7)p 0 TeXcolorgray
365 3123 a(3.2.6)196 b(Parse)21 b(license)h(plate,)f(license,)h(and)g
(permit)f(text)h(into)g(machine)g(r)o(eadable)f(format)74
b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(7)p 0 TeXcolorgray 365 3267 a(3.2.7)196 b(Damage)21
b(r)o(ecognition)33 b(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(7)p 0 TeXcolorgray 365 3411 a(3.2.8)196 b(Make)21
b(and)i(Model)f(detection)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135
w(8)p 0 TeXcolorgray 68 3556 a(3.3)197 b(Performance)22
b(r)o(equir)o(ements)44 b(.)d(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(8)p 0 TeXcolorgray 68 3700 a(3.4)197
b(Design)22 b(Constraints)59 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)p 0 TeXcolorgray 135 w(8)p 0 TeXcolorgray 68 3844
a(3.5)197 b(Softwar)o(e)21 b(system)g(attributes)42 b(.)f(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)p 0 TeXcolorgray 135 w(8)p 0 TeXcolorgray
-150 4068 a Ff(4)178 b(Appendix)3582 b Fe(9)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fi(2)p 0 TeXcolorgray -148 -144 a Fg(1)96 b(I)t
Fh(N)t(T)t(R)s(O)t(D)t(U)t(C)t(T)t(I)t(O)t(N)-150 99
y Fe(Overview)22 b(of)h(SRS)-150 445 y Fd(1.1)79 b(Purpose)-150
687 y Fe(The)26 b(purpose)g(of)i(this)e(r)o(equir)o(ements)g(document)h
(is)f(to)h(bring)g(clarity)g(to)g(the)f(pr)o(oject)g(by)h(indicating)g
(what)f(the)h(har)o(d-line)g(r)o(equir)o(e-)-150 831
y(ments)32 b(ar)o(e)g(for)h(the)g(pr)o(oject)e(to)i(be)f(consider)o(ed)
h(a)f(success.)f(This)h(will)h(be)f(done)h(with)g(the)f(consideration)h
(that)f(the)g(desir)o(ed)h(end)-150 976 y(pr)o(oduct)22
b(may)g(not)g(be)g(achievable)f(and)h(as)f(a)h(r)o(esult)f(will)h(be)g
(tr)o(eated)g(as)f(a)h(form)h(of)f(r)o(esear)o(ch)f(pr)o(oject)h(or)g
(pr)o(oof)h(of)f(concept.)-150 1192 y(Intended)34 b(tar)o(get)g
(audience)g(for)h(this)e(document)i(is)e(our)i(client)f(and)g(by)g
(extension)g(CDK[1])h(given)f(this)g(is)g(their)g(idea)g(and)g(the)-150
1336 y(success)24 b(of)i(the)f(pr)o(oject)f(dir)o(ectly)h(assists)e
(them.)i(In)g(addition,)g(our)g(instr)o(uctors)h(and)f(teaching)g
(assistant)d(ar)o(e)j(extensively)f(involved)-150 1481
y(in)30 b(this)g(pr)o(oject)f(and)h(they)g(will)g(be)g(using)g(this)f
(as)g(a)h(grading)h(guideline.)f(The)f(assumption)f(is)i(that)g(the)f
(r)o(eader)h(is)g(familiar)g(with)-150 1625 y(general)19
b(concepts)f(within)h(computer)f(science)h(including)g(arti\002cial)f
(intelligence,)h(common)g(pr)o(ogramming)f(languages,)f(and)i(coding)
-150 1769 y(envir)o(onments.)-150 2115 y Fd(1.2)79 b(Scope)-150
2358 y Fe(The)25 b(pr)o(oduct)g(being)g(developed)g(will)g(be)g(a)g
(variant)f(of)i(open)f(sour)o(ce)f(AI)h(that)f(will)i(be)f(tailor)o(ed)
g(to)g(scanning)g(submitted)f(forms)h(by)-150 2502 y(CDK.)k(W)l(ith)g
(the)g(inclusion)f(of)i(str)o(etch)e(goals)g(this)g(platform)h(may)f
(also)g(analyze)g(driver)i(licenses,)d(vehicle)i(imaging,)f(or)i(name)e
(to)-150 2646 y(vehicle)22 b(identi\002cation.)-150 2863
y(This)28 b(pr)o(oject)h(will)g(be)g(capable)e(of)j(analyzing)e(a)h
(submitted)f(form)i(to)f(locate)g(its)f(signatur)o(e)g(box)h(and)g
(check)h(to)f(see)f(if)i(it)f(has)f(been)-150 3007 y(signed.)e(It)f
(will)h(also)f(pr)o(ompt)f(the)i(operator)g(if)g(it)f(is)h(not)g
(certain)f(of)i(what)e(it)g(is)h(observing)f(and)h(if)g(a)f(cosigner)h
(box)g(is)f(also)g(pr)o(esent.)-150 3151 y(The)e(format)i(of)f(these)f
(submissions)f(will)i(be)g(in)g(PDF)g(format.)g(Str)o(etch)f(goals)g
(include)i(the)e(capacity)g(to)h(detect)g(expiration)g(dates)f(on)-150
3295 y(drivers)c(licenses)g(and)g(determine)h(what)e(make)h(and)g
(model)h(of)g(a)f(vehicle)g(is)f(based)h(on)g(a)g(submitted)f(image.)h
(Additional)g(\002le)g(formats)-150 3440 y(ar)o(e)j(also)f(being)h
(consider)o(ed.)-150 3656 y(Bene\002ts)g(fr)o(om)i(this)e(pr)o(oduct)h
(include)g(r)o(educed)g(costs)f(for)i(CDK)g(in)f(err)o(or)g(checking)g
(forms,)g(rapid)g(validation)f(of)i(a)e(document,)h(and)-150
3800 y(a)h(singular)f(platform)h(that)g(can)g(scan)f(the)h(various)f
(form)i(styles)e(that)h(CDK)h(possesses.)c(Another)j(goal)g(of)h(this)f
(design)g(is)g(the)g(ability)-150 3945 y(for)30 b(it)g(to)g(expand)e
(upon)i(itself)f(and)h(adapt)e(to)i(new)f(forms)h(that)f(may)g(be)h
(intr)o(oduced)g(by)f(permitting)g(operator)h(con\002rmation)g(or)-150
4089 y(override)23 b(on)f(its)g(assessment.)-150 4435
y Fd(1.3)79 b(De\002nitions,)24 b(Acr)n(on)n(yms,)g(and)f(Abbre)o
(viations)-150 4677 y Fe(Open)38 b(sour)o(ce)g(AI)f(is)h(a)g(fr)o(ee)g
(to)g(access)f(platform)h(in)g(which)h(the)f(code)h(can)f(be)g(used)f
(and)i(implemented)e(as)h(seen)f(\002t)h(by)g(the)-150
4822 y(operator)-6 b(.)20 b(OpenCV[2])h(is)f(a)g(popular)f(image)h(pr)o
(ocessing)g(example)f(of)i(this)f(as)f(well)i(as)e(T)-7
b(ensorFlow[3])21 b(and)f(DL4j[4].)g(Pr)o(ogramming)-150
4966 y(languages)g(that)g(may)h(be)g(used)g(include)h(C++[5],)f
(Python[6],)h(and)f(Java[7].)g(The)f(use)h(of)h(an)f(IDE)g(is)g(likely)
-9 b(,)22 b(which)f(means)g(Integrated)-150 5110 y(Development)28
b(Envir)o(onment)h(which)g(pr)o(ovides)f(a)g(mor)o(e)h(convenient)g
(setup)e(for)j(coding.)f(Examples)f(of)h(IDEs)g(include)g(Micr)o(osoft)
-150 5254 y(V)l(isual)19 b(Studio[8])g(and)h(Eclipse[9].)g(Black)g(box)
f(design)h(means)f(that)g(the)g(user)h(does)g(not)f(need)h(to)g
(understand)g(the)f(internal)h(functions)-150 5399 y(of)j(the)f(pr)o
(ogram,)f(just)g(what)h(it)g(wants)f(as)g(input)h(and)g(what)f(the)h
(user)g(will)g(r)o(eceive)g(as)f(the)h(output.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fi(3)p 0 TeXcolorgray -150 -144 a Fd(1.4)79 b(Ref)o(erences)-150
99 y Fe([1])22 b(\224CDK)h(Global\224)f(Internet:)f(https://www)-7
b(.cdkglobal.com/,)21 b(2017)f([Nov)-9 b(.)23 b(10,)e(2017].)-150
315 y([2])h(\224OpenCV\224)g(Internet:)f(https://opencv)-9
b(.or)o(g/,)21 b(Aug.)g(3,)h(2017)e([Nov)-9 b(.)22 b(11,)f(2017].)-150
531 y([3])h(\224T)-7 b(ensorFlow\224)21 b(Internet:)h(https://www)-7
b(.tensor\003ow)g(.or)o(g/,)20 b([Nov)-9 b(.)22 b(12,)f(2017].)-150
748 y([4])h(\224Deeplearning4j\224)f(Internet:)g
(https://deeplearning4j.or)o(g/,)e(2017)i([Nov)-9 b(.)22
b(11,)f(2017].)-150 964 y([5])h(\224C++\224)g(Internet:)f(http://www)-7
b(.cplusplus.com/,)19 b(2017)h([Nov)-9 b(.)23 b(12,)e(2017].)-150
1180 y([6])h(\224Python\224)g(Internet:)f(https://www)-7
b(.python.or)o(g/,)20 b(Oct.)i(17,)f(2017)g([Nov)-9 b(.)22
b(12,)f(2017].)-150 1397 y([7])h(\224Java\224)f(Internet:)h
(https://java.com/en/,)d(Apr)-6 b(.)21 b(22,)g(2016)g([Nov)-9
b(.)22 b(12,)f(2017].)-150 1613 y([8])h(\224Micr)o(osoft)g(V)l(isual)f
(Studio\224)h(Internet:)f(https://www)-7 b(.visualstudio.com/,)19
b(Oct.)j(2016)e([Nov)-9 b(.)23 b(10,)e(2017].)-150 1830
y([9])h(\224Eclipse\224)f(Internet:)h(https://www)-7
b(.eclipse.or)o(g/ide/,)19 b(2017)i([Nov)-9 b(.)22 b(9,)g(2017].)-150
2046 y([10])31 b(IEEE)g(Softwar)o(e)f(Engineering)i(Standar)o(ds)d
(Committee,)h(IEEE)i(Std)e(830-1998,)e(IEEE)j(Recommended)h(Practice)e
(for)i(Softwar)o(e)-150 2190 y(Requir)o(ements)21 b(Speci\002cations,)g
(June)h(25,)f(1998.)-150 2407 y([11])h(\224GCC\224)g(Internet:)g
(https://gcc.gnu.or)o(g/,)e(Nov)-9 b(.)22 b(3,)f(2017)g([Nov)-9
b(.)22 b(9,)g(2017].)-150 2623 y([12])g(\224CMake\224)f(Internet:)g
(https://cmake.or)o(g/,)f(Nov)-9 b(.)22 b(10,)f(2017)g([Nov)-9
b(.)22 b(9,)g(2017].)-150 2944 y Fd(1.5)79 b(Over)q(vie)o(w)-150
3187 y Fe(The)24 b(r)o(emainder)g(of)h(the)g(r)o(equir)o(ements)e
(document)i(will)f(contain)h(a)f(gr)o(eater)g(look)h(into)f(what)g(pr)o
(ecisely)g(the)g(pr)o(oject)f(entails.)h(This)f(is)-150
3331 y(going)c(to)f(involve)g(looking)g(at)g(wher)o(e)g(the)g(pr)o
(oject)f(stands)g(for)i(CDK)g(and)f(how)h(it)f(will)g(be)g(utilized)g
(as)f(well)h(as)g(the)g(pr)o(oducts)f(functions)-150
3475 y(and)k(characteristics)f(for)h(a)g(user)-6 b(.)20
b(Mention)h(will)g(also)f(be)h(made)g(towar)o(ds)f(potential)g
(constraints)g(placed)h(upon)f(the)h(pr)o(ogram.)-150
3692 y(The)d(following)i(section)f(will)g(be)f(a)g(general)h(overview)g
(and)f(description)h(of)h(the)e(pr)o(oject,)g(primary)g(focus)h(being)g
(placed)f(on)h(functions,)-150 3836 y(characteristics,)25
b(constraints,)h(and)g(assumptions/dependencies.)e(After)i(that)g(ther)
o(e)g(will)g(be)g(a)g(section)h(on)f(speci\002c)g(r)o(equir)o(ements)
-150 3980 y(that)21 b(will)h(bring)g(mention)g(to)g(potential)e
(interfacing)j(concerns)f(as)f(well)g(as)g(performance)h(metrics)g(and)
g(standar)o(ds)e(compliance.)h(The)-150 4124 y(document)h(is)g
(designed)h(to)f(follow)h(the)f(IEEE)h(Softwar)o(e)e(Engineering)i
(Standar)o(ds)e([10].)-148 4470 y Fg(2)96 b(O)p Fh(V)t(E)t(R)t(A)t(L)t
(L)33 b Fg(D)t Fh(E)t(S)t(C)t(R)t(I)t(P)t(T)t(I)t(O)t(N)-150
4713 y Fd(2.1)79 b(Pr)n(oduct)24 b(P)n(er)o(spective)-150
4955 y Fe(The)i(cor)o(e)g(objective)f(as)g(well)h(as)f(the)h(str)o
(etch)f(goals)h(all)f(conclude)i(that)e(this)h(pr)o(oduct)g(will)g(be)g
(an)f(independent)h(platform.)g(For)h(this)-150 5099
y(pr)o(oject,)21 b(we)h(will)g(explor)o(e)g(the)g(potential)f(of)i
(A.I.)e(and)h(cr)o(eate)g(the)f(foundation)i(of)g(CDKs)g(own)f(AI)f
(platform.)-150 5316 y(The)33 b(signatur)o(e)f(detection)i(and)f
(drivers)h(license)f(veri\002cation)g(softwar)o(e)g(must)g(support)f
(various)g(personal)h(computers)g(such)g(as)-150 5460
y(desktop,)25 b(laptop,)g(and)h(tablet)f(as)g(an)g(input)g(sour)o(ce.)g
(This)h(softwar)o(e)f(will)h(\002rst)f(r)o(eceive)h(a)f(PDF)h(\002le)g
(of)h(a)e(document)h(as)f(its)h(input.)f(It)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fi(4)p 0 TeXcolorgray -150 -144 a Fe(will)18 b(then)g(compute)f
(the)h(data)g(and)g(give)f(r)o(esult)g(or)i(feedback)f(to)g(user)-6
b(.)18 b(W)l(ith)f(that)h(in)g(mind,)g(the)g(softwar)o(e)f(needs)h(to)g
(be)g(r)o(obust)f(enough)-150 0 y(to)29 b(compute)g(lar)o(ge)g(set)g
(of)h(data.)f(Similarly)-9 b(,)29 b(within)g(our)h(str)o(etch)e(goals,)
h(vehicle)g(model)h(detection)g(softwar)o(e)f(must)f(also)h(support)
-150 145 y(various)17 b(personal)h(computers)f(and)h(be)g(r)o(obust)f
(enough)i(to)f(evaluate)e(lar)o(ge)i(data.)f(However)-6
b(,)18 b(it)g(must)f(also)h(support)f(portable)g(devices)-150
289 y(with)28 b(camera)f(such)g(as)g(phone)h(and)g(tablet.)e(Softwar)o
(e)h(should)h(\002rst)g(take)f(photo)g(fr)o(om)h(camera)g(then)f(it)h
(evaluates)e(the)h(photo)h(and)-150 433 y(r)o(eturns)21
b(model)i(number)-6 b(.)-150 760 y Fd(2.2)79 b(Pr)n(oduct)24
b(Functions)-150 1003 y Fe(Main)34 b(goal)g(The)f(function)i(of)f(this)
g(softwar)o(e)f(is)h(detecting)g(the)g(location)g(of)h(the)e(signatur)o
(e)g(box)h(and)g(determine)g(whether)h(it)e(is)-150 1147
y(signed)28 b(or)g(unsigned.)f(If)h(document)f(is)h(unsigned:)f
(softwar)o(e)g(must)f(pr)o(ovide)i(information)g(of)g(location)g(and)g
(quantity)f(of)h(missing)-150 1291 y(components.)g(Also,)g(the)h(pr)o
(ogram)f(must)g(be)g(capable)g(of)h(making)f(a)h(r)o(easonable)e(guess)
h(on)h(whether)g(a)f(signatur)o(e)f(is)i(suf)o(\002ciently)-150
1436 y(binding.)24 b(This)f(entails)g(the)g(AI)g(must)g(be)g(capable)g
(of)h(distinguishing)f(between)h(a)f(simple)g(mark)g(in)h(the)g
(signatur)o(e)e(window)j(and)e(an)-150 1580 y(actual)e(signatur)o(e.)
-150 1796 y(Str)o(etch)e(goal)g(License)h(validation)f(softwar)o(e:)f
(This)h(softwar)o(e)g(must)f(validate)h(whether)g(given)h(photo)f(is)g
(drivers)h(license)f(or)h(not.)g(First,)-150 1940 y(it)i(must)f
(validate)g(the)h(format)h(of)f(drivers)h(license)f(and)g(check)g
(legal)g(information)h(such)f(as)f(expiration)g(date.)-150
2157 y(V)-9 b(ehicle)18 b(model)g(detection)g(softwar)o(e:)f(V)-9
b(ehicle)18 b(model)g(detection)g(softwar)o(e)f(must)f(be)i(able)f(to)g
(determine)h(the)f(speci\002c)g(model)h(number)-150 2301
y(fr)o(om)30 b(appearance)e(of)i(the)f(vehicle.)g(Softwar)o(e)g(will)h
(\002rst)f(take)f(photos)h(or)h(video)g(of)g(vehicle)g(taken)e(fr)o(om)
i(dif)o(fer)o(ent)g(angle.)f(It)g(will)-150 2445 y(determine)22
b(vehicle)g(model)h(by)f(narr)o(owing)g(down)g(the)g(information.)h
(For)f(example,)f(softwar)o(e)g(will)i(sear)o(ch)e(sequentially)g(for)i
(make,)-150 2590 y(model,)f(and)h(year)-6 b(.)-150 2917
y Fd(2.3)79 b(User)22 b(Characteristics)-150 3159 y Fe(The)36
b(intended)g(user)g(of)h(the)e(softwar)o(e)h(is)g(vehicle)f(r)o
(etailers.)g(W)-7 b(e)36 b(can)g(assume)e(a)i(low)g(degr)o(ee)h(of)f
(understanding)g(on)h(arti\002cial)-150 3304 y(intelligence.)26
b(Ther)o(efor)o(e,)g(softwar)o(e)f(must)h(be)f(designed)i(as)e(black)h
(box)g(model.)h(T)-7 b(o)25 b(accompany)h(this)g(str)o(uctur)o(e)f(the)
h(user)g(interface)-150 3448 y(must)e(be)g(agr)o(eeable)g(for)h(them.)g
(Lastly)-9 b(,)24 b(the)g(pr)o(ogram)g(must)g(not)h(overbur)o(den)g
(the)f(operator)-6 b(,)25 b(it)g(will)g(take)f(a)g(single)g(\002le)h
(as)f(input)g(to)-150 3592 y(scan)e(and)g(r)o(eturn)g(a)f(conclusion)i
(to)f(the)g(user)-6 b(.)-150 3919 y Fd(2.4)79 b(Constraints)-150
4162 y Fe(Ther)o(e)26 b(ar)o(e)f(few)i(constraints)f(on)g(CDK)i(A.I.)d
(data)h(str)o(eam)f(pr)o(oject.)g(First,)h(softwar)o(e)g(must)f(be)h
(standalone.)g(The)f(futur)o(e)h(goal)h(of)g(this)-150
4306 y(pr)o(oject)i(is)h(to)g(build)g(CDKs)g(own)h(platform,)e(so)h
(softwar)o(e)g(must)f(be)h(independent.)g(In)f(addition,)i(pr)o(oject)e
(must)g(be)h(kept)f(in)h(open)-150 4450 y(sour)o(ce.)f(The)h(softwar)o
(e)f(must)g(be)h(made)g(in)g(such)f(a)h(way)f(that,)g(once)i(our)f
(team)f(has)g(completed)h(its)g(work,)g(the)g(pr)o(oject)f(be)h(taken)
-150 4595 y(over)21 b(by)f(a)h(new)f(team)g(within)h(CDK.)g(T)-7
b(o)20 b(meet)h(this)f(demand)h(the)f(need)h(for)h(thor)o(ough)e
(documentation)h(of)g(implementation)f(is)g(vital.)-150
4739 y(This)k(pr)o(oject)g(will)h(also)f(have)h(limits)f(on)h(testing)f
(due)h(to)g(the)g(privacy)f(issue)g(surr)o(ounding)h(actual)f(consumer)
g(data.)g(Since)h(the)g(data)-150 4883 y(that)f(signatur)o(e)f
(detecting)i(and)f(license)h(validation)f(softwar)o(e)f(compute)h
(contains)g(personal)g(data,)g(testing)g(data)g(must)f(be)i(done)g(on)
-150 5027 y(dummy)20 b(documents)h(and)f(licenses.)g(The)g(last)f
(constraint)h(is)g(that)g(pr)o(oduct)g(must)f(function)i(on)g(its)f
(own)h(without)f(the)g(additional)h(use)-150 5172 y(or)g(maintenance)f
(of)i(outside)e(softwar)o(e.)g(Since)g(the)h(users)f(of)h(the)g(pr)o
(oduct)f(ar)o(e)g(unlikely)h(to)g(be)f(familiar)h(with)g(the)f
(internal)h(workings)-150 5316 y(the)27 b(interface)h(for)g(them)f
(must)g(suf)o(\002ciently)f(mask)h(the)g(technical)g(workings)h(of)g
(the)f(pr)o(ogram)g(only)h(pr)o(ovide)f(a)g(clean)g(and)h(simple)-150
5460 y(menu.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 6
TeXDict begin 5 5 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fi(5)p 0 TeXcolorgray -150 -144 a Fd(2.5)79 b(Assumptions)25
b(and)d(Dependencies)-150 99 y Fe(All)31 b(images)e(pr)o(ovided)i(by)g
(the)g(client)g(ar)o(e)f(sanitized)g(and)h(fr)o(ee)f(of)i(legal)e
(con\003icts.)h(Cloud)g(based)g(deployment)f(services)g(will)h(be)-150
243 y(pr)o(ovided)25 b(by)g(the)g(client.)g(Fr)o(om)g(a)f(developing)h
(and)g(testing)f(standpoint,)g(this)h(pr)o(oject)f(will)h(be)g
(developped)g(in)g(C++)g(utilizing)f(the)-150 387 y(OpenCV)29
b(pictur)o(e)e(formatting)i(library)-9 b(.)29 b(This)f(library)g
(assumes)f(that)h(the)g(system)g(is)g(r)o(unning)h(GCC)h(4.4.x[11])d
(or)i(later)f(as)g(well)h(as)-150 531 y(CMake)22 b(2.8.7[12])e(or)j
(higher)-6 b(.)-148 902 y Fg(3)96 b(S)t Fh(P)t(E)t(C)t(I)t(FI)t(C)34
b Fg(R)t Fh(E)t(Q)s(U)t(I)t(R)t(E)t(M)t(E)t(N)t(T)t(S)-150
1144 y Fd(3.1)79 b(External)23 b(Interface)g(Requirements)-150
1387 y Fe(The)d(focus)g(of)h(this)f(pr)o(oject)g(is)f(building)i
(signatur)o(e)e(detecting)h(arti\002cial)g(intelligence)h(r)o(un)f(on)h
(the)f(CDK)h(server)-6 b(.)20 b(It)g(must)g(be)g(designed)-150
1531 y(as)i(black)g(box)g(model,)h(so)f(user)g(interface)h(must)e(be)h
(simple)g(.)g(Since)h(softwar)o(e)e(r)o(uns)i(on)g(the)f(CDK)h(server)
-6 b(,)22 b(communication)h(interface)-150 1675 y(must)e(be)h(secur)o
(e)f(and)i(durable.)-150 1892 y(The)28 b(str)o(uctur)o(e)h(of)g(user)f
(interface)h(is)g(very)g(simple.)f(Ther)o(e)g(ar)o(e)g(two)h(functions)
g(in)g(user)f(interface.)h(Softwar)o(e)f(simply)g(takes)g(set)g(of)-150
2036 y(documents)21 b(fr)o(om)h(the)f(user)-6 b(,)20
b(and)i(it)f(displays)f(r)o(esult)g(of)i(the)f(signatur)o(e)f
(detection)i(to)f(the)g(user)-6 b(.)21 b(Result)f(of)i(the)f(signatur)o
(e)f(will)h(be)g(any)-150 2180 y(pages)g(of)i(the)f(document)g(wher)o
(e)g(err)o(or)h(is)e(detected.)-150 2397 y(Communication)32
b(between)g(our)h(softwar)o(e)f(and)g(the)g(CDK)i(server)e(database)f
(is)h(important;)f(however)-6 b(,)33 b(focus)f(on)h(this)f(pr)o(oject)f
(is)-150 2541 y(making)c(accurate)f(and)i(r)o(eliable)e(arti\002cial)h
(intelligence.)g(W)-7 b(e)27 b(ar)o(e)g(considering)h(the)f(use)g(of)h
(docker)g(and)f(amazon)f(web)h(services)g(to)-150 2685
y(constr)o(uct)22 b(a)g(r)o(eliable)f(communication)h(str)o(uctur)o(e)g
(but)f(this)h(is)g(a)f(str)o(etch)h(goal)g(of)h(the)f(pr)o(oject.)-150
3031 y Fd(3.2)79 b(System)23 b(Features)-150 3274 y Fc(3.2.1)79
b(Signature)22 b(detecting)f(capability)86 3558 y Fe(3.2.1.1)77
b(Intr)o(oduction/Purpose)20 b(of)i(featur)o(e:)33 b(The)21
b(pr)o(ogram)g(must)f(be)h(able)f(to)h(detect)g(if)h(a)f(document)g
(contains)g(a)f(signatur)o(e)86 3702 y(r)o(egar)o(dless)h(of)i(the)f
(documents)g(formatting.)86 3846 y(3.2.1.2)77 b(Stimulus/Response)26
b(sequence:)41 b(The)28 b(pr)o(ogram)g(will)h(parse)f(a)g(PDF)h(image)f
(of)h(a)f(document,)h(or)g(a)f(document)h(in)86 3991
y(PDF)22 b(format,)h(and)f(output)f(a)h(per)o(centage)f(based)g
(estimation)g(as)g(to)i(whether)f(it)g(contains)g(a)f(signatur)o(e.)86
4135 y(3.2.1.3)77 b(Functional)36 b(Requir)o(ements:)48
b(Signatur)o(e)34 b(detection)i(must)f(be)h(functional)g(for)g(all)g
(types)f(of)h(document)g(formats)86 4279 y(r)o(egar)o(dless)21
b(of)i(the)f(type)f(so)h(long)h(as)e(they)h(ar)o(e)g(pr)o(esented)f(in)
h(PDF)g(\002le)g(format.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 6 7
TeXDict begin 6 6 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fi(6)p 0 TeXcolorgray -150 -144 a Fc(3.2.2)79
b(Missing)21 b(signature)g(detection)86 140 y Fe(3.2.2.1)77
b(Intr)o(oduction/Purpose)29 b(of)i(featur)o(e:)42 b(The)30
b(pr)o(ogram)f(must)g(be)h(able)f(to)i(detect)f(if)g(a)g(document)g
(contains)g(a)f(space)86 285 y(wher)o(e)22 b(ther)o(e)g(should)g(be)g
(a)g(signatur)o(e)e(r)o(egar)o(dless)h(of)i(the)f(format)g(of)h(the)f
(form.)86 429 y(3.2.2.2)77 b(Stimulus/Response)24 b(sequence:)39
b(The)27 b(pr)o(ogram)f(will)h(parse)f(a)g(PDF)h(image)g(of)g(a)f
(document)h(,)g(or)g(a)g(document)g(in)86 573 y(PDF)j(format,)g(and)g
(output)f(a)h(per)o(centage)f(based)g(estimation)g(as)g(to)h(whether)g
(it)g(contains)g(a)f(space)g(wher)o(e)h(a)g(signatur)o(e)e(is)86
717 y(missing.)86 862 y(3.2.2.3)77 b(Functional)36 b(Requir)o(ements:)
48 b(Signatur)o(e)34 b(detection)i(must)f(be)h(functional)g(for)g(all)g
(types)f(of)h(document)g(formats)86 1006 y(r)o(egar)o(dless)21
b(of)i(the)f(type)f(so)h(long)h(as)e(they)h(ar)o(e)g(pr)o(esented)f(in)
h(PDF)g(\002le)g(format.)-150 1514 y Fc(3.2.3)79 b(Multiple)21
b(signature)h(and)g(m)o(ultiple)f(missing)f(signature)h(capability)73
1799 y Fe(3.2.3.1)77 b(Intr)o(oduction/Purpose)31 b(of)h(featur)o(e:)43
b(The)31 b(pr)o(ogram)g(must)f(be)h(able)g(to)g(perform)h(featur)o(e)e
(3.2.1)g(for)i(every)73 1943 y(signatur)o(e)g(contained)i(within)f(the)
g(document.)h(The)e(pr)o(ogram)h(must)f(also)h(be)g(able)g(to)g
(perform)h(featur)o(e)e(3.2.2)g(for)73 2087 y(every)22
b(space)f(that)h(is)g(missing)f(a)h(signatur)o(e)e(within)j(the)f
(document)73 2231 y(3.2.3.2)77 b(Stimulus/Response)16
b(sequence:)31 b(The)19 b(pr)o(ogram)f(will)h(parse)e(a)i(PDF)g(image)f
(of)h(a)f(document,)h(or)g(a)g(document)73 2376 y(in)43
b(PDF)f(format,)g(and)g(output)f(per)o(cent)g(estimates)f(for)j(featur)
o(es)e(3.2.1)f(and)i(3.2.2)f(at)g(every)h(instance)g(deemed)73
2520 y(applicable.)73 2664 y(3.2.3.3)77 b(Functional)22
b(Requir)o(ements:)34 b(Multiple)21 b(signatur)o(e)f(and)i(multiple)f
(missing)h(signatur)o(e)e(capabilities)g(must)h(be)73
2808 y(functional)27 b(for)g(all)f(types)g(of)h(document)f(formats)g(r)
o(egar)o(dless)f(of)i(the)g(type)e(so)i(long)f(as)g(they)g(ar)o(e)g(pr)
o(esented)f(in)i(PDF)73 2953 y(\002le)22 b(format.)-150
3260 y Fb(The)28 b(following)h(featur)o(es)e(ar)o(e)g(part)g(of)h(the)g
(gr)o(oups)e(str)o(etch)h(goals)h(and)f(ar)o(e)g(to)h(be)f(completed)h
(once)g(the)f(afor)o(ementioned)h(featur)o(es)-150 3404
y(work)c(to)g(the)g(satisfaction)h(of)g(the)f(client.)-150
3891 y Fc(3.2.4)79 b(Car)23 b(detection)e(within)g(image)86
4175 y Fe(3.2.4.1)77 b(Intr)o(oduction/Purpose)21 b(of)i(featur)o(e:)34
b(The)22 b(pr)o(ogram)g(must)f(detect)h(if)h(a)e(given)h(pictur)o(e)g
(contains)f(a)h(car)g(within)g(it.)86 4319 y(3.2.4.2)77
b(Stimulus/Response)32 b(sequence:)48 b(The)34 b(pr)o(ogram)g(will)h
(parse)f(a)h(PDF)g(image)f(and)h(output)f(a)g(per)o(centage)g(based)86
4463 y(estimate)21 b(as)g(to)h(whether)h(it)f(contains)f(a)h(car)-6
b(.)86 4608 y(3.2.4.3)77 b(Functional)22 b(Requir)o(ements:)35
b(The)22 b(pr)o(ogram)g(must)g(be)g(able)g(to)g(detect)h(cars)f(within)
h(any)f(pictur)o(e)g(pr)o(esented)f(in)i(PDF)86 4752
y(format.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 7 8
TeXDict begin 7 7 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fi(7)p 0 TeXcolorgray -150 -144 a Fc(3.2.5)79
b(License)21 b(and)h(P)l(er)r(mit)g(detection)f(within)g(document)86
124 y Fe(3.2.5.1)77 b(Intr)o(oduction/Purpose)23 b(of)h(featur)o(e:)36
b(The)23 b(pr)o(ogram)g(must)f(detect)i(if)g(a)f(document)h(contains)f
(a)g(license)g(or)h(a)f(permit)86 268 y(r)o(egar)o(dless)e(of)i(the)f
(format)g(of)h(the)f(form.)86 412 y(3.2.5.2)77 b(Stimulus/Response)24
b(sequence:)39 b(The)27 b(pr)o(ogram)f(will)h(parse)f(a)g(PDF)h(image)g
(of)g(a)f(document)h(,)g(or)g(a)g(document)g(in)86 557
y(PDF)22 b(format,)h(and)f(output)f(a)h(per)o(centage)f(based)g
(estimation)g(as)g(to)i(whether)f(it)g(contains)g(a)f(license,)h(or)h
(a)e(permit.)86 701 y(3.2.5.3)77 b(Functional)19 b(Requir)o(ements:)31
b(The)18 b(pr)o(ogram)g(must)g(be)h(able)f(to)h(detect)g(permits)f(and)
h(licenses)f(within)h(any)g(document)86 845 y(pr)o(esented)i(in)i(PDF)f
(format.)-150 1354 y Fc(3.2.6)79 b(P)m(arse)22 b(license)e(plate)o(,)i
(license)o(,)e(and)i(per)r(mit)g(te)n(xt)f(into)h(machine)f(readab)n
(le)h(f)n(or)r(mat)86 1637 y Fe(3.2.6.1)77 b(Intr)o(oduction/Purpose)28
b(of)i(featur)o(e:)41 b(Once)29 b(the)g(pr)o(ogram)f(can)h(perform)g
(featur)o(es)f(3.2.3)f(and)i(3.2.4,)e(it)i(must)f(then)86
1781 y(parse)18 b(the)h(contents)g(of)h(these)f(forms)g(into)h(machine)
f(r)o(eadable)f(format.)h(This)g(will)g(allow)g(the)g(user)g(to)g
(utilize)g(this)f(information)86 1925 y(to)k(validate)g(a)f(clients)h
(identity)-9 b(,)22 b(ties)g(to)g(the)g(vehicle,)g(etc..)g(For)g(this)g
(task,)f(we)h(will)g(utilize)g(Googles)g(V)l(ision)g(API.)86
2070 y(3.2.6.2)77 b(Stimulus/Response)25 b(sequence:)40
b(The)27 b(pr)o(ogram)f(will)i(parse)e(a)h(license,)g(permit,)g(or)h
(license)f(plate)f(image)h(in)h(PDF)86 2214 y(format)23
b(and)f(extract)f(the)h(information)h(pr)o(esented)e(into)h(a)g
(machine)g(r)o(eadable)f(format.)86 2358 y(3.2.6.3)77
b(Functional)17 b(Requir)o(ements:)30 b(The)16 b(pr)o(ogram)h(must)g
(be)g(able)f(to)i(r)o(ead)f(information)h(within)f(any)g(license)g
(plate,)g(license,)86 2502 y(or)23 b(permit)f(r)o(egar)o(dless)e(of)j
(the)f(origin)h(so)f(long)g(as)g(they)g(ar)o(e)f(pr)o(esented)g(in)i(a)
e(PDF)i(format.)-150 3011 y Fc(3.2.7)79 b(Damage)22 b(recognition)86
3295 y Fe(3.2.7.1)77 b(Intr)o(oduction/Purpose)27 b(of)i(featur)o(e:)41
b(The)28 b(pr)o(ogram)f(must)h(be)g(able)f(to)h(parse)g(a)g(pictur)o(e)
f(of)i(a)f(vehicle)g(and)g(detect)86 3439 y(whether)23
b(this)e(vehicle)h(has)g(sustained)f(damage.)g(Often)i(CDK)g(employees)
e(must)g(go)i(thr)o(ough)f(pictur)o(es)f(of)h(vehicles)g(in)g(or)o(der)
86 3584 y(to)k(assess)e(if)i(they)g(have)f(been)h(damaged.)g(This)f
(featur)o(e)g(aims)g(at)g(discar)o(ding)h(all)g(vehicles)f(with)h(no)h
(damage)e(lessening)g(the)86 3728 y(amount)d(of)g(pictur)o(es)f(that)h
(must)f(be)h(assessed)e(for)j(damage.)86 3872 y(3.2.7.2)77
b(Stimulus/Response)28 b(sequence:)42 b(The)30 b(pr)o(ogram)g(will)h
(parse)e(a)h(pictur)o(e)f(of)i(a)f(car)g(in)h(PDF)f(format)h(and)f
(output)f(a)86 4016 y(per)o(centage)21 b(estimate)g(as)g(to)h(whether)h
(the)f(car)g(has)f(been)h(damaged.)86 4161 y(3.2.7.3)77
b(Functional)29 b(Requir)o(ements:)42 b(The)29 b(pr)o(ogram)g(must)g
(be)g(able)g(to)h(detect)f(damage)g(within)h(any)f(pictur)o(e)g(of)h(a)
g(car)f(so)86 4305 y(long)23 b(as)e(it)h(is)g(submitted)f(in)h(PDF)g
(format.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 8 9
TeXDict begin 8 8 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fi(8)p 0 TeXcolorgray -150 -144 a Fc(3.2.8)79
b(Mak)n(e)22 b(and)g(Model)g(detection)86 124 y Fe(3.2.8.1)77
b(Intr)o(oduction/Purpose)22 b(of)h(featur)o(e:)35 b(The)23
b(pr)o(ogram)f(will)h(parse)f(the)g(pictur)o(e)g(of)i(a)e(car)h(and)g
(attempt)e(to)i(discern)g(the)86 268 y(make)f(and)g(the)g(model.)86
412 y(3.2.8.2)77 b(Stimulus/Response)31 b(sequence:)47
b(The)34 b(pr)o(ogram)f(will)h(parse)f(an)h(image)g(of)g(car)h(in)f
(PDF)g(format)g(and)g(output)f(a)86 557 y(number)22 b(of)h(per)o
(centages)d(assessing)g(what)i(the)g(possible)f(make)h(and)g(model)g
(combination)g(might)g(be)g(for)h(the)f(vehicle.)86 701
y(3.2.8.3)77 b(Functional)17 b(Requir)o(ements:)30 b(The)17
b(pr)o(ogram)g(must)f(be)h(able)g(to)h(detect)f(the)g(make)g(and)h
(model)g(of)g(a)f(vehicle)g(r)o(egar)o(dless)86 845 y(of)23
b(the)f(make)g(and)g(model)g(so)g(long)h(as)e(the)h(pictur)o(e)f(is)h
(of)h(a)f(car)-6 b(,)22 b(and)g(is)g(submitted)f(in)h(PDF)g(format.)
-150 1391 y Fd(3.3)79 b(P)n(erf)n(ormance)23 b(requirements)-150
1633 y Fe(This)h(pr)o(ogram)h(will)g(utilize)g(deep)g(learning)g
(algorithms)g(to)g(achieve)f(all)h(featur)o(es)f(except)h(for)h(3.2.5.)
d(T)-7 b(o)25 b(do)h(so,)e(the)h(pr)o(ogram)g(must)-150
1778 y(r)o(un)h(continuously)g(for)g(extended)h(periods)e(of)i(time)e
(in)h(or)o(der)h(to)e(ensur)o(e)g(optimal)g(learning)h(time)g(frames.)f
(The)g(pr)o(ogram)g(must)g(be)-150 1922 y(able)19 b(to)i(catch)e(err)o
(ors)i(and)f(continue)g(r)o(unning)h(unless)e(the)h(err)o(or)g(is)g
(fatal.)f(Segmentation)g(faults,)g(memory)i(depletion)f(and)g(har)o
(dwar)o(e)-150 2066 y(err)o(ors)i(ar)o(e)g(all)g(consider)o(ed)g
(fatal,)g(all)f(other)i(err)o(ors)f(must)f(be)h(caught,)f(handled,)i
(and)f(noti\002ed)h(to)f(the)g(user)-6 b(.)-150 2412
y Fd(3.4)79 b(Design)23 b(Constraints)-150 2655 y Fe(The)29
b(pr)o(ogram)f(is)h(fr)o(ee)g(of)g(design)g(constraints)g(so)g(long)g
(as)f(the)h(interface)g(ensur)o(es)f(ease)g(of)i(access)e(and)h
(interaction)g(between)f(the)-150 2799 y(dif)o(fer)o(ent)18
b(components)g(for)h(all)f(end)g(users.)f(This)h(pertains)f(to)h(the)g
(ease)f(of)i(submission)d(of)j(pictur)o(es)e(and)h(documents)g(to)g
(the)g(softwar)o(e,)-150 2943 y(as)j(well)i(as)e(the)h(pr)o(esentation)
e(of)j(all)f(r)o(esults)f(in)h(a)g(r)o(eadable)f(and)h(compr)o
(ehensive)f(manner)-6 b(.)-150 3290 y Fd(3.5)79 b(Software)23
b(system)f(attrib)n(utes)-150 3532 y Fe(The)28 b(pr)o(ogram)f(will)h(r)
o(equir)o(e)g(a)f(platform)h(in)g(which)g(to)g(r)o(un)h(uninterr)o
(upted)f(for)h(extended)f(periods)g(of)g(time.)g(The)f(platform)h(must)
-150 3676 y(be)e(accessible)g(to)h(ensur)o(e)f(that)g(modi\002cation)h
(can)f(be)h(made)f(whenever)h(deemed)g(necessary)-9 b(.)26
b(The)g(platform)h(must)f(be)g(portable)g(to)-150 3820
y(ensur)o(e)20 b(that)f(the)h(softwar)o(e)g(can)h(be)f(deployed)h(in)f
(a)g(wide)h(range)f(of)h(envir)o(onments.)f(Finally)-9
b(,)20 b(the)g(platform)g(must)g(be)g(able)g(to)g(support)-150
3965 y(heavy)h(usage)g(of)i(memory)g(r)o(esour)o(ces)e(to)h(ensur)o(e)f
(the)h(softwar)o(e)f(does)i(not)f(encounter)g(depletion)g(of)h(memory)g
(issues.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 9 10
TeXDict begin 9 9 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fi(9)p 0 TeXcolorgray -148 -144 a Fg(4)96 b(A)t
Fh(P)t(P)t(E)t(N)t(D)t(I)t(X)-150 99 y Fe(This)24 b(section)g(details)g
(the)g(gr)o(oups)f(schedule)h(in)h(or)o(der)g(to)f(complete)g(the)h
(tasks)e(per)h(the)g(school)h(year)f(of)h(2017.)e(Included)h(is)g(a)g
(Gantt)-150 243 y(chart)e(detailing)g(what)g(the)g(speci\002c)f(task)g
(is)h(and)g(the)g(time)g(frame)g(over)h(which)f(they'r)o(e)g(scheduled)
g(to)g(take)g(place.)1607 339 y

 1607 339 a 1607 339 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 255.12126 340.16153 0.0 -255.12126 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 170.08076 -127.56062 ] concat

 pgfs



 0 setgray

1607 339 a


 pgfr

 restore

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 14.17339 -56.69362 moveto

 14.17339 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 28.34679 -56.69362 moveto

 28.34679 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 42.52019 -56.69362 moveto

 42.52019 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 56.69359 -56.69362 moveto

 56.69359 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 70.86697 -56.69362 moveto

 70.86697 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 85.04037 -56.69362 moveto

 85.04037 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 99.21378 -56.69362 moveto

 99.21378 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 113.38718 -56.69362 moveto

 113.38718 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 127.56056 -56.69362 moveto

 127.56056 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 141.73396 -56.69362 moveto

 141.73396 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 155.90736 -56.69362 moveto

 155.90736 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 170.08076 -56.69362 moveto

 170.08076 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 184.25415 -56.69362 moveto

 184.25415 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 198.42755 -56.69362 moveto

 198.42755 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 212.60095 -56.69362 moveto

 212.60095 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 226.77435 -56.69362 moveto

 226.77435 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 240.94775 -56.69362 moveto

 240.94775 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 255.12114 -56.69362 moveto

 255.12114 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 269.29454 -56.69362 moveto

 269.29454 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 283.46794 -56.69362 moveto

 283.46794 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 297.64134 -56.69362 moveto

 297.64134 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 311.81473 -56.69362 moveto

 311.81473 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 325.98813 -56.69362 moveto

 325.98813 -255.12128 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -56.69362 moveto

 340.16153 -56.69362 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -85.04042 moveto

 340.16153 -85.04042 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -113.38724 moveto

 340.16153 -113.38724 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -141.73404 moveto

 340.16153 -141.73404 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -170.08086 moveto

 340.16153 -170.08086 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -198.42766 moveto

 340.16153 -198.42766 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -226.77448 moveto

 340.16153 -226.77448 lineto

 pgfstr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 0.0 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 21.26009 -8.50412 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 16.76004 -11.61813 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(11)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 42.52019 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 63.78027 -8.50412 ] concat

 pgfs



 0 setgray
 1607
339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 59.28023 -11.61813 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(12)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 85.04037 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 106.30046 -8.50412 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 104.05045 -11.61813 ] concat

 pgfs



 0 setgray
 1607 339
a Fa(1)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 127.56056 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 148.82066 -8.50412 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 146.57065 -11.55064 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(2)1607 339
y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 170.08076 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 191.34085 -8.50412 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 189.09084 -11.50563 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(3)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 212.60095 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 233.86104 -8.50412 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 231.61102 -11.61813 ] concat

 pgfs



 0 setgray
 1607
339 a Fa(4)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 255.12114 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 276.38123 -8.50412 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 274.13123 -11.50563 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(5)1607
339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 42.52017 297.64134 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 318.90143 -8.50412 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 316.65141 -11.50563 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(6)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 0.0 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 7.08669 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 4.83667 -39.96495 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(1)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 14.17339 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 21.26009 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 19.01007 -39.89745 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(2)1607
339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 28.34679 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 35.43347 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 33.18346 -39.85243 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(3)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 42.52019 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 49.60687 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 47.35686 -39.96495 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(4)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 56.69359 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 63.78027 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 61.53026 -39.85243 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(5)1607
339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 70.86697 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 77.95367 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 75.70366 -39.85243 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(6)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 85.04037 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 92.12706 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 89.87706 -39.89745 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(7)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 99.21378 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 106.30046 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 104.05045 -39.85243 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(8)1607
339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 113.38718 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 120.47386 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 118.22385 -39.85243 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(9)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 127.56056 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 134.64726 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 130.14722 -39.91994 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(10)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 141.73396 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 148.82066 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 144.32062 -39.96495 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(11)1607
339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 155.90736 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 162.99405 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 158.494 -39.96495 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(12)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 170.08076 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 177.16745 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 172.6674 -39.91994 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(13)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 184.25415 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 191.34085 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 186.8408 -39.96495 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(14)1607
339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 198.42755 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 205.51425 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 201.0142 -39.91994 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(15)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 212.60095 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 219.68764 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 215.1876 -39.91994 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(16)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 226.77435 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 233.86104 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 229.361 -39.96495 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(17)1607
339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 240.94775 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 248.03444 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 243.5344 -39.91994 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(18)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 255.12114 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 262.20784 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 257.7078 -39.91994 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(19)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 269.29454 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 276.38123 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 271.8812 -39.85243 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(20)1607
339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 283.46794 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 290.55463 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 286.05458 -39.96495 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(21)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 297.64134 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 304.72803 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339
a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 300.22798 -39.89745 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(22)1607 339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 311.81473 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 318.90143 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 314.40138 -39.85243 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(23)1607
339 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 14.17337 325.98813 -45.35506 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 333.07483 -36.85092 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 328.57478 -39.96495 ] concat

 pgfs



 0 setgray
 1607 339 a Fa(24)1607 339 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0 1 0 setrgbcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0 1 0 setrgbcolor}def

 11.33855 56.69359 0.0 -76.53629 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 28.34679 -70.867 ] concat

 pgfs



 0 setgray
 1607 339
a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -153.64613 -74.329 ] concat

 pgfs



 0 setgray
 1607 339 a Fe(Study)g(machine)g(learning)g(framework)1607
339 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 0 setcmykcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 0 setcmykcolor}def

 11.33855 42.52017 14.17339 -104.88309 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 35.43347 -99.21382 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -164.6182 -102.67581 ] concat

 pgfs



 0 setgray
 1607 339 a Fe(Build)h(small)e(textur)o(e)g(detecting)i
(pr)o(ogram)1607 339 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{1 0.5 0 setrgbcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{1 0.5 0 setrgbcolor}def

 11.33855 283.46794 56.69359 -133.2299 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 198.42755 -127.56062 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -175.16307 -131.02263 ] concat

 pgfs



 0 setgray
 1607 339 a Fe(Study)f(on)g(textur)o
(e)f(detecting)i(A.I)e(algorithm)1607 339 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 setrgbcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0 0 1 setrgbcolor}def

 11.33855 99.21376 70.86697 -161.5767 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 120.47386 -155.90744 ] concat

 pgfs



 0 setgray
 1607 339
a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -207.71027 -159.36943 ] concat

 pgfs



 0 setgray
 1607 339 a Fe(Build)i(handwritten)f(signatur)o(es)f(detecting)h
(softwar)o(e)1607 339 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.75 0 0.25 setrgbcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.75 0 0.25 setrgbcolor}def

 11.33855 113.38718 170.08076 -189.92352 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 226.77435 -184.25424 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -206.23804 -187.71625 ] concat

 pgfs



 0 setgray
 1607 339 a Fe(Adapt)f(pr)o(ogram)h
(to)g(dif)o(fer)o(ent)h(format)f(of)h(document)1607 339
y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 /pgffc{0.75 0.5 0.25 setrgbcolor}def

 save

 /pgffc{1 setgray}def

 /pgffc{0.75 0.5 0.25 setrgbcolor}def

 11.33855 141.73396 198.42755 -218.27034 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 269.29454 -212.60106 ] concat

 pgfs



 0 setgray
 1607 339 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -98.00449 -216.06305 ] concat

 pgfs



 0 setgray
 1607 339 a Fe(Optimize)f(the)g(pr)o(ogram)1607
339 y


 pgfr

 restore

 restore

 56.89284 -70.867 moveto

 61.56581 -70.867 lineto

 62.11606 -70.867 62.56209 -71.31305 62.56209 -71.86328 curveto

 62.56209 -98.21753 lineto

 62.56209 -98.76776 62.11606 -99.2138 61.56581 -99.2138 curveto

 51.82135 -99.2138 lineto

 51.27112 -99.2138 50.82507 -99.65985 50.82507 -100.21008 curveto

 50.82507 -126.56435 lineto

 50.82507 -127.1146 51.27112 -127.56062 51.82135 -127.56062 curveto

 52.90779 -127.56062 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 52.90779 -127.56062 ] concat

 save 3.58653 0.0 moveto 2.52383 0.19925 0.797 0.797 -0.3985 1.49438
curveto -0.3985 -1.49438 lineto 0.797 -0.797 2.52383 -0.19925 3.58653
0.0 curveto pgffill restore

 restore

 56.89282 -99.21382 moveto

 62.784 -99.21382 lineto

 63.33423 -99.21382 63.78027 -99.65987 63.78027 -100.2101 curveto

 63.78027 -154.91116 lineto

 63.78027 -155.4614 64.22632 -155.90744 64.77655 -155.90744 curveto

 67.08119 -155.90744 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 67.08119 -155.90744 ] concat

 save 3.58653 0.0 moveto 2.52383 0.19925 0.797 0.797 -0.3985 1.49438
curveto -0.3985 -1.49438 lineto 0.797 -0.797 2.52383 -0.19925 3.58653
0.0 curveto pgffill restore

 restore

 170.28 -155.90744 moveto

 174.95297 -155.90744 lineto

 175.50322 -155.90744 175.94925 -156.35349 175.94925 -156.90372 curveto

 175.94923 -169.08456 lineto

 175.94923 -169.6348 175.5032 -170.08084 174.95296 -170.08084 curveto

 165.20853 -170.08084 lineto

 164.6583 -170.08084 164.21225 -170.52687 164.21225 -171.07712 curveto

 164.21225 -183.25797 lineto

 164.21225 -183.80821 164.6583 -184.25424 165.20853 -184.25424 curveto

 166.29497 -184.25424 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 166.29497 -184.25424 ] concat

 save 3.58653 0.0 moveto 2.52383 0.19925 0.797 0.797 -0.3985 1.49438
curveto -0.3985 -1.49438 lineto 0.797 -0.797 2.52383 -0.19925 3.58653
0.0 curveto pgffill restore

 restore

 170.28 -155.90744 moveto

 183.25786 -155.90744 lineto

 183.8081 -155.90744 184.25414 -156.35349 184.25414 -156.90372 curveto

 184.25414 -211.60478 lineto

 184.25414 -212.15501 184.70018 -212.60106 185.25041 -212.60106 curveto

 194.64175 -212.60106 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 194.64175 -212.60106 ] concat

 save 3.58653 0.0 moveto 2.52383 0.19925 0.797 0.797 -0.3985 1.49438
curveto -0.3985 -1.49438 lineto 0.797 -0.797 2.52383 -0.19925 3.58653
0.0 curveto pgffill restore

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 -150 2683 a Fe(Practice)p 0 1 0 TeXcolorrgb 0 1 0
TeXcolorrgb -31 2943 a(\226)p 0 1 0 TeXcolorrgb 248 w(Study)f(machine)h
(learning)h(framework)p 0 0 1 0 TeXcolorcmyk 0 0 1 0
TeXcolorcmyk -31 3088 a(\226)p 0 0 1 0 TeXcolorcmyk 248
w(Build)g(Small)e(textur)o(e)g(detecting)h(pr)o(ogram)p
0 1 0 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray -150
3348 a(Main:)g(Build)g(\002rst)g(pr)o(ototype)p 1 0.648 0
TeXcolorrgb 1 0.648 0 TeXcolorrgb -31 3609 a(\226)p 1 0.648 0
TeXcolorrgb 248 w(Study)f(on)i(textur)o(e)e(detecting)h(A.I.)f
(algorithm)p 0 0 1 TeXcolorrgb 0 0 1 TeXcolorrgb -31
3753 a(\226)p 0 0 1 TeXcolorrgb 248 w(Build)i(pr)o(ogram)e(that)h
(detects)f(handwritten)h(signatur)o(es)f(fr)o(om)h(document)p
0.75 0 0.25 TeXcolorrgb 0.75 0 0.25 TeXcolorrgb -31 3897
a(\226)p 0.75 0 0.25 TeXcolorrgb 248 w(Adapt)f(pr)o(ogram)h(to)g
(accept)f(ranging)h(document)h(formats)p 0 TeXcolorgray
0 TeXcolorgray 346 4085 a(\226)p 0 TeXcolorgray 248 w(Data)e(feeding)p
0 TeXcolorgray 346 4230 a(\226)p 0 TeXcolorgray 248 w(Check)h(License)h
(information)p 0 TeXcolorgray 346 4374 a(\226)p 0 TeXcolorgray
248 w(Check)f(permit)g(information)p 0.75 0 0.25 TeXcolorrgb
0.75 0.5 0.25 TeXcolorrgb 0.75 0.5 0.25 TeXcolorrgb -31
4562 a(\226)p 0.75 0.5 0.25 TeXcolorrgb 248 w(Optimize)f(the)h(pr)o
(ogram)p 0 TeXcolorgray 0 TeXcolorgray 346 4751 a(\226)p
0 TeXcolorgray 248 w(Debugging)p 0.75 0.5 0.25 TeXcolorrgb
0.75 0 0.25 TeXcolorrgb 0 0 1 TeXcolorrgb 1 0.648 0 TeXcolorrgb
0 TeXcolorgray -150 5055 a(Str)o(etch)f(Goals)h(\(to)h(be)f(scheduled)g
(after)g(completion)g(of)h(original)f(goals\))p 0 TeXcolorgray
-31 5316 a(\226)p 0 TeXcolorgray 248 w(Detect)g(the)g(model)g(of)h(a)f
(vehicle)p 0 TeXcolorgray -31 5460 a(\226)p 0 TeXcolorgray
248 w(Detect)g(the)g(make)f(of)i(a)f(vehicle)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 10 11
TeXDict begin 10 10 bop 0 TeXcolorgray 0 TeXcolorgray
3985 -296 a Fi(10)p 0 TeXcolorgray 0 TeXcolorgray -31
-144 a Fe(\226)p 0 TeXcolorgray 248 w(Detect/r)o(ead)22
b(license)f(plate)h(information)p 0 TeXcolorgray -31
0 a(\226)p 0 TeXcolorgray 248 w(Detect/r)o(ead)g(license)f(and)i
(permit)e(information)p 0 TeXcolorgray -31 145 a(\226)p
0 TeXcolorgray 248 w(Gather)h(information)h(of)g(the)f(condition)h(of)f
(the)g(vehicle)g(\(e.g.:)g(dents,)g(cracks)g(and)g(scratches\))p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
